//plugins {
//    id 'org.jetbrains.intellij.platform' version '2.1.0'
//}
version = project.version

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    //apply plugin: 'org.jetbrains.intellij.platform'
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(24)
        }
    }
    repositories {
        mavenCentral()
    }
}

subprojects {
    //build {
    //}
    sourceSets {
        main {
            java.srcDir 'src'
            resources.srcDir 'resources'
        }
        test {
            java.srcDir 'test_src'
            resources.srcDir 'test_resources'
        }
    }
    dependencies {
        //implementation("com.google.code.gson:gson:2.10.1")
        //implementation("it.unimi.dsi:fastutil:8.5.6")
        compileOnly 'org.projectlombok:lombok:1.18.38'
        annotationProcessor 'org.projectlombok:lombok:1.18.38'
        testCompileOnly 'org.projectlombok:lombok:1.18.38'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'
    }
}

//sourceSets {
//    main {
//        resources {
//            srcDirs = ["src/main/resources"]
//            exclude "java/**"
//        }
//    }
//}

//dependsOn "build"

tasks.register('buildAll') {
    group "custom"
    dependsOn "clean", subprojects.tasks.build
    subprojects.forEach {
        Project p = it;
        p.tasks.jar {
            destinationDirectory.set(file("out/" + p.name))
        }
        if (!p.useShadowJar) {
            p.tasks.jar {
                manifest {
                    attributes(
                            "Main-Class": p.property("mainClass"),
                            //'Class-Path': configurations.runtimeClasspath.files.collect { "lib/" + it.name }.join(' ')
                            'Class-Path': p.configurations.runtimeClasspath.collect { "lib/" + it.name }.join(' ')
                    )
                }
            }.doLast {
                copy {
                    from p.configurations.runtimeClasspath
                    into "out/" + p.name + "/lib"
                }
            }
        } else {
            manifest {
                attributes(
                        "Main-Class": p.property("mainClass")
                )
            }
        }
    }
}

//jar {
//    from {
//        Set<?> set = new HashSet<>();
//        set.addAll(project("skydex").sourceSets.main.output);
//        set.addAll(project("skdslib").sourceSets.main.output);
//        set.addAll(project("sdauthdb").sourceSets.main.output);
//        return set;
//    }
//    manifest {
//        attributes(
//                "Main-Class": "net.skds.skydex.SkyDexServer",
//                //'Class-Path': configurations.runtimeClasspath.files.collect { "lib/" + it.name }.join(' ')
//                'Class-Path': new File("build/libs/lib").list().collect { "lib/" + it }.join(' ')
//        )
//    }
//}
