package net.skds.jvk.generated.enums;

import net.skds.lib2.annotations.AutoGenerated;

@AutoGenerated
public final class VkImageLayout {
	
	/** Implicit layout an image is when its contents are undefined due to various reasons (e.g. right after creation) **/
	public static final int VK_IMAGE_LAYOUT_UNDEFINED = 0;
	/** General layout when image can be used for any kind of access **/
	public static final int VK_IMAGE_LAYOUT_GENERAL = 1;
	/** Optimal layout when image is only used for color attachment read/write **/
	public static final int VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = 2;
	/** Optimal layout when image is only used for depth/stencil attachment read/write **/
	public static final int VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3;
	/** Optimal layout when image is used for read only depth/stencil attachment and shader access **/
	public static final int VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = 4;
	/** Optimal layout when image is used for read only shader access **/
	public static final int VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = 5;
	/** Optimal layout when image is used only as source of transfer operations **/
	public static final int VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = 6;
	/** Optimal layout when image is used only as destination of transfer operations **/
	public static final int VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = 7;
	/** Initial layout used when the data is populated by the CPU **/
	public static final int VK_IMAGE_LAYOUT_PREINITIALIZED = 8;
	public static final int VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = 1000117000;
	public static final int VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = 1000117001;
	public static final int VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL = 1000241000;
	public static final int VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL = 1000241001;
	public static final int VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL = 1000241002;
	public static final int VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL = 1000241003;
	public static final int VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL = 1000314000;
	public static final int VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL = 1000314001;
	public static final int VK_IMAGE_LAYOUT_RENDERING_LOCAL_READ = 1000232000;
	public static final int VK_IMAGE_LAYOUT_PRESENT_SRC_KHR = 1000001002;
	public static final int VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR = 1000024000;
	public static final int VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR = 1000024001;
	public static final int VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR = 1000024002;
	public static final int VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR = 1000111000;
	public static final int VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT = 1000218000;
	public static final int VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR = 1000164003;
	public static final int VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR = 1000299000;
	public static final int VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR = 1000299001;
	public static final int VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR = 1000299002;
	public static final int VK_IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT = 1000339000;
	public static final int VK_IMAGE_LAYOUT_TENSOR_ALIASING_ARM = 1000460000;
	public static final int VK_IMAGE_LAYOUT_VIDEO_ENCODE_QUANTIZATION_MAP_KHR = 1000553000;
	public static final int VK_IMAGE_LAYOUT_ZERO_INITIALIZED_EXT = 1000620000;
}