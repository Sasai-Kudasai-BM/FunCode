package net.skds.jvk.generated.enums;
import net.skds.lib2.utils.annotations.AutoGenerated;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkMemoryPropertyFlagBits {


	/**
	* If otherwise stated, then allocate memory on device
	*/
	public static final int VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT = 1;

	/**
	* Memory is mappable by host
	*/
	public static final int VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT = 2;

	/**
	* Memory will have i/o coherency. If not set, application may need to use vkFlushMappedMemoryRanges and vkInvalidateMappedMemoryRanges to flush/invalidate host cache
	*/
	public static final int VK_MEMORY_PROPERTY_HOST_COHERENT_BIT = 4;

	/**
	* Memory will be cached by the host
	*/
	public static final int VK_MEMORY_PROPERTY_HOST_CACHED_BIT = 8;

	/**
	* Memory may be allocated by the driver when it is required
	*/
	public static final int VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT = 16;

	/**
	* Memory is protected
	*/
	public static final int VK_MEMORY_PROPERTY_PROTECTED_BIT = 32;

	public static final int VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD = 64;

	public static final int VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD = 128;

	public static final int VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV = 256;

}