package net.skds.jvk.generated;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VK14 extends VK13 {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_4_FEATURES = 55;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_4_PROPERTIES = 56;
	
	// Features now required from VK_VERSION_1_0
	// Features now required from VK_VERSION_1_1
	// Features now required from VK_VERSION_1_2
	// Promoted from VK_KHR_global_priority (extension 189)
	
	public static final int VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO = 1000174000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES = 1000388000;
	public static final int VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES = 1000388001;
	public static final int VK_ERROR_NOT_PERMITTED = 1000174001;
	public static final int VK_MAX_GLOBAL_PRIORITY_SIZE = 16;
	
	// Promoted from VK_KHR_load_store_op_none (extension 527) 'Roadmap 2024' (VK_ATTACHMENT_STORE_OP_NONE is defined in Vulkan 1.3)
	
	public static final int VK_ATTACHMENT_LOAD_OP_NONE = 1000400000;
	
	// Promoted from VK_KHR_shader_subgroup_rotate (extension 417) 'Roadmap 2024'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES = 1000416000;
	public static final int VK_SUBGROUP_FEATURE_ROTATE_BIT = 512;
	public static final int VK_SUBGROUP_FEATURE_ROTATE_CLUSTERED_BIT = 1024;
	
	// Promoted from VK_KHR_shader_float_controls2 (extension 529) 'Roadmap 2024'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES = 1000528000;
	
	// Promoted from VK_KHR_shader_expect_assume (extension 545) 'Roadmap 2024'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES = 1000544000;
	
	// Promoted from VK_KHR_line_rasterization (extension 535) 'Roadmap 2024'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES = 1000259000;
	public static final int VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO = 1000259001;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES = 1000259002;
	public static final int VK_DYNAMIC_STATE_LINE_STIPPLE = 1000259000;
	private static final MethodHandle vkCmdSetLineStipple = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdSetLineStipple", VOID, LONG, INT, SHORT);
	
	@NativeType("void")
	public static void vkCmdSetLineStipple(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("uint32_t") int lineStippleFactor, @NativeType("uint16_t") short lineStipplePattern) {
		try {
			vkCmdSetLineStipple.invokeExact(commandBuffer, lineStippleFactor, lineStipplePattern);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	// Promoted from VK_KHR_vertex_attribute_divisor (extension 526) 'Roadmap 2024'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES = 1000525000;
	public static final int VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO = 1000190001;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES = 1000190002;
	
	// Promoted from VK_KHR_index_type_uint8 (extension 534) 'Roadmap 2024'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES = 1000265000;
	public static final int VK_INDEX_TYPE_UINT8 = 1000265000;
	
	// Promoted from VK_KHR_map_memory2 (extension 272) 'Roadmap 2024'
	
	public static final int VK_STRUCTURE_TYPE_MEMORY_MAP_INFO = 1000271000;
	public static final int VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO = 1000271001;
	private static final MethodHandle vkMapMemory2 = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkMapMemory2", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_MEMORY_MAP_FAILED
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkMapMemory2(@NativeType("VkDevice*") long device, @NativeType("VkMemoryMapInfo*") long pMemoryMapInfo, /* optional */ @NativeType("void*") long ppData) {
		try {
			return (int) vkMapMemory2.invokeExact(device, pMemoryMapInfo, ppData);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkUnmapMemory2 = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkUnmapMemory2", INT, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_MEMORY_MAP_FAILED
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkUnmapMemory2(@NativeType("VkDevice*") long device, @NativeType("VkMemoryUnmapInfo*") long pMemoryUnmapInfo) {
		try {
			return (int) vkUnmapMemory2.invokeExact(device, pMemoryUnmapInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	// Promoted from VK_KHR_maintenance5 (extension 471) 'Roadmap 2024'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES = 1000470000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES = 1000470001;
	public static final int VK_STRUCTURE_TYPE_RENDERING_AREA_INFO = 1000470003;
	public static final int VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO = 1000470004;
	public static final int VK_FORMAT_A1B5G5R5_UNORM_PACK16 = 1000470000;
	public static final int VK_FORMAT_A8_UNORM = 1000470001;
	private static final MethodHandle vkCmdBindIndexBuffer2 = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdBindIndexBuffer2", VOID, LONG, LONG, LONG, LONG, INT);
	
	@NativeType("void")
	public static void vkCmdBindIndexBuffer2(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, /* optional */ @NativeType("VkBuffer*") long buffer, @NativeType("VkDeviceSize") long offset, @NativeType("VkDeviceSize") long size, @NativeType("VkIndexType") int indexType) {
		try {
			vkCmdBindIndexBuffer2.invokeExact(commandBuffer, buffer, offset, size, indexType);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetRenderingAreaGranularity = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetRenderingAreaGranularity", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkGetRenderingAreaGranularity(@NativeType("VkDevice*") long device, @NativeType("VkRenderingAreaInfo*") long pRenderingAreaInfo, @NativeType("VkExtent2D*") long pGranularity) {
		try {
			vkGetRenderingAreaGranularity.invokeExact(device, pRenderingAreaInfo, pGranularity);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetDeviceImageSubresourceLayout = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetDeviceImageSubresourceLayout", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkGetDeviceImageSubresourceLayout(@NativeType("VkDevice*") long device, @NativeType("VkDeviceImageSubresourceInfo*") long pInfo, @NativeType("VkSubresourceLayout2*") long pLayout) {
		try {
			vkGetDeviceImageSubresourceLayout.invokeExact(device, pInfo, pLayout);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetImageSubresourceLayout2 = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetImageSubresourceLayout2", VOID, LONG, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkGetImageSubresourceLayout2(@NativeType("VkDevice*") long device, @NativeType("VkImage*") long image, @NativeType("VkImageSubresource2*") long pSubresource, @NativeType("VkSubresourceLayout2*") long pLayout) {
		try {
			vkGetImageSubresourceLayout2.invokeExact(device, image, pSubresource, pLayout);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	public static final int VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2 = 1000338002;
	public static final int VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2 = 1000338003;
	public static final int VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO = 1000470005;
	public static final int VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO = 1000470006;
	public static final long VK_BUFFER_USAGE_2_SHADER_DEVICE_ADDRESS_BIT = 131072L;
	
	// Promoted as an interaction between VK_KHR_maintenance5 (extension 471) 'Roadmap 2024' and VK_EXT_pipeline_protected_access (extension 467) 'additional functionality'
	// Promoted from VK_KHR_push_descriptor (extension 81) 'Roadmap 2024'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES = 1000080000;
	public static final int VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT = 1;
	private static final MethodHandle vkCmdPushDescriptorSet = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdPushDescriptorSet", VOID, LONG, INT, LONG, INT, INT, LONG);
	
	@NativeType("void")
	public static void vkCmdPushDescriptorSet(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkPipelineBindPoint") int pipelineBindPoint, @NativeType("VkPipelineLayout*") long layout, @NativeType("uint32_t") int set, @NativeType("uint32_t") int descriptorWriteCount, @NativeType("VkWriteDescriptorSet*") long pDescriptorWrites) {
		try {
			vkCmdPushDescriptorSet.invokeExact(commandBuffer, pipelineBindPoint, layout, set, descriptorWriteCount, pDescriptorWrites);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdPushDescriptorSetWithTemplate = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdPushDescriptorSetWithTemplate", VOID, LONG, LONG, LONG, INT, LONG);
	
	@NativeType("void")
	public static void vkCmdPushDescriptorSetWithTemplate(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkDescriptorUpdateTemplate*") long descriptorUpdateTemplate, @NativeType("VkPipelineLayout*") long layout, @NativeType("uint32_t") int set, @NativeType("void*") long pData) {
		try {
			vkCmdPushDescriptorSetWithTemplate.invokeExact(commandBuffer, descriptorUpdateTemplate, layout, set, pData);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	public static final int VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS = 1;
	
	// Promoted from VK_KHR_dynamic_rendering_local_read (extension 233) 'Roadmap 2024'
	
	public static final int VK_IMAGE_LAYOUT_RENDERING_LOCAL_READ = 1000232000;
	private static final MethodHandle vkCmdSetRenderingAttachmentLocations = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdSetRenderingAttachmentLocations", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdSetRenderingAttachmentLocations(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkRenderingAttachmentLocationInfo*") long pLocationInfo) {
		try {
			vkCmdSetRenderingAttachmentLocations.invokeExact(commandBuffer, pLocationInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdSetRenderingInputAttachmentIndices = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdSetRenderingInputAttachmentIndices", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdSetRenderingInputAttachmentIndices(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkRenderingInputAttachmentIndexInfo*") long pInputAttachmentIndexInfo) {
		try {
			vkCmdSetRenderingInputAttachmentIndices.invokeExact(commandBuffer, pInputAttachmentIndexInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES = 1000232000;
	public static final int VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO = 1000232001;
	public static final int VK_STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO = 1000232002;
	
	// Promoted from VK_KHR_maintenance6 (extension 546) 'additional functionality'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES = 1000545000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES = 1000545001;
	public static final int VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS = 1000545002;
	public static final int VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO = 1000545003;
	public static final int VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO = 1000545004;
	private static final MethodHandle vkCmdBindDescriptorSets2 = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdBindDescriptorSets2", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdBindDescriptorSets2(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkBindDescriptorSetsInfo*") long pBindDescriptorSetsInfo) {
		try {
			vkCmdBindDescriptorSets2.invokeExact(commandBuffer, pBindDescriptorSetsInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdPushConstants2 = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdPushConstants2", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdPushConstants2(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkPushConstantsInfo*") long pPushConstantsInfo) {
		try {
			vkCmdPushConstants2.invokeExact(commandBuffer, pPushConstantsInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	public static final int VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO = 1000545005;
	public static final int VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO = 1000545006;
	private static final MethodHandle vkCmdPushDescriptorSet2 = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdPushDescriptorSet2", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdPushDescriptorSet2(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkPushDescriptorSetInfo*") long pPushDescriptorSetInfo) {
		try {
			vkCmdPushDescriptorSet2.invokeExact(commandBuffer, pPushDescriptorSetInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdPushDescriptorSetWithTemplate2 = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdPushDescriptorSetWithTemplate2", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdPushDescriptorSetWithTemplate2(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkPushDescriptorSetWithTemplateInfo*") long pPushDescriptorSetWithTemplateInfo) {
		try {
			vkCmdPushDescriptorSetWithTemplate2.invokeExact(commandBuffer, pPushDescriptorSetWithTemplateInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	// Promoted from VK_EXT_pipeline_protected_access (extension 467) 'additional functionality'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES = 1000466000;
	public static final int VK_PIPELINE_CREATE_NO_PROTECTED_ACCESS_BIT = 134217728;
	public static final int VK_PIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT = 1073741824;
	
	// Promoted from VK_EXT_pipeline_robustness (extension 69) 'additional functionality'
	
	public static final int VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO = 1000068000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES = 1000068001;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES = 1000068002;
	
	// Promoted (as optional feature) from VK_EXT_host_image_copy (extension 271) 'streaming transfers'
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES = 1000270000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES = 1000270001;
	public static final int VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY = 1000270002;
	public static final int VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY = 1000270003;
	public static final int VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO = 1000270004;
	public static final int VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO = 1000270005;
	public static final int VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO = 1000270006;
	public static final int VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO = 1000270007;
	public static final int VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE = 1000270008;
	public static final int VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY = 1000270009;
	public static final int VK_IMAGE_USAGE_HOST_TRANSFER_BIT = 4194304;
	public static final long VK_FORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT = 70368744177664L;
	private static final MethodHandle vkCopyMemoryToImage = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCopyMemoryToImage", INT, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_MEMORY_MAP_FAILED
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkCopyMemoryToImage(@NativeType("VkDevice*") long device, @NativeType("VkCopyMemoryToImageInfo*") long pCopyMemoryToImageInfo) {
		try {
			return (int) vkCopyMemoryToImage.invokeExact(device, pCopyMemoryToImageInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCopyImageToMemory = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCopyImageToMemory", INT, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_MEMORY_MAP_FAILED
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkCopyImageToMemory(@NativeType("VkDevice*") long device, @NativeType("VkCopyImageToMemoryInfo*") long pCopyImageToMemoryInfo) {
		try {
			return (int) vkCopyImageToMemory.invokeExact(device, pCopyImageToMemoryInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCopyImageToImage = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCopyImageToImage", INT, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_MEMORY_MAP_FAILED
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkCopyImageToImage(@NativeType("VkDevice*") long device, @NativeType("VkCopyImageToImageInfo*") long pCopyImageToImageInfo) {
		try {
			return (int) vkCopyImageToImage.invokeExact(device, pCopyImageToImageInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkTransitionImageLayout = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkTransitionImageLayout", INT, LONG, INT, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_MEMORY_MAP_FAILED
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkTransitionImageLayout(@NativeType("VkDevice*") long device, @NativeType("uint32_t") int transitionCount, @NativeType("VkHostImageLayoutTransitionInfo*") long pTransitions) {
		try {
			return (int) vkTransitionImageLayout.invokeExact(device, transitionCount, pTransitions);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}