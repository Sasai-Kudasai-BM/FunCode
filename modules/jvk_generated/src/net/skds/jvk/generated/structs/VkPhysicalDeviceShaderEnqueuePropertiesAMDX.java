package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static java.lang.foreign.ValueLayout.*;
import static net.skds.lib2.natives.SafeLinker.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkPhysicalDeviceShaderEnqueuePropertiesAMDX {
* 	VkStructureType sType;
* 	// pad (4)
* 	void* pNext;
* 	uint32_t maxExecutionGraphDepth;
* 	uint32_t maxExecutionGraphShaderOutputNodes;
* 	uint32_t maxExecutionGraphShaderPayloadSize;
* 	uint32_t maxExecutionGraphShaderPayloadCount;
* 	uint32_t executionGraphDispatchAddressAlignment;
* 	uint32_t[3] maxExecutionGraphWorkgroupCount;
* 	uint32_t maxExecutionGraphWorkgroups;
* 	// pad (4)
* };
*</pre>
**/
@AutoGenerated
public final class VkPhysicalDeviceShaderEnqueuePropertiesAMDX extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			JAVA_INT,
			paddingLayout(4),
			JAVA_LONG,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			sequenceLayout(3, JAVA_INT),
			JAVA_INT,
			paddingLayout(4)
	);
	private static final int S_TYPE_OFFSET = 0;
	private static final int P_NEXT_OFFSET = 8;
	private static final int MAX_EXECUTION_GRAPH_DEPTH_OFFSET = 16;
	private static final int MAX_EXECUTION_GRAPH_SHADER_OUTPUT_NODES_OFFSET = 20;
	private static final int MAX_EXECUTION_GRAPH_SHADER_PAYLOAD_SIZE_OFFSET = 24;
	private static final int MAX_EXECUTION_GRAPH_SHADER_PAYLOAD_COUNT_OFFSET = 28;
	private static final int EXECUTION_GRAPH_DISPATCH_ADDRESS_ALIGNMENT_OFFSET = 32;
	private static final int MAX_EXECUTION_GRAPH_WORKGROUP_COUNT_OFFSET = 36;
	private static final int MAX_EXECUTION_GRAPH_WORKGROUPS_OFFSET = 48;
	
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ENQUEUE_PROPERTIES_AMDX **/
	@NativeType("VkStructureType")
	public int sType() {
		return (int) INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET);
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ENQUEUE_PROPERTIES_AMDX **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX sType(int value) {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, value);
		return this;
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ENQUEUE_PROPERTIES_AMDX **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX sType$Default() {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, 1000134001);
		return this;
	}
	
	/** optional **/
	@NativeType("void*")
	public long pNext() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + P_NEXT_OFFSET);
	}
	
	/** optional **/
	@NativeType("void*")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX pNext(long value) {
		LONG_HANDLE.set(this.segment, this.offset + P_NEXT_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxExecutionGraphDepth() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_EXECUTION_GRAPH_DEPTH_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX maxExecutionGraphDepth(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_EXECUTION_GRAPH_DEPTH_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxExecutionGraphShaderOutputNodes() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_EXECUTION_GRAPH_SHADER_OUTPUT_NODES_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX maxExecutionGraphShaderOutputNodes(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_EXECUTION_GRAPH_SHADER_OUTPUT_NODES_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxExecutionGraphShaderPayloadSize() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_EXECUTION_GRAPH_SHADER_PAYLOAD_SIZE_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX maxExecutionGraphShaderPayloadSize(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_EXECUTION_GRAPH_SHADER_PAYLOAD_SIZE_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxExecutionGraphShaderPayloadCount() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_EXECUTION_GRAPH_SHADER_PAYLOAD_COUNT_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX maxExecutionGraphShaderPayloadCount(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_EXECUTION_GRAPH_SHADER_PAYLOAD_COUNT_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int executionGraphDispatchAddressAlignment() {
		return (int) INT_HANDLE.get(this.segment, this.offset + EXECUTION_GRAPH_DISPATCH_ADDRESS_ALIGNMENT_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX executionGraphDispatchAddressAlignment(int value) {
		INT_HANDLE.set(this.segment, this.offset + EXECUTION_GRAPH_DISPATCH_ADDRESS_ALIGNMENT_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t[3]")
	public int maxExecutionGraphWorkgroupCount(int i) {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_EXECUTION_GRAPH_WORKGROUP_COUNT_OFFSET + JAVA_INT.byteSize() * i);
	}
	
	@NativeType("uint32_t[3]")
	public int[] maxExecutionGraphWorkgroupCountArray() {
		var array = new int[3];
		MemorySegment.copy(this.segment, INT, this.offset + MAX_EXECUTION_GRAPH_WORKGROUP_COUNT_OFFSET, array, 0, array.length);
		return array;
	}
	
	@NativeType("uint32_t[3]")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX maxExecutionGraphWorkgroupCount(int i, int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_EXECUTION_GRAPH_WORKGROUP_COUNT_OFFSET + JAVA_INT.byteSize() * i, value);
		return this;
	}
	
	@NativeType("uint32_t[3]")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX maxExecutionGraphWorkgroupCount(int[] value) {
		MemorySegment.copy(value, 0, this.segment, INT, this.offset + MAX_EXECUTION_GRAPH_WORKGROUP_COUNT_OFFSET, value.length);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxExecutionGraphWorkgroups() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_EXECUTION_GRAPH_WORKGROUPS_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceShaderEnqueuePropertiesAMDX maxExecutionGraphWorkgroups(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_EXECUTION_GRAPH_WORKGROUPS_OFFSET, value);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkPhysicalDeviceShaderEnqueuePropertiesAMDX> {
		
		private static final StructConstructor<VkPhysicalDeviceShaderEnqueuePropertiesAMDX> CONSTRUCTOR = VkPhysicalDeviceShaderEnqueuePropertiesAMDX::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkPhysicalDeviceShaderEnqueuePropertiesAMDX[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkPhysicalDeviceShaderEnqueuePropertiesAMDX[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkPhysicalDeviceShaderEnqueuePropertiesAMDX[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}