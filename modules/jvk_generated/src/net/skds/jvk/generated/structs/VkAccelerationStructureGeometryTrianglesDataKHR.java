package net.skds.jvk.generated.structs;
import net.skds.ninvoker.struct.NativeStructureWrapper;
import net.skds.ninvoker.struct.ArrayLength;
import net.skds.lib2.utils.annotations.AutoGenerated;
import net.skds.jvk.annotation.NativeType;
import net.skds.ninvoker.struct.AbstractNativeStructure;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkAccelerationStructureGeometryTrianglesDataKHR extends AbstractNativeStructure {


	public static final NativeStructureWrapper WRAPPER = new NativeStructureWrapper(VkAccelerationStructureGeometryTrianglesDataKHR.class);

	/**
	* values = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR
	*/
	@NativeType("VkStructureType")
	public int sType;

	/**
	* optional
	*/
	@NativeType("void*")
	public long pNext;

	@NativeType("VkFormat")
	public int vertexFormat;

	@ArrayLength(8)
	@NativeType("VkDeviceOrHostAddressConstKHR")
	public byte[] vertexData;

	@NativeType("VkDeviceSize")
	public long vertexStride;

	@NativeType("uint32_t")
	public int maxVertex;

	@NativeType("VkIndexType")
	public int indexType;

	@ArrayLength(8)
	@NativeType("VkDeviceOrHostAddressConstKHR")
	public byte[] indexData;

	@ArrayLength(8)
	@NativeType("VkDeviceOrHostAddressConstKHR")
	public byte[] transformData;


	@Override
	protected NativeStructureWrapper getWrapper() {
		return WRAPPER;
	}
}