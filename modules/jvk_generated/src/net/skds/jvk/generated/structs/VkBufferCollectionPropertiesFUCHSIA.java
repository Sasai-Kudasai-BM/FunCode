package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.generated.structs.VkSysmemColorSpaceFUCHSIA;
import net.skds.jvk.generated.structs.VkComponentMapping;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkBufferCollectionPropertiesFUCHSIA extends CStruct {


	public static final CStructWrapper<VkBufferCollectionPropertiesFUCHSIA> WRAPPER = new CStructWrapper<>(VkBufferCollectionPropertiesFUCHSIA.class);

	/**
	* values = VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 3;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	@StructMember()
	@NativeType("uint32_t")
	public int memoryTypeBits;

	@StructMember()
	@NativeType("uint32_t")
	public int bufferCount;

	@StructMember()
	@NativeType("uint32_t")
	public int createInfoIndex;

	@StructMember()
	@NativeType("uint64_t")
	public long sysmemPixelFormat;

	@StructMember()
	@NativeType("VkFormatFeatureFlags")
	public int formatFeatures;

	@StructMember()
	@NativeType("VkSysmemColorSpaceFUCHSIA")
	public VkSysmemColorSpaceFUCHSIA sysmemColorSpaceIndex;

	@StructMember()
	@NativeType("VkComponentMapping")
	public VkComponentMapping samplerYcbcrConversionComponents;

	@StructMember()
	@NativeType("VkSamplerYcbcrModelConversion")
	public int suggestedYcbcrModel;

	@StructMember()
	@NativeType("VkSamplerYcbcrRange")
	public int suggestedYcbcrRange;

	@StructMember()
	@NativeType("VkChromaLocation")
	public int suggestedXChromaOffset;

	@StructMember()
	@NativeType("VkChromaLocation")
	public int suggestedYChromaOffset;


	@Override
	public CStructWrapper<VkBufferCollectionPropertiesFUCHSIA> getWrapper() {
		return WRAPPER;
	}
}