package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static net.skds.lib2.natives.SafeLinker.*;
import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkPhysicalDeviceDescriptorIndexingFeatures {
* 	VkStructureType sType;
* 	// pad (4)
* 	void* pNext;
* 	VkBool32 shaderInputAttachmentArrayDynamicIndexing;
* 	VkBool32 shaderUniformTexelBufferArrayDynamicIndexing;
* 	VkBool32 shaderStorageTexelBufferArrayDynamicIndexing;
* 	VkBool32 shaderUniformBufferArrayNonUniformIndexing;
* 	VkBool32 shaderSampledImageArrayNonUniformIndexing;
* 	VkBool32 shaderStorageBufferArrayNonUniformIndexing;
* 	VkBool32 shaderStorageImageArrayNonUniformIndexing;
* 	VkBool32 shaderInputAttachmentArrayNonUniformIndexing;
* 	VkBool32 shaderUniformTexelBufferArrayNonUniformIndexing;
* 	VkBool32 shaderStorageTexelBufferArrayNonUniformIndexing;
* 	VkBool32 descriptorBindingUniformBufferUpdateAfterBind;
* 	VkBool32 descriptorBindingSampledImageUpdateAfterBind;
* 	VkBool32 descriptorBindingStorageImageUpdateAfterBind;
* 	VkBool32 descriptorBindingStorageBufferUpdateAfterBind;
* 	VkBool32 descriptorBindingUniformTexelBufferUpdateAfterBind;
* 	VkBool32 descriptorBindingStorageTexelBufferUpdateAfterBind;
* 	VkBool32 descriptorBindingUpdateUnusedWhilePending;
* 	VkBool32 descriptorBindingPartiallyBound;
* 	VkBool32 descriptorBindingVariableDescriptorCount;
* 	VkBool32 runtimeDescriptorArray;
* };
*</pre>
**/
@AutoGenerated
public final class VkPhysicalDeviceDescriptorIndexingFeaturesEXT extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			JAVA_INT,
			paddingLayout(4),
			JAVA_LONG,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT
	);
	private static final int S_TYPE_OFFSET = 0;
	private static final int P_NEXT_OFFSET = 8;
	private static final int SHADER_INPUT_ATTACHMENT_ARRAY_DYNAMIC_INDEXING_OFFSET = 16;
	private static final int SHADER_UNIFORM_TEXEL_BUFFER_ARRAY_DYNAMIC_INDEXING_OFFSET = 20;
	private static final int SHADER_STORAGE_TEXEL_BUFFER_ARRAY_DYNAMIC_INDEXING_OFFSET = 24;
	private static final int SHADER_UNIFORM_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET = 28;
	private static final int SHADER_SAMPLED_IMAGE_ARRAY_NON_UNIFORM_INDEXING_OFFSET = 32;
	private static final int SHADER_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET = 36;
	private static final int SHADER_STORAGE_IMAGE_ARRAY_NON_UNIFORM_INDEXING_OFFSET = 40;
	private static final int SHADER_INPUT_ATTACHMENT_ARRAY_NON_UNIFORM_INDEXING_OFFSET = 44;
	private static final int SHADER_UNIFORM_TEXEL_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET = 48;
	private static final int SHADER_STORAGE_TEXEL_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET = 52;
	private static final int DESCRIPTOR_BINDING_UNIFORM_BUFFER_UPDATE_AFTER_BIND_OFFSET = 56;
	private static final int DESCRIPTOR_BINDING_SAMPLED_IMAGE_UPDATE_AFTER_BIND_OFFSET = 60;
	private static final int DESCRIPTOR_BINDING_STORAGE_IMAGE_UPDATE_AFTER_BIND_OFFSET = 64;
	private static final int DESCRIPTOR_BINDING_STORAGE_BUFFER_UPDATE_AFTER_BIND_OFFSET = 68;
	private static final int DESCRIPTOR_BINDING_UNIFORM_TEXEL_BUFFER_UPDATE_AFTER_BIND_OFFSET = 72;
	private static final int DESCRIPTOR_BINDING_STORAGE_TEXEL_BUFFER_UPDATE_AFTER_BIND_OFFSET = 76;
	private static final int DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_OFFSET = 80;
	private static final int DESCRIPTOR_BINDING_PARTIALLY_BOUND_OFFSET = 84;
	private static final int DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_OFFSET = 88;
	private static final int RUNTIME_DESCRIPTOR_ARRAY_OFFSET = 92;
	
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES **/
	@NativeType("VkStructureType")
	public int sType() {
		return (int) INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET);
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT sType(int value) {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, value);
		return this;
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT sType$Default() {
		INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET, 1);
		return this;
	}
	
	/** optional **/
	@NativeType("void*")
	public long pNext() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + P_NEXT_OFFSET);
	}
	
	/** optional **/
	@NativeType("void*")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT pNext(long value) {
		LONG_HANDLE.set(this.segment, this.offset + P_NEXT_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int shaderInputAttachmentArrayDynamicIndexing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_INPUT_ATTACHMENT_ARRAY_DYNAMIC_INDEXING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT shaderInputAttachmentArrayDynamicIndexing(int value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_INPUT_ATTACHMENT_ARRAY_DYNAMIC_INDEXING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int shaderUniformTexelBufferArrayDynamicIndexing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_UNIFORM_TEXEL_BUFFER_ARRAY_DYNAMIC_INDEXING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT shaderUniformTexelBufferArrayDynamicIndexing(int value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_UNIFORM_TEXEL_BUFFER_ARRAY_DYNAMIC_INDEXING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int shaderStorageTexelBufferArrayDynamicIndexing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_STORAGE_TEXEL_BUFFER_ARRAY_DYNAMIC_INDEXING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT shaderStorageTexelBufferArrayDynamicIndexing(int value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_STORAGE_TEXEL_BUFFER_ARRAY_DYNAMIC_INDEXING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int shaderUniformBufferArrayNonUniformIndexing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_UNIFORM_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT shaderUniformBufferArrayNonUniformIndexing(int value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_UNIFORM_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int shaderSampledImageArrayNonUniformIndexing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_SAMPLED_IMAGE_ARRAY_NON_UNIFORM_INDEXING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT shaderSampledImageArrayNonUniformIndexing(int value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_SAMPLED_IMAGE_ARRAY_NON_UNIFORM_INDEXING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int shaderStorageBufferArrayNonUniformIndexing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT shaderStorageBufferArrayNonUniformIndexing(int value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int shaderStorageImageArrayNonUniformIndexing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_STORAGE_IMAGE_ARRAY_NON_UNIFORM_INDEXING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT shaderStorageImageArrayNonUniformIndexing(int value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_STORAGE_IMAGE_ARRAY_NON_UNIFORM_INDEXING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int shaderInputAttachmentArrayNonUniformIndexing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_INPUT_ATTACHMENT_ARRAY_NON_UNIFORM_INDEXING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT shaderInputAttachmentArrayNonUniformIndexing(int value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_INPUT_ATTACHMENT_ARRAY_NON_UNIFORM_INDEXING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int shaderUniformTexelBufferArrayNonUniformIndexing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_UNIFORM_TEXEL_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT shaderUniformTexelBufferArrayNonUniformIndexing(int value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_UNIFORM_TEXEL_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int shaderStorageTexelBufferArrayNonUniformIndexing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_STORAGE_TEXEL_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT shaderStorageTexelBufferArrayNonUniformIndexing(int value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_STORAGE_TEXEL_BUFFER_ARRAY_NON_UNIFORM_INDEXING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int descriptorBindingUniformBufferUpdateAfterBind() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DESCRIPTOR_BINDING_UNIFORM_BUFFER_UPDATE_AFTER_BIND_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT descriptorBindingUniformBufferUpdateAfterBind(int value) {
		INT_HANDLE.set(this.segment, this.offset + DESCRIPTOR_BINDING_UNIFORM_BUFFER_UPDATE_AFTER_BIND_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int descriptorBindingSampledImageUpdateAfterBind() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DESCRIPTOR_BINDING_SAMPLED_IMAGE_UPDATE_AFTER_BIND_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT descriptorBindingSampledImageUpdateAfterBind(int value) {
		INT_HANDLE.set(this.segment, this.offset + DESCRIPTOR_BINDING_SAMPLED_IMAGE_UPDATE_AFTER_BIND_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int descriptorBindingStorageImageUpdateAfterBind() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DESCRIPTOR_BINDING_STORAGE_IMAGE_UPDATE_AFTER_BIND_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT descriptorBindingStorageImageUpdateAfterBind(int value) {
		INT_HANDLE.set(this.segment, this.offset + DESCRIPTOR_BINDING_STORAGE_IMAGE_UPDATE_AFTER_BIND_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int descriptorBindingStorageBufferUpdateAfterBind() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DESCRIPTOR_BINDING_STORAGE_BUFFER_UPDATE_AFTER_BIND_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT descriptorBindingStorageBufferUpdateAfterBind(int value) {
		INT_HANDLE.set(this.segment, this.offset + DESCRIPTOR_BINDING_STORAGE_BUFFER_UPDATE_AFTER_BIND_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int descriptorBindingUniformTexelBufferUpdateAfterBind() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DESCRIPTOR_BINDING_UNIFORM_TEXEL_BUFFER_UPDATE_AFTER_BIND_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT descriptorBindingUniformTexelBufferUpdateAfterBind(int value) {
		INT_HANDLE.set(this.segment, this.offset + DESCRIPTOR_BINDING_UNIFORM_TEXEL_BUFFER_UPDATE_AFTER_BIND_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int descriptorBindingStorageTexelBufferUpdateAfterBind() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DESCRIPTOR_BINDING_STORAGE_TEXEL_BUFFER_UPDATE_AFTER_BIND_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT descriptorBindingStorageTexelBufferUpdateAfterBind(int value) {
		INT_HANDLE.set(this.segment, this.offset + DESCRIPTOR_BINDING_STORAGE_TEXEL_BUFFER_UPDATE_AFTER_BIND_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int descriptorBindingUpdateUnusedWhilePending() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT descriptorBindingUpdateUnusedWhilePending(int value) {
		INT_HANDLE.set(this.segment, this.offset + DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int descriptorBindingPartiallyBound() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DESCRIPTOR_BINDING_PARTIALLY_BOUND_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT descriptorBindingPartiallyBound(int value) {
		INT_HANDLE.set(this.segment, this.offset + DESCRIPTOR_BINDING_PARTIALLY_BOUND_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int descriptorBindingVariableDescriptorCount() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT descriptorBindingVariableDescriptorCount(int value) {
		INT_HANDLE.set(this.segment, this.offset + DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int runtimeDescriptorArray() {
		return (int) INT_HANDLE.get(this.segment, this.offset + RUNTIME_DESCRIPTOR_ARRAY_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingFeaturesEXT runtimeDescriptorArray(int value) {
		INT_HANDLE.set(this.segment, this.offset + RUNTIME_DESCRIPTOR_ARRAY_OFFSET, value);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkPhysicalDeviceDescriptorIndexingFeaturesEXT> {
		
		private static final StructConstructor<VkPhysicalDeviceDescriptorIndexingFeaturesEXT> CONSTRUCTOR = VkPhysicalDeviceDescriptorIndexingFeaturesEXT::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkPhysicalDeviceDescriptorIndexingFeaturesEXT[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkPhysicalDeviceDescriptorIndexingFeaturesEXT[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkPhysicalDeviceDescriptorIndexingFeaturesEXT[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}