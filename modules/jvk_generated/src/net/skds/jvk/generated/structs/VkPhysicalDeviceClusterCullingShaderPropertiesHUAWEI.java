package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static java.lang.foreign.ValueLayout.*;
import static net.skds.lib2.natives.LinkerUtils.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI {
* 	VkStructureType sType;
* 	// pad (4)
* 	void* pNext;
* 	uint32_t[3] maxWorkGroupCount;
* 	uint32_t[3] maxWorkGroupSize;
* 	uint32_t maxOutputClusterCount;
* 	// pad (4)
* 	VkDeviceSize indirectBufferOffsetAlignment;
* };
*</pre>
**/
@AutoGenerated
public final class VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			JAVA_INT,
			paddingLayout(4),
			JAVA_LONG,
			sequenceLayout(3, JAVA_INT),
			sequenceLayout(3, JAVA_INT),
			JAVA_INT,
			paddingLayout(4),
			JAVA_LONG
	);
	private static final int S_TYPE_OFFSET = 0;
	private static final int P_NEXT_OFFSET = 8;
	private static final int MAX_WORK_GROUP_COUNT_OFFSET = 16;
	private static final int MAX_WORK_GROUP_SIZE_OFFSET = 28;
	private static final int MAX_OUTPUT_CLUSTER_COUNT_OFFSET = 40;
	private static final int INDIRECT_BUFFER_OFFSET_ALIGNMENT_OFFSET = 48;
	
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI **/
	@NativeType("VkStructureType")
	public int sType() {
		return (int) INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET);
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI sType(int value) {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, value);
		return this;
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI sType$Default() {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, 1000404001);
		return this;
	}
	
	/** optional **/
	@NativeType("void*")
	public long pNext() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + P_NEXT_OFFSET);
	}
	
	/** optional **/
	@NativeType("void*")
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI pNext(long value) {
		LONG_HANDLE.set(this.segment, this.offset + P_NEXT_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t[3]")
	public int maxWorkGroupCount(int i) {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_WORK_GROUP_COUNT_OFFSET + JAVA_INT.byteSize() * i);
	}
	
	@NativeType("uint32_t[3]")
	public int[] maxWorkGroupCountArray() {
		var array = new int[3];
		MemorySegment.copy(this.segment, INT, this.offset + MAX_WORK_GROUP_COUNT_OFFSET, array, 0, array.length);
		return array;
	}
	
	@NativeType("uint32_t[3]")
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI maxWorkGroupCount(int i, int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_WORK_GROUP_COUNT_OFFSET + JAVA_INT.byteSize() * i, value);
		return this;
	}
	
	@NativeType("uint32_t[3]")
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI maxWorkGroupCount(int[] value) {
		MemorySegment.copy(value, 0, this.segment, INT, this.offset + MAX_WORK_GROUP_COUNT_OFFSET, value.length);
		return this;
	}
	
	@NativeType("uint32_t[3]")
	public int maxWorkGroupSize(int i) {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_WORK_GROUP_SIZE_OFFSET + JAVA_INT.byteSize() * i);
	}
	
	@NativeType("uint32_t[3]")
	public int[] maxWorkGroupSizeArray() {
		var array = new int[3];
		MemorySegment.copy(this.segment, INT, this.offset + MAX_WORK_GROUP_SIZE_OFFSET, array, 0, array.length);
		return array;
	}
	
	@NativeType("uint32_t[3]")
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI maxWorkGroupSize(int i, int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_WORK_GROUP_SIZE_OFFSET + JAVA_INT.byteSize() * i, value);
		return this;
	}
	
	@NativeType("uint32_t[3]")
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI maxWorkGroupSize(int[] value) {
		MemorySegment.copy(value, 0, this.segment, INT, this.offset + MAX_WORK_GROUP_SIZE_OFFSET, value.length);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxOutputClusterCount() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_OUTPUT_CLUSTER_COUNT_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI maxOutputClusterCount(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_OUTPUT_CLUSTER_COUNT_OFFSET, value);
		return this;
	}
	
	@NativeType("VkDeviceSize")
	public long indirectBufferOffsetAlignment() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + INDIRECT_BUFFER_OFFSET_ALIGNMENT_OFFSET);
	}
	
	@NativeType("VkDeviceSize")
	public VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI indirectBufferOffsetAlignment(long value) {
		LONG_HANDLE.set(this.segment, this.offset + INDIRECT_BUFFER_OFFSET_ALIGNMENT_OFFSET, value);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI> {
		
		private static final StructConstructor<VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI> CONSTRUCTOR = VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}