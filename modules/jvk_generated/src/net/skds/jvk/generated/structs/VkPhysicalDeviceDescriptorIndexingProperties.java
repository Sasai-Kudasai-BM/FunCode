package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static java.lang.foreign.ValueLayout.*;
import static net.skds.lib2.natives.LinkerUtils.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkPhysicalDeviceDescriptorIndexingProperties {
* 	VkStructureType sType;
* 	// pad (4)
* 	void* pNext;
* 	uint32_t maxUpdateAfterBindDescriptorsInAllPools;
* 	VkBool32 shaderUniformBufferArrayNonUniformIndexingNative;
* 	VkBool32 shaderSampledImageArrayNonUniformIndexingNative;
* 	VkBool32 shaderStorageBufferArrayNonUniformIndexingNative;
* 	VkBool32 shaderStorageImageArrayNonUniformIndexingNative;
* 	VkBool32 shaderInputAttachmentArrayNonUniformIndexingNative;
* 	VkBool32 robustBufferAccessUpdateAfterBind;
* 	VkBool32 quadDivergentImplicitLod;
* 	uint32_t maxPerStageDescriptorUpdateAfterBindSamplers;
* 	uint32_t maxPerStageDescriptorUpdateAfterBindUniformBuffers;
* 	uint32_t maxPerStageDescriptorUpdateAfterBindStorageBuffers;
* 	uint32_t maxPerStageDescriptorUpdateAfterBindSampledImages;
* 	uint32_t maxPerStageDescriptorUpdateAfterBindStorageImages;
* 	uint32_t maxPerStageDescriptorUpdateAfterBindInputAttachments;
* 	uint32_t maxPerStageUpdateAfterBindResources;
* 	uint32_t maxDescriptorSetUpdateAfterBindSamplers;
* 	uint32_t maxDescriptorSetUpdateAfterBindUniformBuffers;
* 	uint32_t maxDescriptorSetUpdateAfterBindUniformBuffersDynamic;
* 	uint32_t maxDescriptorSetUpdateAfterBindStorageBuffers;
* 	uint32_t maxDescriptorSetUpdateAfterBindStorageBuffersDynamic;
* 	uint32_t maxDescriptorSetUpdateAfterBindSampledImages;
* 	uint32_t maxDescriptorSetUpdateAfterBindStorageImages;
* 	uint32_t maxDescriptorSetUpdateAfterBindInputAttachments;
* 	// pad (4)
* };
*</pre>
**/
@AutoGenerated
public final class VkPhysicalDeviceDescriptorIndexingProperties extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			JAVA_INT,
			paddingLayout(4),
			JAVA_LONG,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			paddingLayout(4)
	);
	private static final int S_TYPE_OFFSET = 0;
	private static final int P_NEXT_OFFSET = 8;
	private static final int MAX_UPDATE_AFTER_BIND_DESCRIPTORS_IN_ALL_POOLS_OFFSET = 16;
	private static final int SHADER_UNIFORM_BUFFER_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET = 20;
	private static final int SHADER_SAMPLED_IMAGE_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET = 24;
	private static final int SHADER_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET = 28;
	private static final int SHADER_STORAGE_IMAGE_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET = 32;
	private static final int SHADER_INPUT_ATTACHMENT_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET = 36;
	private static final int ROBUST_BUFFER_ACCESS_UPDATE_AFTER_BIND_OFFSET = 40;
	private static final int QUAD_DIVERGENT_IMPLICIT_LOD_OFFSET = 44;
	private static final int MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_SAMPLERS_OFFSET = 48;
	private static final int MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_UNIFORM_BUFFERS_OFFSET = 52;
	private static final int MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_STORAGE_BUFFERS_OFFSET = 56;
	private static final int MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_SAMPLED_IMAGES_OFFSET = 60;
	private static final int MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_STORAGE_IMAGES_OFFSET = 64;
	private static final int MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_INPUT_ATTACHMENTS_OFFSET = 68;
	private static final int MAX_PER_STAGE_UPDATE_AFTER_BIND_RESOURCES_OFFSET = 72;
	private static final int MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_SAMPLERS_OFFSET = 76;
	private static final int MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_UNIFORM_BUFFERS_OFFSET = 80;
	private static final int MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_UNIFORM_BUFFERS_DYNAMIC_OFFSET = 84;
	private static final int MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_STORAGE_BUFFERS_OFFSET = 88;
	private static final int MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_STORAGE_BUFFERS_DYNAMIC_OFFSET = 92;
	private static final int MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_SAMPLED_IMAGES_OFFSET = 96;
	private static final int MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_STORAGE_IMAGES_OFFSET = 100;
	private static final int MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_INPUT_ATTACHMENTS_OFFSET = 104;
	
	public VkPhysicalDeviceDescriptorIndexingProperties() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceDescriptorIndexingProperties(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceDescriptorIndexingProperties(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES **/
	@NativeType("VkStructureType")
	public int sType() {
		return (int) INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET);
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceDescriptorIndexingProperties sType(int value) {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, value);
		return this;
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceDescriptorIndexingProperties sType$Default() {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, 1000161002);
		return this;
	}
	
	/** optional **/
	@NativeType("void*")
	public long pNext() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + P_NEXT_OFFSET);
	}
	
	/** optional **/
	@NativeType("void*")
	public VkPhysicalDeviceDescriptorIndexingProperties pNext(long value) {
		LONG_HANDLE.set(this.segment, this.offset + P_NEXT_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxUpdateAfterBindDescriptorsInAllPools() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_UPDATE_AFTER_BIND_DESCRIPTORS_IN_ALL_POOLS_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxUpdateAfterBindDescriptorsInAllPools(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_UPDATE_AFTER_BIND_DESCRIPTORS_IN_ALL_POOLS_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean shaderUniformBufferArrayNonUniformIndexingNative() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_UNIFORM_BUFFER_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingProperties shaderUniformBufferArrayNonUniformIndexingNative(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_UNIFORM_BUFFER_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean shaderSampledImageArrayNonUniformIndexingNative() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_SAMPLED_IMAGE_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingProperties shaderSampledImageArrayNonUniformIndexingNative(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_SAMPLED_IMAGE_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean shaderStorageBufferArrayNonUniformIndexingNative() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingProperties shaderStorageBufferArrayNonUniformIndexingNative(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean shaderStorageImageArrayNonUniformIndexingNative() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_STORAGE_IMAGE_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingProperties shaderStorageImageArrayNonUniformIndexingNative(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_STORAGE_IMAGE_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean shaderInputAttachmentArrayNonUniformIndexingNative() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_INPUT_ATTACHMENT_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingProperties shaderInputAttachmentArrayNonUniformIndexingNative(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_INPUT_ATTACHMENT_ARRAY_NON_UNIFORM_INDEXING_NATIVE_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean robustBufferAccessUpdateAfterBind() {
		return (int) INT_HANDLE.get(this.segment, this.offset + ROBUST_BUFFER_ACCESS_UPDATE_AFTER_BIND_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingProperties robustBufferAccessUpdateAfterBind(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + ROBUST_BUFFER_ACCESS_UPDATE_AFTER_BIND_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean quadDivergentImplicitLod() {
		return (int) INT_HANDLE.get(this.segment, this.offset + QUAD_DIVERGENT_IMPLICIT_LOD_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceDescriptorIndexingProperties quadDivergentImplicitLod(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + QUAD_DIVERGENT_IMPLICIT_LOD_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxPerStageDescriptorUpdateAfterBindSamplers() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_SAMPLERS_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxPerStageDescriptorUpdateAfterBindSamplers(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_SAMPLERS_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxPerStageDescriptorUpdateAfterBindUniformBuffers() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_UNIFORM_BUFFERS_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxPerStageDescriptorUpdateAfterBindUniformBuffers(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_UNIFORM_BUFFERS_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxPerStageDescriptorUpdateAfterBindStorageBuffers() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_STORAGE_BUFFERS_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxPerStageDescriptorUpdateAfterBindStorageBuffers(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_STORAGE_BUFFERS_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxPerStageDescriptorUpdateAfterBindSampledImages() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_SAMPLED_IMAGES_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxPerStageDescriptorUpdateAfterBindSampledImages(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_SAMPLED_IMAGES_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxPerStageDescriptorUpdateAfterBindStorageImages() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_STORAGE_IMAGES_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxPerStageDescriptorUpdateAfterBindStorageImages(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_STORAGE_IMAGES_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxPerStageDescriptorUpdateAfterBindInputAttachments() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_INPUT_ATTACHMENTS_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxPerStageDescriptorUpdateAfterBindInputAttachments(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_PER_STAGE_DESCRIPTOR_UPDATE_AFTER_BIND_INPUT_ATTACHMENTS_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxPerStageUpdateAfterBindResources() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_PER_STAGE_UPDATE_AFTER_BIND_RESOURCES_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxPerStageUpdateAfterBindResources(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_PER_STAGE_UPDATE_AFTER_BIND_RESOURCES_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxDescriptorSetUpdateAfterBindSamplers() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_SAMPLERS_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxDescriptorSetUpdateAfterBindSamplers(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_SAMPLERS_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxDescriptorSetUpdateAfterBindUniformBuffers() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_UNIFORM_BUFFERS_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxDescriptorSetUpdateAfterBindUniformBuffers(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_UNIFORM_BUFFERS_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxDescriptorSetUpdateAfterBindUniformBuffersDynamic() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_UNIFORM_BUFFERS_DYNAMIC_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxDescriptorSetUpdateAfterBindUniformBuffersDynamic(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_UNIFORM_BUFFERS_DYNAMIC_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxDescriptorSetUpdateAfterBindStorageBuffers() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_STORAGE_BUFFERS_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxDescriptorSetUpdateAfterBindStorageBuffers(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_STORAGE_BUFFERS_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxDescriptorSetUpdateAfterBindStorageBuffersDynamic() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_STORAGE_BUFFERS_DYNAMIC_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxDescriptorSetUpdateAfterBindStorageBuffersDynamic(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_STORAGE_BUFFERS_DYNAMIC_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxDescriptorSetUpdateAfterBindSampledImages() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_SAMPLED_IMAGES_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxDescriptorSetUpdateAfterBindSampledImages(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_SAMPLED_IMAGES_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxDescriptorSetUpdateAfterBindStorageImages() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_STORAGE_IMAGES_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxDescriptorSetUpdateAfterBindStorageImages(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_STORAGE_IMAGES_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxDescriptorSetUpdateAfterBindInputAttachments() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_INPUT_ATTACHMENTS_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPhysicalDeviceDescriptorIndexingProperties maxDescriptorSetUpdateAfterBindInputAttachments(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_DESCRIPTOR_SET_UPDATE_AFTER_BIND_INPUT_ATTACHMENTS_OFFSET, value);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkPhysicalDeviceDescriptorIndexingProperties> {
		
		private static final StructConstructor<VkPhysicalDeviceDescriptorIndexingProperties> CONSTRUCTOR = VkPhysicalDeviceDescriptorIndexingProperties::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkPhysicalDeviceDescriptorIndexingProperties[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkPhysicalDeviceDescriptorIndexingProperties[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkPhysicalDeviceDescriptorIndexingProperties[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}