package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkAccelerationStructureBuildGeometryInfoKHR extends CStruct {


	public static final CStructWrapper<VkAccelerationStructureBuildGeometryInfoKHR> WRAPPER = new CStructWrapper<>(VkAccelerationStructureBuildGeometryInfoKHR.class);

	/**
	* values = VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 0;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	@StructMember()
	@NativeType("VkAccelerationStructureTypeKHR")
	public int type;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkBuildAccelerationStructureFlagsKHR")
	public int flags;

	@StructMember()
	@NativeType("VkBuildAccelerationStructureModeKHR")
	public int mode;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkAccelerationStructureKHR*")
	public long srcAccelerationStructure;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkAccelerationStructureKHR*")
	public long dstAccelerationStructure;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("uint32_t")
	public int geometryCount;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkAccelerationStructureGeometryKHR*")
	public long pGeometries;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkAccelerationStructureGeometryKHR*")
	public long ppGeometries;

	@StructMember(size = 8)
	@NativeType("VkDeviceOrHostAddressKHR")
	public byte[] scratchData;


	@Override
	public CStructWrapper<VkAccelerationStructureBuildGeometryInfoKHR> getWrapper() {
		return WRAPPER;
	}

	public long getScratchDataL(int i) {
		return NativeByteArrayOperations.getLong(this.scratchData, i);
	}

	public long setScratchData(int i, long value) {
		return NativeByteArrayOperations.setLong(this.scratchData, i, value);
	}
}