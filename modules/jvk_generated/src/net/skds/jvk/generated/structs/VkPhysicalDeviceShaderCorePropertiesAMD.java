package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkPhysicalDeviceShaderCorePropertiesAMD extends CStruct {


	public static final CStructWrapper<VkPhysicalDeviceShaderCorePropertiesAMD> WRAPPER = new CStructWrapper<>(VkPhysicalDeviceShaderCorePropertiesAMD.class);

	/**
	* values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 0;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	@StructMember()
	@NativeType("uint32_t")
	public int shaderEngineCount;

	@StructMember()
	@NativeType("uint32_t")
	public int shaderArraysPerEngineCount;

	@StructMember()
	@NativeType("uint32_t")
	public int computeUnitsPerShaderArray;

	@StructMember()
	@NativeType("uint32_t")
	public int simdPerComputeUnit;

	@StructMember()
	@NativeType("uint32_t")
	public int wavefrontsPerSimd;

	@StructMember()
	@NativeType("uint32_t")
	public int wavefrontSize;

	@StructMember()
	@NativeType("uint32_t")
	public int sgprsPerSimd;

	@StructMember()
	@NativeType("uint32_t")
	public int minSgprAllocation;

	@StructMember()
	@NativeType("uint32_t")
	public int maxSgprAllocation;

	@StructMember()
	@NativeType("uint32_t")
	public int sgprAllocationGranularity;

	@StructMember()
	@NativeType("uint32_t")
	public int vgprsPerSimd;

	@StructMember()
	@NativeType("uint32_t")
	public int minVgprAllocation;

	@StructMember()
	@NativeType("uint32_t")
	public int maxVgprAllocation;

	@StructMember()
	@NativeType("uint32_t")
	public int vgprAllocationGranularity;


	@Override
	public CStructWrapper<VkPhysicalDeviceShaderCorePropertiesAMD> getWrapper() {
		return WRAPPER;
	}
}