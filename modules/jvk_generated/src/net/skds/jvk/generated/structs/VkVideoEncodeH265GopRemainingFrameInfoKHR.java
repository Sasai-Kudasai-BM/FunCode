package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static java.lang.foreign.ValueLayout.*;
import static net.skds.lib2.natives.LinkerUtils.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkVideoEncodeH265GopRemainingFrameInfoKHR {
* 	VkStructureType sType;
* 	// pad (4)
* 	void* pNext;
* 	VkBool32 useGopRemainingFrames;
* 	uint32_t gopRemainingI;
* 	uint32_t gopRemainingP;
* 	uint32_t gopRemainingB;
* };
*</pre>
**/
@AutoGenerated
public final class VkVideoEncodeH265GopRemainingFrameInfoKHR extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			JAVA_INT,
			paddingLayout(4),
			JAVA_LONG,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT
	);
	private static final int S_TYPE_OFFSET = 0;
	private static final int P_NEXT_OFFSET = 8;
	private static final int USE_GOP_REMAINING_FRAMES_OFFSET = 16;
	private static final int GOP_REMAINING_I_OFFSET = 20;
	private static final int GOP_REMAINING_P_OFFSET = 24;
	private static final int GOP_REMAINING_B_OFFSET = 28;
	
	public VkVideoEncodeH265GopRemainingFrameInfoKHR() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkVideoEncodeH265GopRemainingFrameInfoKHR(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkVideoEncodeH265GopRemainingFrameInfoKHR(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	/** values = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR **/
	@NativeType("VkStructureType")
	public int sType() {
		return (int) INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET);
	}
	
	/** values = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR **/
	@NativeType("VkStructureType")
	public VkVideoEncodeH265GopRemainingFrameInfoKHR sType(int value) {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, value);
		return this;
	}
	
	/** values = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR **/
	@NativeType("VkStructureType")
	public VkVideoEncodeH265GopRemainingFrameInfoKHR sType$Default() {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, 1000039006);
		return this;
	}
	
	/** optional **/
	@NativeType("void*")
	public long pNext() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + P_NEXT_OFFSET);
	}
	
	/** optional **/
	@NativeType("void*")
	public VkVideoEncodeH265GopRemainingFrameInfoKHR pNext(long value) {
		LONG_HANDLE.set(this.segment, this.offset + P_NEXT_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean useGopRemainingFrames() {
		return (int) INT_HANDLE.get(this.segment, this.offset + USE_GOP_REMAINING_FRAMES_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkVideoEncodeH265GopRemainingFrameInfoKHR useGopRemainingFrames(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + USE_GOP_REMAINING_FRAMES_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("uint32_t")
	public int gopRemainingI() {
		return (int) INT_HANDLE.get(this.segment, this.offset + GOP_REMAINING_I_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkVideoEncodeH265GopRemainingFrameInfoKHR gopRemainingI(int value) {
		INT_HANDLE.set(this.segment, this.offset + GOP_REMAINING_I_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int gopRemainingP() {
		return (int) INT_HANDLE.get(this.segment, this.offset + GOP_REMAINING_P_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkVideoEncodeH265GopRemainingFrameInfoKHR gopRemainingP(int value) {
		INT_HANDLE.set(this.segment, this.offset + GOP_REMAINING_P_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int gopRemainingB() {
		return (int) INT_HANDLE.get(this.segment, this.offset + GOP_REMAINING_B_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkVideoEncodeH265GopRemainingFrameInfoKHR gopRemainingB(int value) {
		INT_HANDLE.set(this.segment, this.offset + GOP_REMAINING_B_OFFSET, value);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkVideoEncodeH265GopRemainingFrameInfoKHR> {
		
		private static final StructConstructor<VkVideoEncodeH265GopRemainingFrameInfoKHR> CONSTRUCTOR = VkVideoEncodeH265GopRemainingFrameInfoKHR::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkVideoEncodeH265GopRemainingFrameInfoKHR[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkVideoEncodeH265GopRemainingFrameInfoKHR[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkVideoEncodeH265GopRemainingFrameInfoKHR[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}