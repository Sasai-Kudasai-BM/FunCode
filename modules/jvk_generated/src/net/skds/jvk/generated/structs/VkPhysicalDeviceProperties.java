package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.jvk.generated.structs.VkPhysicalDeviceSparseProperties;
import net.skds.jvk.generated.structs.VkPhysicalDeviceLimits;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkPhysicalDeviceProperties extends CStruct {


	public static final CStructWrapper<VkPhysicalDeviceProperties> WRAPPER = new CStructWrapper<>(VkPhysicalDeviceProperties.class);

	@StructMember()
	@NativeType("uint32_t")
	public int apiVersion;

	@StructMember()
	@NativeType("uint32_t")
	public int driverVersion;

	@StructMember()
	@NativeType("uint32_t")
	public int vendorID;

	@StructMember()
	@NativeType("uint32_t")
	public int deviceID;

	@StructMember()
	@NativeType("VkPhysicalDeviceType")
	public int deviceType;

	@StructMember(size = 256)
	@NativeType("char[256]")
	public byte[] deviceName;

	@StructMember(size = 16)
	@NativeType("uint8_t[16]")
	public byte[] pipelineCacheUUID;

	@StructMember()
	@NativeType("VkPhysicalDeviceLimits")
	public VkPhysicalDeviceLimits limits;

	@StructMember()
	@NativeType("VkPhysicalDeviceSparseProperties")
	public VkPhysicalDeviceSparseProperties sparseProperties;


	@Override
	public CStructWrapper<VkPhysicalDeviceProperties> getWrapper() {
		return WRAPPER;
	}
}