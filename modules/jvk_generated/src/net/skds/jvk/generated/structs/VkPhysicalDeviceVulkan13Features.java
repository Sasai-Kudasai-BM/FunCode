package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static java.lang.foreign.ValueLayout.*;
import static net.skds.lib2.natives.SafeLinker.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkPhysicalDeviceVulkan13Features {
* 	VkStructureType sType;
* 	// pad (4)
* 	void* pNext;
* 	VkBool32 robustImageAccess;
* 	VkBool32 inlineUniformBlock;
* 	VkBool32 descriptorBindingInlineUniformBlockUpdateAfterBind;
* 	VkBool32 pipelineCreationCacheControl;
* 	VkBool32 privateData;
* 	VkBool32 shaderDemoteToHelperInvocation;
* 	VkBool32 shaderTerminateInvocation;
* 	VkBool32 subgroupSizeControl;
* 	VkBool32 computeFullSubgroups;
* 	VkBool32 synchronization2;
* 	VkBool32 textureCompressionASTC_HDR;
* 	VkBool32 shaderZeroInitializeWorkgroupMemory;
* 	VkBool32 dynamicRendering;
* 	VkBool32 shaderIntegerDotProduct;
* 	VkBool32 maintenance4;
* 	// pad (4)
* };
*</pre>
**/
@AutoGenerated
public final class VkPhysicalDeviceVulkan13Features extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			JAVA_INT,
			paddingLayout(4),
			JAVA_LONG,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			paddingLayout(4)
	);
	private static final int S_TYPE_OFFSET = 0;
	private static final int P_NEXT_OFFSET = 8;
	private static final int ROBUST_IMAGE_ACCESS_OFFSET = 16;
	private static final int INLINE_UNIFORM_BLOCK_OFFSET = 20;
	private static final int DESCRIPTOR_BINDING_INLINE_UNIFORM_BLOCK_UPDATE_AFTER_BIND_OFFSET = 24;
	private static final int PIPELINE_CREATION_CACHE_CONTROL_OFFSET = 28;
	private static final int PRIVATE_DATA_OFFSET = 32;
	private static final int SHADER_DEMOTE_TO_HELPER_INVOCATION_OFFSET = 36;
	private static final int SHADER_TERMINATE_INVOCATION_OFFSET = 40;
	private static final int SUBGROUP_SIZE_CONTROL_OFFSET = 44;
	private static final int COMPUTE_FULL_SUBGROUPS_OFFSET = 48;
	private static final int SYNCHRONIZATION2_OFFSET = 52;
	private static final int TEXTURE_COMPRESSION_ASTC__HDR_OFFSET = 56;
	private static final int SHADER_ZERO_INITIALIZE_WORKGROUP_MEMORY_OFFSET = 60;
	private static final int DYNAMIC_RENDERING_OFFSET = 64;
	private static final int SHADER_INTEGER_DOT_PRODUCT_OFFSET = 68;
	private static final int MAINTENANCE4_OFFSET = 72;
	
	public VkPhysicalDeviceVulkan13Features() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceVulkan13Features(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceVulkan13Features(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES **/
	@NativeType("VkStructureType")
	public int sType() {
		return (int) INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET);
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceVulkan13Features sType(int value) {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, value);
		return this;
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceVulkan13Features sType$Default() {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, 53);
		return this;
	}
	
	/** optional **/
	@NativeType("void*")
	public long pNext() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + P_NEXT_OFFSET);
	}
	
	/** optional **/
	@NativeType("void*")
	public VkPhysicalDeviceVulkan13Features pNext(long value) {
		LONG_HANDLE.set(this.segment, this.offset + P_NEXT_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean robustImageAccess() {
		return (int) INT_HANDLE.get(this.segment, this.offset + ROBUST_IMAGE_ACCESS_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features robustImageAccess(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + ROBUST_IMAGE_ACCESS_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean inlineUniformBlock() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INLINE_UNIFORM_BLOCK_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features inlineUniformBlock(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + INLINE_UNIFORM_BLOCK_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean descriptorBindingInlineUniformBlockUpdateAfterBind() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DESCRIPTOR_BINDING_INLINE_UNIFORM_BLOCK_UPDATE_AFTER_BIND_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features descriptorBindingInlineUniformBlockUpdateAfterBind(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + DESCRIPTOR_BINDING_INLINE_UNIFORM_BLOCK_UPDATE_AFTER_BIND_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean pipelineCreationCacheControl() {
		return (int) INT_HANDLE.get(this.segment, this.offset + PIPELINE_CREATION_CACHE_CONTROL_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features pipelineCreationCacheControl(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + PIPELINE_CREATION_CACHE_CONTROL_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean privateData() {
		return (int) INT_HANDLE.get(this.segment, this.offset + PRIVATE_DATA_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features privateData(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + PRIVATE_DATA_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean shaderDemoteToHelperInvocation() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_DEMOTE_TO_HELPER_INVOCATION_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features shaderDemoteToHelperInvocation(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_DEMOTE_TO_HELPER_INVOCATION_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean shaderTerminateInvocation() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_TERMINATE_INVOCATION_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features shaderTerminateInvocation(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_TERMINATE_INVOCATION_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean subgroupSizeControl() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SUBGROUP_SIZE_CONTROL_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features subgroupSizeControl(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SUBGROUP_SIZE_CONTROL_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean computeFullSubgroups() {
		return (int) INT_HANDLE.get(this.segment, this.offset + COMPUTE_FULL_SUBGROUPS_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features computeFullSubgroups(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + COMPUTE_FULL_SUBGROUPS_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean synchronization2() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SYNCHRONIZATION2_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features synchronization2(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SYNCHRONIZATION2_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean textureCompressionASTC_HDR() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TEXTURE_COMPRESSION_ASTC__HDR_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features textureCompressionASTC_HDR(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TEXTURE_COMPRESSION_ASTC__HDR_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean shaderZeroInitializeWorkgroupMemory() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_ZERO_INITIALIZE_WORKGROUP_MEMORY_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features shaderZeroInitializeWorkgroupMemory(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_ZERO_INITIALIZE_WORKGROUP_MEMORY_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean dynamicRendering() {
		return (int) INT_HANDLE.get(this.segment, this.offset + DYNAMIC_RENDERING_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features dynamicRendering(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + DYNAMIC_RENDERING_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean shaderIntegerDotProduct() {
		return (int) INT_HANDLE.get(this.segment, this.offset + SHADER_INTEGER_DOT_PRODUCT_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features shaderIntegerDotProduct(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + SHADER_INTEGER_DOT_PRODUCT_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean maintenance4() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAINTENANCE4_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceVulkan13Features maintenance4(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + MAINTENANCE4_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkPhysicalDeviceVulkan13Features> {
		
		private static final StructConstructor<VkPhysicalDeviceVulkan13Features> CONSTRUCTOR = VkPhysicalDeviceVulkan13Features::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkPhysicalDeviceVulkan13Features[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkPhysicalDeviceVulkan13Features[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkPhysicalDeviceVulkan13Features[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}