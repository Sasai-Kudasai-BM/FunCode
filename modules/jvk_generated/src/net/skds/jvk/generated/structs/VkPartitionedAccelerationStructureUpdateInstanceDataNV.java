package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static java.lang.foreign.ValueLayout.*;
import static net.skds.lib2.natives.LinkerUtils.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkPartitionedAccelerationStructureUpdateInstanceDataNV {
* 	uint32_t instanceIndex;
* 	uint32_t instanceContributionToHitGroupIndex;
* 	VkDeviceAddress accelerationStructure;
* };
*</pre>
**/
@AutoGenerated
public final class VkPartitionedAccelerationStructureUpdateInstanceDataNV extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			JAVA_INT,
			JAVA_INT,
			JAVA_LONG
	);
	private static final int INSTANCE_INDEX_OFFSET = 0;
	private static final int INSTANCE_CONTRIBUTION_TO_HIT_GROUP_INDEX_OFFSET = 4;
	private static final int ACCELERATION_STRUCTURE_OFFSET = 8;
	
	public VkPartitionedAccelerationStructureUpdateInstanceDataNV() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPartitionedAccelerationStructureUpdateInstanceDataNV(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPartitionedAccelerationStructureUpdateInstanceDataNV(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	@NativeType("uint32_t")
	public int instanceIndex() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INSTANCE_INDEX_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPartitionedAccelerationStructureUpdateInstanceDataNV instanceIndex(int value) {
		INT_HANDLE.set(this.segment, this.offset + INSTANCE_INDEX_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int instanceContributionToHitGroupIndex() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INSTANCE_CONTRIBUTION_TO_HIT_GROUP_INDEX_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPartitionedAccelerationStructureUpdateInstanceDataNV instanceContributionToHitGroupIndex(int value) {
		INT_HANDLE.set(this.segment, this.offset + INSTANCE_CONTRIBUTION_TO_HIT_GROUP_INDEX_OFFSET, value);
		return this;
	}
	
	@NativeType("VkDeviceAddress")
	public long accelerationStructure() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + ACCELERATION_STRUCTURE_OFFSET);
	}
	
	@NativeType("VkDeviceAddress")
	public VkPartitionedAccelerationStructureUpdateInstanceDataNV accelerationStructure(long value) {
		LONG_HANDLE.set(this.segment, this.offset + ACCELERATION_STRUCTURE_OFFSET, value);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkPartitionedAccelerationStructureUpdateInstanceDataNV> {
		
		private static final StructConstructor<VkPartitionedAccelerationStructureUpdateInstanceDataNV> CONSTRUCTOR = VkPartitionedAccelerationStructureUpdateInstanceDataNV::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkPartitionedAccelerationStructureUpdateInstanceDataNV[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkPartitionedAccelerationStructureUpdateInstanceDataNV[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkPartitionedAccelerationStructureUpdateInstanceDataNV[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}