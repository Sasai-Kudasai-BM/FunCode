package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static java.lang.foreign.ValueLayout.*;
import static net.skds.lib2.natives.SafeLinker.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkPipelineCacheSafetyCriticalIndexEntry {
* 	uint8_t[16] pipelineIdentifier;
* 	uint64_t pipelineMemorySize;
* 	uint64_t jsonSize;
* 	uint64_t jsonOffset;
* 	uint32_t stageIndexCount;
* 	uint32_t stageIndexStride;
* 	uint64_t stageIndexOffset;
* };
*</pre>
**/
@AutoGenerated
public final class VkPipelineCacheSafetyCriticalIndexEntry extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			sequenceLayout(16, JAVA_BYTE),
			JAVA_LONG,
			JAVA_LONG,
			JAVA_LONG,
			JAVA_INT,
			JAVA_INT,
			JAVA_LONG
	);
	private static final int PIPELINE_IDENTIFIER_OFFSET = 0;
	private static final int PIPELINE_MEMORY_SIZE_OFFSET = 16;
	private static final int JSON_SIZE_OFFSET = 24;
	private static final int JSON_OFFSET_OFFSET = 32;
	private static final int STAGE_INDEX_COUNT_OFFSET = 40;
	private static final int STAGE_INDEX_STRIDE_OFFSET = 44;
	private static final int STAGE_INDEX_OFFSET_OFFSET = 48;
	
	public VkPipelineCacheSafetyCriticalIndexEntry() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPipelineCacheSafetyCriticalIndexEntry(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPipelineCacheSafetyCriticalIndexEntry(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	@NativeType("uint8_t[16]")
	public byte pipelineIdentifier(int i) {
		return (byte) BYTE_HANDLE.get(this.segment, this.offset + PIPELINE_IDENTIFIER_OFFSET + JAVA_BYTE.byteSize() * i);
	}
	
	@NativeType("uint8_t[16]")
	public byte[] pipelineIdentifierArray() {
		var array = new byte[16];
		MemorySegment.copy(this.segment, BYTE, this.offset + PIPELINE_IDENTIFIER_OFFSET, array, 0, array.length);
		return array;
	}
	
	@NativeType("uint8_t[16]")
	public VkPipelineCacheSafetyCriticalIndexEntry pipelineIdentifier(int i, byte value) {
		BYTE_HANDLE.set(this.segment, this.offset + PIPELINE_IDENTIFIER_OFFSET + JAVA_BYTE.byteSize() * i, value);
		return this;
	}
	
	@NativeType("uint8_t[16]")
	public VkPipelineCacheSafetyCriticalIndexEntry pipelineIdentifier(byte[] value) {
		MemorySegment.copy(value, 0, this.segment, BYTE, this.offset + PIPELINE_IDENTIFIER_OFFSET, value.length);
		return this;
	}
	
	@NativeType("uint64_t")
	public long pipelineMemorySize() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + PIPELINE_MEMORY_SIZE_OFFSET);
	}
	
	@NativeType("uint64_t")
	public VkPipelineCacheSafetyCriticalIndexEntry pipelineMemorySize(long value) {
		LONG_HANDLE.set(this.segment, this.offset + PIPELINE_MEMORY_SIZE_OFFSET, value);
		return this;
	}
	
	@NativeType("uint64_t")
	public long jsonSize() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + JSON_SIZE_OFFSET);
	}
	
	@NativeType("uint64_t")
	public VkPipelineCacheSafetyCriticalIndexEntry jsonSize(long value) {
		LONG_HANDLE.set(this.segment, this.offset + JSON_SIZE_OFFSET, value);
		return this;
	}
	
	@NativeType("uint64_t")
	public long jsonOffset() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + JSON_OFFSET_OFFSET);
	}
	
	@NativeType("uint64_t")
	public VkPipelineCacheSafetyCriticalIndexEntry jsonOffset(long value) {
		LONG_HANDLE.set(this.segment, this.offset + JSON_OFFSET_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int stageIndexCount() {
		return (int) INT_HANDLE.get(this.segment, this.offset + STAGE_INDEX_COUNT_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPipelineCacheSafetyCriticalIndexEntry stageIndexCount(int value) {
		INT_HANDLE.set(this.segment, this.offset + STAGE_INDEX_COUNT_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int stageIndexStride() {
		return (int) INT_HANDLE.get(this.segment, this.offset + STAGE_INDEX_STRIDE_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkPipelineCacheSafetyCriticalIndexEntry stageIndexStride(int value) {
		INT_HANDLE.set(this.segment, this.offset + STAGE_INDEX_STRIDE_OFFSET, value);
		return this;
	}
	
	@NativeType("uint64_t")
	public long stageIndexOffset() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + STAGE_INDEX_OFFSET_OFFSET);
	}
	
	@NativeType("uint64_t")
	public VkPipelineCacheSafetyCriticalIndexEntry stageIndexOffset(long value) {
		LONG_HANDLE.set(this.segment, this.offset + STAGE_INDEX_OFFSET_OFFSET, value);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkPipelineCacheSafetyCriticalIndexEntry> {
		
		private static final StructConstructor<VkPipelineCacheSafetyCriticalIndexEntry> CONSTRUCTOR = VkPipelineCacheSafetyCriticalIndexEntry::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkPipelineCacheSafetyCriticalIndexEntry[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkPipelineCacheSafetyCriticalIndexEntry[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkPipelineCacheSafetyCriticalIndexEntry[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}