package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.generated.structs.VkComponentMapping;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkSamplerYcbcrConversionCreateInfoKHR extends CStruct {


	public static final CStructWrapper<VkSamplerYcbcrConversionCreateInfoKHR> WRAPPER = new CStructWrapper<>(VkSamplerYcbcrConversionCreateInfoKHR.class);

	/**
	* values = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 0;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	@StructMember()
	@NativeType("VkFormat")
	public int format;

	@StructMember()
	@NativeType("VkSamplerYcbcrModelConversion")
	public int ycbcrModel;

	@StructMember()
	@NativeType("VkSamplerYcbcrRange")
	public int ycbcrRange;

	@StructMember()
	@NativeType("VkComponentMapping")
	public VkComponentMapping components;

	@StructMember()
	@NativeType("VkChromaLocation")
	public int xChromaOffset;

	@StructMember()
	@NativeType("VkChromaLocation")
	public int yChromaOffset;

	@StructMember()
	@NativeType("VkFilter")
	public int chromaFilter;

	@StructMember()
	@NativeType("VkBool32")
	public int forceExplicitReconstruction;


	@Override
	public CStructWrapper<VkSamplerYcbcrConversionCreateInfoKHR> getWrapper() {
		return WRAPPER;
	}
}