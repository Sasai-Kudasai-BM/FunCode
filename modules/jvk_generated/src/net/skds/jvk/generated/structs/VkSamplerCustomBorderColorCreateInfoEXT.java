package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkSamplerCustomBorderColorCreateInfoEXT extends CStruct {


	public static final CStructWrapper<VkSamplerCustomBorderColorCreateInfoEXT> WRAPPER = new CStructWrapper<>(VkSamplerCustomBorderColorCreateInfoEXT.class);

	/**
	* values = VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 0;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	@StructMember(size = 16)
	@NativeType("VkClearColorValue")
	public byte[] customBorderColor;

	@StructMember()
	@NativeType("VkFormat")
	public int format;


	@Override
	public CStructWrapper<VkSamplerCustomBorderColorCreateInfoEXT> getWrapper() {
		return WRAPPER;
	}

	public float getCustomBorderColorF(int i) {
		return NativeByteArrayOperations.getFloat(this.customBorderColor, i);
	}

	public float setCustomBorderColor(int i, float value) {
		return NativeByteArrayOperations.setFloat(this.customBorderColor, i, value);
	}

	public int getCustomBorderColorI(int i) {
		return NativeByteArrayOperations.getInt(this.customBorderColor, i);
	}

	public int setCustomBorderColor(int i, int value) {
		return NativeByteArrayOperations.setInt(this.customBorderColor, i, value);
	}
}