package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.jvk.generated.structs.VkExtent2D;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkPhysicalDeviceSampleLocationsPropertiesEXT extends CStruct {


	public static final CStructWrapper<VkPhysicalDeviceSampleLocationsPropertiesEXT> WRAPPER = new CStructWrapper<>(VkPhysicalDeviceSampleLocationsPropertiesEXT.class);

	/**
	* values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 3;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	@StructMember()
	@NativeType("VkSampleCountFlags")
	public int sampleLocationSampleCounts;

	@StructMember()
	@NativeType("VkExtent2D")
	public VkExtent2D maxSampleLocationGridSize;

	@StructMember(size = 2)
	@NativeType("float[2]")
	public float[] sampleLocationCoordinateRange;

	@StructMember()
	@NativeType("uint32_t")
	public int sampleLocationSubPixelBits;

	@StructMember()
	@NativeType("VkBool32")
	public int variableSampleLocations;


	@Override
	public CStructWrapper<VkPhysicalDeviceSampleLocationsPropertiesEXT> getWrapper() {
		return WRAPPER;
	}
}