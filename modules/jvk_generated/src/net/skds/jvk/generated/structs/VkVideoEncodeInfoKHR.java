package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.jvk.generated.structs.VkVideoPictureResourceKHR;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkVideoEncodeInfoKHR extends CStruct {


	public static final CStructWrapper<VkVideoEncodeInfoKHR> WRAPPER = new CStructWrapper<>(VkVideoEncodeInfoKHR.class);

	/**
	* values = VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 0;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkVideoEncodeFlagsKHR")
	public int flags;

	@StructMember()
	@NativeType("uint32_t")
	public int qualityLevel;

	@StructMember()
	@NativeType("VkBuffer*")
	public long dstBitstreamBuffer;

	@StructMember()
	@NativeType("VkDeviceSize")
	public long dstBitstreamBufferOffset;

	@StructMember()
	@NativeType("VkDeviceSize")
	public long dstBitstreamBufferMaxRange;

	@StructMember()
	@NativeType("VkVideoPictureResourceKHR")
	public VkVideoPictureResourceKHR srcPictureResource;

	@StructMember()
	@NativeType("VkVideoReferenceSlotKHR*")
	public long pSetupReferenceSlot;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("uint32_t")
	public int referenceSlotCount;

	@StructMember()
	@NativeType("VkVideoReferenceSlotKHR*")
	public long pReferenceSlots;

	@StructMember()
	@NativeType("uint32_t")
	public int precedingExternallyEncodedBytes;


	@Override
	public CStructWrapper<VkVideoEncodeInfoKHR> getWrapper() {
		return WRAPPER;
	}
}