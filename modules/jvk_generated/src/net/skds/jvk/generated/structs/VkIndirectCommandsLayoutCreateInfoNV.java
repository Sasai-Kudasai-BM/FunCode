package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkIndirectCommandsLayoutCreateInfoNV extends CStruct {


	public static final CStructWrapper<VkIndirectCommandsLayoutCreateInfoNV> WRAPPER = new CStructWrapper<>(VkIndirectCommandsLayoutCreateInfoNV.class);

	/**
	* values = VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 4;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkIndirectCommandsLayoutUsageFlagsNV")
	public int flags;

	@StructMember()
	@NativeType("VkPipelineBindPoint")
	public int pipelineBindPoint;

	@StructMember()
	@NativeType("uint32_t")
	public int tokenCount;

	@StructMember()
	@NativeType("VkIndirectCommandsLayoutTokenNV*")
	public long pTokens;

	@StructMember()
	@NativeType("uint32_t")
	public int streamCount;

	@StructMember()
	@NativeType("uint32_t*")
	public long pStreamStrides;


	@Override
	public CStructWrapper<VkIndirectCommandsLayoutCreateInfoNV> getWrapper() {
		return WRAPPER;
	}
}