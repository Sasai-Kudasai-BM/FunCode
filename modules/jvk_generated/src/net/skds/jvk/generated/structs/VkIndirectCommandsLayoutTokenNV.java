package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkIndirectCommandsLayoutTokenNV extends CStruct {


	public static final CStructWrapper<VkIndirectCommandsLayoutTokenNV> WRAPPER = new CStructWrapper<>(VkIndirectCommandsLayoutTokenNV.class);

	/**
	* values = VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 3;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	@StructMember()
	@NativeType("VkIndirectCommandsTokenTypeNV")
	public int tokenType;

	@StructMember()
	@NativeType("uint32_t")
	public int stream;

	@StructMember()
	@NativeType("uint32_t")
	public int offset;

	@StructMember()
	@NativeType("uint32_t")
	public int vertexBindingUnit;

	@StructMember()
	@NativeType("VkBool32")
	public int vertexDynamicStride;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkPipelineLayout*")
	public long pushconstantPipelineLayout;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkShaderStageFlags")
	public int pushconstantShaderStageFlags;

	@StructMember()
	@NativeType("uint32_t")
	public int pushconstantOffset;

	@StructMember()
	@NativeType("uint32_t")
	public int pushconstantSize;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkIndirectStateFlagsNV")
	public int indirectStateFlags;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("uint32_t")
	public int indexTypeCount;

	@StructMember()
	@NativeType("VkIndexType*")
	public long pIndexTypes;

	@StructMember()
	@NativeType("uint32_t*")
	public long pIndexTypeValues;


	@Override
	public CStructWrapper<VkIndirectCommandsLayoutTokenNV> getWrapper() {
		return WRAPPER;
	}
}