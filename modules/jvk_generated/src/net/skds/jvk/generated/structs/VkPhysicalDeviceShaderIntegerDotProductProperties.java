package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static net.skds.lib2.natives.SafeLinker.*;
import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkPhysicalDeviceShaderIntegerDotProductProperties {
* 	VkStructureType sType;
* 	// pad (4)
* 	void* pNext;
* 	VkBool32 integerDotProduct8BitUnsignedAccelerated;
* 	VkBool32 integerDotProduct8BitSignedAccelerated;
* 	VkBool32 integerDotProduct8BitMixedSignednessAccelerated;
* 	VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated;
* 	VkBool32 integerDotProduct4x8BitPackedSignedAccelerated;
* 	VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated;
* 	VkBool32 integerDotProduct16BitUnsignedAccelerated;
* 	VkBool32 integerDotProduct16BitSignedAccelerated;
* 	VkBool32 integerDotProduct16BitMixedSignednessAccelerated;
* 	VkBool32 integerDotProduct32BitUnsignedAccelerated;
* 	VkBool32 integerDotProduct32BitSignedAccelerated;
* 	VkBool32 integerDotProduct32BitMixedSignednessAccelerated;
* 	VkBool32 integerDotProduct64BitUnsignedAccelerated;
* 	VkBool32 integerDotProduct64BitSignedAccelerated;
* 	VkBool32 integerDotProduct64BitMixedSignednessAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated;
* 	VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated;
* };
*</pre>
**/
@AutoGenerated
public final class VkPhysicalDeviceShaderIntegerDotProductProperties extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			JAVA_INT,
			paddingLayout(4),
			JAVA_LONG,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT
	);
	private static final int S_TYPE_OFFSET = 0;
	private static final int P_NEXT_OFFSET = 8;
	private static final int INTEGER_DOT_PRODUCT8_BIT_UNSIGNED_ACCELERATED_OFFSET = 16;
	private static final int INTEGER_DOT_PRODUCT8_BIT_SIGNED_ACCELERATED_OFFSET = 20;
	private static final int INTEGER_DOT_PRODUCT8_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET = 24;
	private static final int INTEGER_DOT_PRODUCT4X8_BIT_PACKED_UNSIGNED_ACCELERATED_OFFSET = 28;
	private static final int INTEGER_DOT_PRODUCT4X8_BIT_PACKED_SIGNED_ACCELERATED_OFFSET = 32;
	private static final int INTEGER_DOT_PRODUCT4X8_BIT_PACKED_MIXED_SIGNEDNESS_ACCELERATED_OFFSET = 36;
	private static final int INTEGER_DOT_PRODUCT16_BIT_UNSIGNED_ACCELERATED_OFFSET = 40;
	private static final int INTEGER_DOT_PRODUCT16_BIT_SIGNED_ACCELERATED_OFFSET = 44;
	private static final int INTEGER_DOT_PRODUCT16_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET = 48;
	private static final int INTEGER_DOT_PRODUCT32_BIT_UNSIGNED_ACCELERATED_OFFSET = 52;
	private static final int INTEGER_DOT_PRODUCT32_BIT_SIGNED_ACCELERATED_OFFSET = 56;
	private static final int INTEGER_DOT_PRODUCT32_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET = 60;
	private static final int INTEGER_DOT_PRODUCT64_BIT_UNSIGNED_ACCELERATED_OFFSET = 64;
	private static final int INTEGER_DOT_PRODUCT64_BIT_SIGNED_ACCELERATED_OFFSET = 68;
	private static final int INTEGER_DOT_PRODUCT64_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET = 72;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING8_BIT_UNSIGNED_ACCELERATED_OFFSET = 76;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING8_BIT_SIGNED_ACCELERATED_OFFSET = 80;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING8_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET = 84;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING4X8_BIT_PACKED_UNSIGNED_ACCELERATED_OFFSET = 88;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING4X8_BIT_PACKED_SIGNED_ACCELERATED_OFFSET = 92;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING4X8_BIT_PACKED_MIXED_SIGNEDNESS_ACCELERATED_OFFSET = 96;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING16_BIT_UNSIGNED_ACCELERATED_OFFSET = 100;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING16_BIT_SIGNED_ACCELERATED_OFFSET = 104;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING16_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET = 108;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING32_BIT_UNSIGNED_ACCELERATED_OFFSET = 112;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING32_BIT_SIGNED_ACCELERATED_OFFSET = 116;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING32_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET = 120;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING64_BIT_UNSIGNED_ACCELERATED_OFFSET = 124;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING64_BIT_SIGNED_ACCELERATED_OFFSET = 128;
	private static final int INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING64_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET = 132;
	
	public VkPhysicalDeviceShaderIntegerDotProductProperties() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceShaderIntegerDotProductProperties(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceShaderIntegerDotProductProperties(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES **/
	@NativeType("VkStructureType")
	public int sType() {
		return (int) INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET);
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceShaderIntegerDotProductProperties sType(int value) {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, value);
		return this;
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceShaderIntegerDotProductProperties sType$Default() {
		INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET, 1);
		return this;
	}
	
	/** optional **/
	@NativeType("void*")
	public long pNext() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + P_NEXT_OFFSET);
	}
	
	/** optional **/
	@NativeType("void*")
	public VkPhysicalDeviceShaderIntegerDotProductProperties pNext(long value) {
		LONG_HANDLE.set(this.segment, this.offset + P_NEXT_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct8BitUnsignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT8_BIT_UNSIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct8BitUnsignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT8_BIT_UNSIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct8BitSignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT8_BIT_SIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct8BitSignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT8_BIT_SIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct8BitMixedSignednessAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT8_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct8BitMixedSignednessAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT8_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct4x8BitPackedUnsignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT4X8_BIT_PACKED_UNSIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct4x8BitPackedUnsignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT4X8_BIT_PACKED_UNSIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct4x8BitPackedSignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT4X8_BIT_PACKED_SIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct4x8BitPackedSignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT4X8_BIT_PACKED_SIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct4x8BitPackedMixedSignednessAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT4X8_BIT_PACKED_MIXED_SIGNEDNESS_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct4x8BitPackedMixedSignednessAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT4X8_BIT_PACKED_MIXED_SIGNEDNESS_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct16BitUnsignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT16_BIT_UNSIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct16BitUnsignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT16_BIT_UNSIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct16BitSignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT16_BIT_SIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct16BitSignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT16_BIT_SIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct16BitMixedSignednessAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT16_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct16BitMixedSignednessAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT16_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct32BitUnsignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT32_BIT_UNSIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct32BitUnsignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT32_BIT_UNSIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct32BitSignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT32_BIT_SIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct32BitSignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT32_BIT_SIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct32BitMixedSignednessAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT32_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct32BitMixedSignednessAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT32_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct64BitUnsignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT64_BIT_UNSIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct64BitUnsignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT64_BIT_UNSIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct64BitSignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT64_BIT_SIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct64BitSignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT64_BIT_SIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProduct64BitMixedSignednessAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT64_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProduct64BitMixedSignednessAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT64_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating8BitUnsignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING8_BIT_UNSIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating8BitUnsignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING8_BIT_UNSIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating8BitSignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING8_BIT_SIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating8BitSignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING8_BIT_SIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING8_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING8_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING4X8_BIT_PACKED_UNSIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING4X8_BIT_PACKED_UNSIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING4X8_BIT_PACKED_SIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING4X8_BIT_PACKED_SIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING4X8_BIT_PACKED_MIXED_SIGNEDNESS_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING4X8_BIT_PACKED_MIXED_SIGNEDNESS_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating16BitUnsignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING16_BIT_UNSIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating16BitUnsignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING16_BIT_UNSIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating16BitSignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING16_BIT_SIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating16BitSignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING16_BIT_SIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING16_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING16_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating32BitUnsignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING32_BIT_UNSIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating32BitUnsignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING32_BIT_UNSIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating32BitSignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING32_BIT_SIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating32BitSignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING32_BIT_SIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING32_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING32_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating64BitUnsignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING64_BIT_UNSIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating64BitUnsignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING64_BIT_UNSIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating64BitSignedAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING64_BIT_SIGNED_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating64BitSignedAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING64_BIT_SIGNED_ACCELERATED_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public int integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated() {
		return (int) INT_HANDLE.get(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING64_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET);
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceShaderIntegerDotProductProperties integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated(int value) {
		INT_HANDLE.set(this.segment, this.offset + INTEGER_DOT_PRODUCT_ACCUMULATING_SATURATING64_BIT_MIXED_SIGNEDNESS_ACCELERATED_OFFSET, value);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkPhysicalDeviceShaderIntegerDotProductProperties> {
		
		private static final StructConstructor<VkPhysicalDeviceShaderIntegerDotProductProperties> CONSTRUCTOR = VkPhysicalDeviceShaderIntegerDotProductProperties::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkPhysicalDeviceShaderIntegerDotProductProperties[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkPhysicalDeviceShaderIntegerDotProductProperties[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkPhysicalDeviceShaderIntegerDotProductProperties[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}