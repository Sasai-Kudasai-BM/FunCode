package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static java.lang.foreign.ValueLayout.*;
import static net.skds.lib2.natives.SafeLinker.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkVideoEncodeH264CapabilitiesKHR {
* 	VkStructureType sType;
* 	// pad (4)
* 	void* pNext;
* 	VkVideoEncodeH264CapabilityFlagsKHR flags;
* 	uint32_t maxSliceCount;
* 	uint32_t maxPPictureL0ReferenceCount;
* 	uint32_t maxBPictureL0ReferenceCount;
* 	uint32_t maxL1ReferenceCount;
* 	uint32_t maxTemporalLayerCount;
* 	VkBool32 expectDyadicTemporalLayerPattern;
* 	int32_t minQp;
* 	int32_t maxQp;
* 	VkBool32 prefersGopRemainingFrames;
* 	VkBool32 requiresGopRemainingFrames;
* 	VkVideoEncodeH264StdFlagsKHR stdSyntaxFlags;
* };
*</pre>
**/
@AutoGenerated
public final class VkVideoEncodeH264CapabilitiesKHR extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			JAVA_INT,
			paddingLayout(4),
			JAVA_LONG,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT
	);
	private static final int S_TYPE_OFFSET = 0;
	private static final int P_NEXT_OFFSET = 8;
	private static final int FLAGS_OFFSET = 16;
	private static final int MAX_LEVEL_IDC_OFFSET = -1;
	private static final int MAX_SLICE_COUNT_OFFSET = 20;
	private static final int MAX_PPICTURE_L0_REFERENCE_COUNT_OFFSET = 24;
	private static final int MAX_BPICTURE_L0_REFERENCE_COUNT_OFFSET = 28;
	private static final int MAX_L1_REFERENCE_COUNT_OFFSET = 32;
	private static final int MAX_TEMPORAL_LAYER_COUNT_OFFSET = 36;
	private static final int EXPECT_DYADIC_TEMPORAL_LAYER_PATTERN_OFFSET = 40;
	private static final int MIN_QP_OFFSET = 44;
	private static final int MAX_QP_OFFSET = 48;
	private static final int PREFERS_GOP_REMAINING_FRAMES_OFFSET = 52;
	private static final int REQUIRES_GOP_REMAINING_FRAMES_OFFSET = 56;
	private static final int STD_SYNTAX_FLAGS_OFFSET = 60;
	
	public VkVideoEncodeH264CapabilitiesKHR() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkVideoEncodeH264CapabilitiesKHR(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkVideoEncodeH264CapabilitiesKHR(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	/** values = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_KHR **/
	@NativeType("VkStructureType")
	public int sType() {
		return (int) INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET);
	}
	
	/** values = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_KHR **/
	@NativeType("VkStructureType")
	public VkVideoEncodeH264CapabilitiesKHR sType(int value) {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, value);
		return this;
	}
	
	/** values = VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_KHR **/
	@NativeType("VkStructureType")
	public VkVideoEncodeH264CapabilitiesKHR sType$Default() {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, 1000038000);
		return this;
	}
	
	/** optional **/
	@NativeType("void*")
	public long pNext() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + P_NEXT_OFFSET);
	}
	
	/** optional **/
	@NativeType("void*")
	public VkVideoEncodeH264CapabilitiesKHR pNext(long value) {
		LONG_HANDLE.set(this.segment, this.offset + P_NEXT_OFFSET, value);
		return this;
	}
	
	@NativeType("VkVideoEncodeH264CapabilityFlagsKHR")
	public int flags() {
		return (int) INT_HANDLE.get(this.segment, this.offset + FLAGS_OFFSET);
	}
	
	@NativeType("VkVideoEncodeH264CapabilityFlagsKHR")
	public VkVideoEncodeH264CapabilitiesKHR flags(int value) {
		INT_HANDLE.set(this.segment, this.offset + FLAGS_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxSliceCount() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_SLICE_COUNT_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkVideoEncodeH264CapabilitiesKHR maxSliceCount(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_SLICE_COUNT_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxPPictureL0ReferenceCount() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_PPICTURE_L0_REFERENCE_COUNT_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkVideoEncodeH264CapabilitiesKHR maxPPictureL0ReferenceCount(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_PPICTURE_L0_REFERENCE_COUNT_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxBPictureL0ReferenceCount() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_BPICTURE_L0_REFERENCE_COUNT_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkVideoEncodeH264CapabilitiesKHR maxBPictureL0ReferenceCount(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_BPICTURE_L0_REFERENCE_COUNT_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxL1ReferenceCount() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_L1_REFERENCE_COUNT_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkVideoEncodeH264CapabilitiesKHR maxL1ReferenceCount(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_L1_REFERENCE_COUNT_OFFSET, value);
		return this;
	}
	
	@NativeType("uint32_t")
	public int maxTemporalLayerCount() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_TEMPORAL_LAYER_COUNT_OFFSET);
	}
	
	@NativeType("uint32_t")
	public VkVideoEncodeH264CapabilitiesKHR maxTemporalLayerCount(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_TEMPORAL_LAYER_COUNT_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean expectDyadicTemporalLayerPattern() {
		return (int) INT_HANDLE.get(this.segment, this.offset + EXPECT_DYADIC_TEMPORAL_LAYER_PATTERN_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkVideoEncodeH264CapabilitiesKHR expectDyadicTemporalLayerPattern(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + EXPECT_DYADIC_TEMPORAL_LAYER_PATTERN_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("int32_t")
	public int minQp() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MIN_QP_OFFSET);
	}
	
	@NativeType("int32_t")
	public VkVideoEncodeH264CapabilitiesKHR minQp(int value) {
		INT_HANDLE.set(this.segment, this.offset + MIN_QP_OFFSET, value);
		return this;
	}
	
	@NativeType("int32_t")
	public int maxQp() {
		return (int) INT_HANDLE.get(this.segment, this.offset + MAX_QP_OFFSET);
	}
	
	@NativeType("int32_t")
	public VkVideoEncodeH264CapabilitiesKHR maxQp(int value) {
		INT_HANDLE.set(this.segment, this.offset + MAX_QP_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean prefersGopRemainingFrames() {
		return (int) INT_HANDLE.get(this.segment, this.offset + PREFERS_GOP_REMAINING_FRAMES_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkVideoEncodeH264CapabilitiesKHR prefersGopRemainingFrames(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + PREFERS_GOP_REMAINING_FRAMES_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean requiresGopRemainingFrames() {
		return (int) INT_HANDLE.get(this.segment, this.offset + REQUIRES_GOP_REMAINING_FRAMES_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkVideoEncodeH264CapabilitiesKHR requiresGopRemainingFrames(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + REQUIRES_GOP_REMAINING_FRAMES_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkVideoEncodeH264StdFlagsKHR")
	public int stdSyntaxFlags() {
		return (int) INT_HANDLE.get(this.segment, this.offset + STD_SYNTAX_FLAGS_OFFSET);
	}
	
	@NativeType("VkVideoEncodeH264StdFlagsKHR")
	public VkVideoEncodeH264CapabilitiesKHR stdSyntaxFlags(int value) {
		INT_HANDLE.set(this.segment, this.offset + STD_SYNTAX_FLAGS_OFFSET, value);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkVideoEncodeH264CapabilitiesKHR> {
		
		private static final StructConstructor<VkVideoEncodeH264CapabilitiesKHR> CONSTRUCTOR = VkVideoEncodeH264CapabilitiesKHR::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkVideoEncodeH264CapabilitiesKHR[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkVideoEncodeH264CapabilitiesKHR[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkVideoEncodeH264CapabilitiesKHR[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}