package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkRayTracingPipelineCreateInfoNV extends CStruct {


	public static final CStructWrapper<VkRayTracingPipelineCreateInfoNV> WRAPPER = new CStructWrapper<>(VkRayTracingPipelineCreateInfoNV.class);

	/**
	* values = VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 0;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkPipelineCreateFlags")
	public int flags;

	@StructMember()
	@NativeType("uint32_t")
	public int stageCount;

	@StructMember()
	@NativeType("VkPipelineShaderStageCreateInfo*")
	public long pStages;

	@StructMember()
	@NativeType("uint32_t")
	public int groupCount;

	@StructMember()
	@NativeType("VkRayTracingShaderGroupCreateInfoNV*")
	public long pGroups;

	@StructMember()
	@NativeType("uint32_t")
	public int maxRecursionDepth;

	@StructMember()
	@NativeType("VkPipelineLayout*")
	public long layout;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("VkPipeline*")
	public long basePipelineHandle;

	@StructMember()
	@NativeType("int32_t")
	public int basePipelineIndex;


	@Override
	public CStructWrapper<VkRayTracingPipelineCreateInfoNV> getWrapper() {
		return WRAPPER;
	}
}