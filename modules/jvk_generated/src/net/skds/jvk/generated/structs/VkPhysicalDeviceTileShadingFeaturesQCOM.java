package net.skds.jvk.generated.structs;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import net.skds.jvk.StructConstructor;
import net.skds.jvk.VkStructArray;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;

import static java.lang.foreign.ValueLayout.*;
import static net.skds.lib2.natives.SafeLinker.*;
import static java.lang.foreign.MemoryLayout.*;

/**
*<pre>
* C definition:
* struct VkPhysicalDeviceTileShadingFeaturesQCOM {
* 	VkStructureType sType;
* 	// pad (4)
* 	void* pNext;
* 	VkBool32 tileShading;
* 	VkBool32 tileShadingFragmentStage;
* 	VkBool32 tileShadingColorAttachments;
* 	VkBool32 tileShadingDepthAttachments;
* 	VkBool32 tileShadingStencilAttachments;
* 	VkBool32 tileShadingInputAttachments;
* 	VkBool32 tileShadingSampledAttachments;
* 	VkBool32 tileShadingPerTileDraw;
* 	VkBool32 tileShadingPerTileDispatch;
* 	VkBool32 tileShadingDispatchTile;
* 	VkBool32 tileShadingApron;
* 	VkBool32 tileShadingAnisotropicApron;
* 	VkBool32 tileShadingAtomicOps;
* 	VkBool32 tileShadingImageProcessing;
* };
*</pre>
**/
@AutoGenerated
public final class VkPhysicalDeviceTileShadingFeaturesQCOM extends CStruct {
	
	public static final MemoryLayout MEMORY_LAYOUT = structLayout(
			JAVA_INT,
			paddingLayout(4),
			JAVA_LONG,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT,
			JAVA_INT
	);
	private static final int S_TYPE_OFFSET = 0;
	private static final int P_NEXT_OFFSET = 8;
	private static final int TILE_SHADING_OFFSET = 16;
	private static final int TILE_SHADING_FRAGMENT_STAGE_OFFSET = 20;
	private static final int TILE_SHADING_COLOR_ATTACHMENTS_OFFSET = 24;
	private static final int TILE_SHADING_DEPTH_ATTACHMENTS_OFFSET = 28;
	private static final int TILE_SHADING_STENCIL_ATTACHMENTS_OFFSET = 32;
	private static final int TILE_SHADING_INPUT_ATTACHMENTS_OFFSET = 36;
	private static final int TILE_SHADING_SAMPLED_ATTACHMENTS_OFFSET = 40;
	private static final int TILE_SHADING_PER_TILE_DRAW_OFFSET = 44;
	private static final int TILE_SHADING_PER_TILE_DISPATCH_OFFSET = 48;
	private static final int TILE_SHADING_DISPATCH_TILE_OFFSET = 52;
	private static final int TILE_SHADING_APRON_OFFSET = 56;
	private static final int TILE_SHADING_ANISOTROPIC_APRON_OFFSET = 60;
	private static final int TILE_SHADING_ATOMIC_OPS_OFFSET = 64;
	private static final int TILE_SHADING_IMAGE_PROCESSING_OFFSET = 68;
	
	public VkPhysicalDeviceTileShadingFeaturesQCOM() {
		this.segment = Arena.ofAuto().allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceTileShadingFeaturesQCOM(Arena arena) {
		this.segment = arena.allocate(MEMORY_LAYOUT.byteSize());
	}
	
	public VkPhysicalDeviceTileShadingFeaturesQCOM(MemorySegment segment, long offset) {
		super(segment, offset);
	}
	
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_SHADING_FEATURES_QCOM **/
	@NativeType("VkStructureType")
	public int sType() {
		return (int) INT_HANDLE.get(this.segment, this.offset + S_TYPE_OFFSET);
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_SHADING_FEATURES_QCOM **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceTileShadingFeaturesQCOM sType(int value) {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, value);
		return this;
	}
	
	/** values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_SHADING_FEATURES_QCOM **/
	@NativeType("VkStructureType")
	public VkPhysicalDeviceTileShadingFeaturesQCOM sType$Default() {
		INT_HANDLE.set(this.segment, this.offset + S_TYPE_OFFSET, 1000309000);
		return this;
	}
	
	/** optional **/
	@NativeType("void*")
	public long pNext() {
		return (long) LONG_HANDLE.get(this.segment, this.offset + P_NEXT_OFFSET);
	}
	
	/** optional **/
	@NativeType("void*")
	public VkPhysicalDeviceTileShadingFeaturesQCOM pNext(long value) {
		LONG_HANDLE.set(this.segment, this.offset + P_NEXT_OFFSET, value);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShading() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShading(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingFragmentStage() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_FRAGMENT_STAGE_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingFragmentStage(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_FRAGMENT_STAGE_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingColorAttachments() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_COLOR_ATTACHMENTS_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingColorAttachments(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_COLOR_ATTACHMENTS_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingDepthAttachments() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_DEPTH_ATTACHMENTS_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingDepthAttachments(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_DEPTH_ATTACHMENTS_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingStencilAttachments() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_STENCIL_ATTACHMENTS_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingStencilAttachments(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_STENCIL_ATTACHMENTS_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingInputAttachments() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_INPUT_ATTACHMENTS_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingInputAttachments(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_INPUT_ATTACHMENTS_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingSampledAttachments() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_SAMPLED_ATTACHMENTS_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingSampledAttachments(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_SAMPLED_ATTACHMENTS_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingPerTileDraw() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_PER_TILE_DRAW_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingPerTileDraw(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_PER_TILE_DRAW_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingPerTileDispatch() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_PER_TILE_DISPATCH_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingPerTileDispatch(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_PER_TILE_DISPATCH_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingDispatchTile() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_DISPATCH_TILE_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingDispatchTile(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_DISPATCH_TILE_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingApron() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_APRON_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingApron(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_APRON_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingAnisotropicApron() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_ANISOTROPIC_APRON_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingAnisotropicApron(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_ANISOTROPIC_APRON_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingAtomicOps() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_ATOMIC_OPS_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingAtomicOps(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_ATOMIC_OPS_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	@NativeType("VkBool32")
	public boolean tileShadingImageProcessing() {
		return (int) INT_HANDLE.get(this.segment, this.offset + TILE_SHADING_IMAGE_PROCESSING_OFFSET) != 0;
	}
	
	@NativeType("VkBool32")
	public VkPhysicalDeviceTileShadingFeaturesQCOM tileShadingImageProcessing(boolean value) {
		INT_HANDLE.set(this.segment, this.offset + TILE_SHADING_IMAGE_PROCESSING_OFFSET, value ? (int) 1 : (int) 0);
		return this;
	}
	
	
	@AutoGenerated
	public static final class Array extends VkStructArray<VkPhysicalDeviceTileShadingFeaturesQCOM> {
		
		private static final StructConstructor<VkPhysicalDeviceTileShadingFeaturesQCOM> CONSTRUCTOR = VkPhysicalDeviceTileShadingFeaturesQCOM::new;
		
		public Array(int size) {
			super(Arena.ofAuto(), new VkPhysicalDeviceTileShadingFeaturesQCOM[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(Arena arena, int size) {
			super(arena, new VkPhysicalDeviceTileShadingFeaturesQCOM[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
		public Array(MemorySegment segment, long offset, int size) {
			super(segment, offset, new VkPhysicalDeviceTileShadingFeaturesQCOM[size], CONSTRUCTOR, MEMORY_LAYOUT);
		}
		
	}
	
	@Override
	public int getAlignment() {
		return (int) MEMORY_LAYOUT.byteAlignment();
	}
	
	@Override
	public int getSize() {
		return (int) MEMORY_LAYOUT.byteSize();
	}
	
}