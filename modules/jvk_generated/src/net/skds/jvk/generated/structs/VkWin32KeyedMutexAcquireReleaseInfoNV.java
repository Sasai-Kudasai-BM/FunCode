package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkWin32KeyedMutexAcquireReleaseInfoNV extends CStruct {


	public static final CStructWrapper<VkWin32KeyedMutexAcquireReleaseInfoNV> WRAPPER = new CStructWrapper<>(VkWin32KeyedMutexAcquireReleaseInfoNV.class);

	/**
	* values = VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 0;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("uint32_t")
	public int acquireCount;

	@StructMember()
	@NativeType("VkDeviceMemory**")
	public long pAcquireSyncs;

	@StructMember()
	@NativeType("uint64_t*")
	public long pAcquireKeys;

	@StructMember()
	@NativeType("uint32_t*")
	public long pAcquireTimeoutMilliseconds;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("uint32_t")
	public int releaseCount;

	@StructMember()
	@NativeType("VkDeviceMemory**")
	public long pReleaseSyncs;

	@StructMember()
	@NativeType("uint64_t*")
	public long pReleaseKeys;


	@Override
	public CStructWrapper<VkWin32KeyedMutexAcquireReleaseInfoNV> getWrapper() {
		return WRAPPER;
	}
}