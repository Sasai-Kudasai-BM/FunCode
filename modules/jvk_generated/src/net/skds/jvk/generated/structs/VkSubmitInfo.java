package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkSubmitInfo extends CStruct {


	public static final CStructWrapper<VkSubmitInfo> WRAPPER = new CStructWrapper<>(VkSubmitInfo.class);

	/**
	* values = VK_STRUCTURE_TYPE_SUBMIT_INFO
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 4;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("uint32_t")
	public int waitSemaphoreCount;

	@StructMember()
	@NativeType("VkSemaphore**")
	public long pWaitSemaphores;

	@StructMember()
	@NativeType("VkPipelineStageFlags*")
	public long pWaitDstStageMask;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("uint32_t")
	public int commandBufferCount;

	@StructMember()
	@NativeType("VkCommandBuffer**")
	public long pCommandBuffers;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("uint32_t")
	public int signalSemaphoreCount;

	@StructMember()
	@NativeType("VkSemaphore**")
	public long pSignalSemaphores;


	@Override
	public CStructWrapper<VkSubmitInfo> getWrapper() {
		return WRAPPER;
	}
}