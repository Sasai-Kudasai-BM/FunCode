package net.skds.jvk.generated.structs;
import net.skds.lib2.annotations.AutoGenerated;
import net.skds.lib2.natives.struct.CStruct;
import net.skds.lib2.natives.struct.annotation.StructMember;
import net.skds.lib2.natives.struct.CStructWrapper;
import net.skds.jvk.annotation.NativeType;

@AutoGenerated
public final class VkPhysicalDevicePortabilitySubsetFeaturesKHR extends CStruct {


	public static final CStructWrapper<VkPhysicalDevicePortabilitySubsetFeaturesKHR> WRAPPER = new CStructWrapper<>(VkPhysicalDevicePortabilitySubsetFeaturesKHR.class);

	/**
	* values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR
	*/
	@StructMember()
	@NativeType("VkStructureType")
	public int sType = 0;

	/**
	* optional
	*/
	@StructMember()
	@NativeType("void*")
	public long pNext;

	@StructMember()
	@NativeType("VkBool32")
	public int constantAlphaColorBlendFactors;

	@StructMember()
	@NativeType("VkBool32")
	public int events;

	@StructMember()
	@NativeType("VkBool32")
	public int imageViewFormatReinterpretation;

	@StructMember()
	@NativeType("VkBool32")
	public int imageViewFormatSwizzle;

	@StructMember()
	@NativeType("VkBool32")
	public int imageView2DOn3DImage;

	@StructMember()
	@NativeType("VkBool32")
	public int multisampleArrayImage;

	@StructMember()
	@NativeType("VkBool32")
	public int mutableComparisonSamplers;

	@StructMember()
	@NativeType("VkBool32")
	public int pointPolygons;

	@StructMember()
	@NativeType("VkBool32")
	public int samplerMipLodBias;

	@StructMember()
	@NativeType("VkBool32")
	public int separateStencilMaskRef;

	@StructMember()
	@NativeType("VkBool32")
	public int shaderSampleRateInterpolationFunctions;

	@StructMember()
	@NativeType("VkBool32")
	public int tessellationIsolines;

	@StructMember()
	@NativeType("VkBool32")
	public int tessellationPointMode;

	@StructMember()
	@NativeType("VkBool32")
	public int triangleFans;

	@StructMember()
	@NativeType("VkBool32")
	public int vertexAttributeAccessBeyondStride;


	@Override
	public CStructWrapper<VkPhysicalDevicePortabilitySubsetFeaturesKHR> getWrapper() {
		return WRAPPER;
	}
}