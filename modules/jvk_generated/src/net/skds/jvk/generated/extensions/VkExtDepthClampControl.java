package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkExtDepthClampControl {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_CONTROL_FEATURES_EXT = 1000582000;
	public static final int VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLAMP_CONTROL_CREATE_INFO_EXT = 1000582001;
	public static final int VK_DYNAMIC_STATE_DEPTH_CLAMP_RANGE_EXT = 1000582000;
	private static final MethodHandle vkCmdSetDepthClampRangeEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdSetDepthClampRangeEXT", VOID, LONG, INT, LONG);
	
	@NativeType("void")
	public static void vkCmdSetDepthClampRangeEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkDepthClampModeEXT") int depthClampMode, /* optional */ @NativeType("VkDepthClampRangeEXT*") long pDepthClampRange) {
		try {
			vkCmdSetDepthClampRangeEXT.invokeExact(commandBuffer, depthClampMode, pDepthClampRange);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}