package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkExtBufferDeviceAddress {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT = 0;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT = 0;
	public static final int VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT = 1;
	public static final int VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT = 2;
	public static final int VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT = 131072;
	public static final int VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT = 16;
	public static final int VK_ERROR_INVALID_DEVICE_ADDRESS_EXT = 0;
	private static final MethodHandle vkGetBufferDeviceAddressEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetBufferDeviceAddressEXT", LONG, LONG, LONG);
	
	@NativeType("VkDeviceAddress")
	public static long vkGetBufferDeviceAddressEXT(@NativeType("VkDevice*") long device, @NativeType("VkBufferDeviceAddressInfo*") long pInfo) {
		try {
			return (long) vkGetBufferDeviceAddressEXT.invokeExact(device, pInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}