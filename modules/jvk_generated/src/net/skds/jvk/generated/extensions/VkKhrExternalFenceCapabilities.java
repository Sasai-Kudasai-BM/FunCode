package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkKhrExternalFenceCapabilities {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR = 1000112000;
	public static final int VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR = 1000112001;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR = 1000071004;
	public static final int VK_LUID_SIZE_KHR = 8;
	public static final int VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR = 1;
	public static final int VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR = 2;
	public static final int VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR = 4;
	public static final int VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR = 8;
	public static final int VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR = 1;
	public static final int VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR = 2;
	private static final MethodHandle vkGetPhysicalDeviceExternalFencePropertiesKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPhysicalDeviceExternalFencePropertiesKHR", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkGetPhysicalDeviceExternalFencePropertiesKHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkPhysicalDeviceExternalFenceInfo*") long pExternalFenceInfo, @NativeType("VkExternalFenceProperties*") long pExternalFenceProperties) {
		try {
			vkGetPhysicalDeviceExternalFencePropertiesKHR.invokeExact(physicalDevice, pExternalFenceInfo, pExternalFenceProperties);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}