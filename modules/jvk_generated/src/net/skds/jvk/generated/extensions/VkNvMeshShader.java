package net.skds.jvk.generated.extensions;
import net.skds.lib2.annotations.AutoGenerated;
import static net.skds.lib2.natives.SafeLinker.*;
import net.skds.jvk.VKDefinitions;
import net.skds.jvk.annotation.NativeType;
import java.lang.invoke.MethodHandle;

@AutoGenerated
public final class VkNvMeshShader {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV = 0;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV = 1;

	public static final int VK_SHADER_STAGE_TASK_BIT_NV = 64;

	public static final int VK_SHADER_STAGE_MESH_BIT_NV = 128;

	public static final int VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV = 524288;

	public static final int VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV = 1048576;

	private static final MethodHandle vkCmdDrawMeshTasksNV = createHandle(VKDefinitions.LIBRARY_LOOKUP, "vkCmdDrawMeshTasksNV", VOID, LONG, INT, INT);

	@NativeType("void")
	public static void vkCmdDrawMeshTasksNV(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("uint32_t") int taskCount, @NativeType("uint32_t") int firstTask) {
		try {
			vkCmdDrawMeshTasksNV.invokeExact(commandBuffer, taskCount, firstTask);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdDrawMeshTasksIndirectNV = createHandle(VKDefinitions.LIBRARY_LOOKUP, "vkCmdDrawMeshTasksIndirectNV", VOID, LONG, LONG, LONG, INT, INT);

	@NativeType("void")
	public static void vkCmdDrawMeshTasksIndirectNV(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkBuffer*") long buffer, @NativeType("VkDeviceSize") long offset, @NativeType("uint32_t") int drawCount, @NativeType("uint32_t") int stride) {
		try {
			vkCmdDrawMeshTasksIndirectNV.invokeExact(commandBuffer, buffer, offset, drawCount, stride);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdDrawMeshTasksIndirectCountNV = createHandle(VKDefinitions.LIBRARY_LOOKUP, "vkCmdDrawMeshTasksIndirectCountNV", VOID, LONG, LONG, LONG, LONG, LONG, INT, INT);

	@NativeType("void")
	public static void vkCmdDrawMeshTasksIndirectCountNV(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkBuffer*") long buffer, @NativeType("VkDeviceSize") long offset, @NativeType("VkBuffer*") long countBuffer, @NativeType("VkDeviceSize") long countBufferOffset, @NativeType("uint32_t") int maxDrawCount, @NativeType("uint32_t") int stride) {
		try {
			vkCmdDrawMeshTasksIndirectCountNV.invokeExact(commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}