package net.skds.jvk.generated.extensions;
import net.skds.jvk.VKDefinitions;
import static net.skds.ninvoker.NInvoker.*;
import net.skds.lib2.utils.annotations.AutoGenerated;
import net.skds.jvk.annotation.NativeType;
import java.lang.invoke.MethodHandle;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkKhrFragmentShadingRate {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	private static final MethodHandle vkGetPhysicalDeviceFragmentShadingRatesKHR = createHandle("vkGetPhysicalDeviceFragmentShadingRatesKHR", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceFragmentShadingRatesKHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("uint32_t*") /*optional*/ long pFragmentShadingRateCount, @NativeType("VkPhysicalDeviceFragmentShadingRateKHR*") /*optional*/ long pFragmentShadingRates) {
		try {
			return (int) vkGetPhysicalDeviceFragmentShadingRatesKHR.invokeExact(physicalDevice, pFragmentShadingRateCount, pFragmentShadingRates);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdSetFragmentShadingRateKHR = createHandle("vkCmdSetFragmentShadingRateKHR", VOID, LONG, LONG, INT);

	@NativeType("void")
	public static void vkCmdSetFragmentShadingRateKHR(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkExtent2D*") long pFragmentSize, @NativeType("VkFragmentShadingRateCombinerOpKHR") int combinerOps) {
		try {
			vkCmdSetFragmentShadingRateKHR.invokeExact(commandBuffer, pFragmentSize, combinerOps);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	public static final int VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR = 3;

	public static final int VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR = 0;

	public static final int VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = 0;

	public static final int VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR = 1;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR = 2;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR = 3;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR = 4;

	public static final int VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = 8388608;

	public static final int VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 256;

	public static final int VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 4194304;

	public static final int VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 1073741824;

	public static final long VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 1073741824L;
}