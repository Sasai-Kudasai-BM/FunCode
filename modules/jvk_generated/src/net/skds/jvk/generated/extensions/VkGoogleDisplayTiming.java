package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkGoogleDisplayTiming {
	
	public static final int VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE = 1000092000;
	private static final MethodHandle vkGetRefreshCycleDurationGOOGLE = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetRefreshCycleDurationGOOGLE", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_SURFACE_LOST_KHR
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetRefreshCycleDurationGOOGLE(@NativeType("VkDevice*") long device, /* external sync */ @NativeType("VkSwapchainKHR*") long swapchain, @NativeType("VkRefreshCycleDurationGOOGLE*") long pDisplayTimingProperties) {
		try {
			return (int) vkGetRefreshCycleDurationGOOGLE.invokeExact(device, swapchain, pDisplayTimingProperties);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetPastPresentationTimingGOOGLE = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPastPresentationTimingGOOGLE", INT, LONG, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_OUT_OF_DATE_KHR,VK_ERROR_SURFACE_LOST_KHR
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetPastPresentationTimingGOOGLE(@NativeType("VkDevice*") long device, /* external sync */ @NativeType("VkSwapchainKHR*") long swapchain, /* optional */ @NativeType("uint32_t*") long pPresentationTimingCount, /* optional */ @NativeType("VkPastPresentationTimingGOOGLE*") long pPresentationTimings) {
		try {
			return (int) vkGetPastPresentationTimingGOOGLE.invokeExact(device, swapchain, pPresentationTimingCount, pPresentationTimings);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}