package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkHuaweiClusterCullingShader {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI = 1000404000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI = 1000404001;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI = 1000404002;
	public static final long VK_PIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEI = 2199023255552L;
	public static final int VK_SHADER_STAGE_CLUSTER_CULLING_BIT_HUAWEI = 524288;
	public static final int VK_QUERY_PIPELINE_STATISTIC_CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI = 8192;
	private static final MethodHandle vkCmdDrawClusterHUAWEI = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdDrawClusterHUAWEI", VOID, LONG, INT, INT, INT);
	
	@NativeType("void")
	public static void vkCmdDrawClusterHUAWEI(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("uint32_t") int groupCountX, @NativeType("uint32_t") int groupCountY, @NativeType("uint32_t") int groupCountZ) {
		try {
			vkCmdDrawClusterHUAWEI.invokeExact(commandBuffer, groupCountX, groupCountY, groupCountZ);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdDrawClusterIndirectHUAWEI = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdDrawClusterIndirectHUAWEI", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdDrawClusterIndirectHUAWEI(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkBuffer*") long buffer, @NativeType("VkDeviceSize") long offset) {
		try {
			vkCmdDrawClusterIndirectHUAWEI.invokeExact(commandBuffer, buffer, offset);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}