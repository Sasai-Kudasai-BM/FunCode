package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkExtDeviceGeneratedCommands {
	
	public static final int VK_SHADER_CREATE_INDIRECT_BINDABLE_BIT_EXT = 128;
	public static final long VK_BUFFER_USAGE_2_PREPROCESS_BUFFER_BIT_EXT = 2147483648L;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_EXT = 1000572000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_EXT = 1000572001;
	public static final int VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_EXT = 1000572002;
	public static final int VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_CREATE_INFO_EXT = 1000572003;
	public static final int VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_EXT = 1000572004;
	public static final int VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_EXT = 1000572006;
	public static final int VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_EXT = 1000572007;
	public static final int VK_STRUCTURE_TYPE_WRITE_INDIRECT_EXECUTION_SET_PIPELINE_EXT = 1000572008;
	public static final int VK_STRUCTURE_TYPE_WRITE_INDIRECT_EXECUTION_SET_SHADER_EXT = 1000572009;
	public static final int VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_PIPELINE_INFO_EXT = 1000572010;
	public static final int VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_SHADER_INFO_EXT = 1000572011;
	public static final int VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_SHADER_LAYOUT_INFO_EXT = 1000572012;
	public static final int VK_STRUCTURE_TYPE_GENERATED_COMMANDS_PIPELINE_INFO_EXT = 1000572013;
	public static final int VK_STRUCTURE_TYPE_GENERATED_COMMANDS_SHADER_INFO_EXT = 1000572014;
	public static final int VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_EXT = 1000572000;
	public static final int VK_OBJECT_TYPE_INDIRECT_EXECUTION_SET_EXT = 1000572001;
	public static final long VK_PIPELINE_CREATE_2_INDIRECT_BINDABLE_BIT_EXT = 274877906944L;
	public static final int VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_EXT = 131072;
	public static final int VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_EXT = 131072;
	public static final int VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_EXT = 262144;
	private static final MethodHandle vkGetGeneratedCommandsMemoryRequirementsEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetGeneratedCommandsMemoryRequirementsEXT", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkGetGeneratedCommandsMemoryRequirementsEXT(@NativeType("VkDevice*") long device, @NativeType("VkGeneratedCommandsMemoryRequirementsInfoEXT*") long pInfo, @NativeType("VkMemoryRequirements2*") long pMemoryRequirements) {
		try {
			vkGetGeneratedCommandsMemoryRequirementsEXT.invokeExact(device, pInfo, pMemoryRequirements);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdPreprocessGeneratedCommandsEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdPreprocessGeneratedCommandsEXT", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdPreprocessGeneratedCommandsEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkGeneratedCommandsInfoEXT*") long pGeneratedCommandsInfo, /* external sync */ @NativeType("VkCommandBuffer*") long stateCommandBuffer) {
		try {
			vkCmdPreprocessGeneratedCommandsEXT.invokeExact(commandBuffer, pGeneratedCommandsInfo, stateCommandBuffer);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdExecuteGeneratedCommandsEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdExecuteGeneratedCommandsEXT", VOID, LONG, BOOLEAN, LONG);
	
	@NativeType("void")
	public static void vkCmdExecuteGeneratedCommandsEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkBool32") boolean isPreprocessed, @NativeType("VkGeneratedCommandsInfoEXT*") long pGeneratedCommandsInfo) {
		try {
			vkCmdExecuteGeneratedCommandsEXT.invokeExact(commandBuffer, isPreprocessed ? (int) 1 : (int) 0, pGeneratedCommandsInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCreateIndirectCommandsLayoutEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCreateIndirectCommandsLayoutEXT", INT, LONG, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkCreateIndirectCommandsLayoutEXT(@NativeType("VkDevice*") long device, @NativeType("VkIndirectCommandsLayoutCreateInfoEXT*") long pCreateInfo, /* optional */ @NativeType("VkAllocationCallbacks*") long pAllocator, @NativeType("VkIndirectCommandsLayoutEXT**") long pIndirectCommandsLayout) {
		try {
			return (int) vkCreateIndirectCommandsLayoutEXT.invokeExact(device, pCreateInfo, pAllocator, pIndirectCommandsLayout);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkDestroyIndirectCommandsLayoutEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkDestroyIndirectCommandsLayoutEXT", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkDestroyIndirectCommandsLayoutEXT(@NativeType("VkDevice*") long device, /* optional, external sync */ @NativeType("VkIndirectCommandsLayoutEXT*") long indirectCommandsLayout, /* optional */ @NativeType("VkAllocationCallbacks*") long pAllocator) {
		try {
			vkDestroyIndirectCommandsLayoutEXT.invokeExact(device, indirectCommandsLayout, pAllocator);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCreateIndirectExecutionSetEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCreateIndirectExecutionSetEXT", INT, LONG, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkCreateIndirectExecutionSetEXT(@NativeType("VkDevice*") long device, @NativeType("VkIndirectExecutionSetCreateInfoEXT*") long pCreateInfo, /* optional */ @NativeType("VkAllocationCallbacks*") long pAllocator, @NativeType("VkIndirectExecutionSetEXT**") long pIndirectExecutionSet) {
		try {
			return (int) vkCreateIndirectExecutionSetEXT.invokeExact(device, pCreateInfo, pAllocator, pIndirectExecutionSet);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkDestroyIndirectExecutionSetEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkDestroyIndirectExecutionSetEXT", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkDestroyIndirectExecutionSetEXT(@NativeType("VkDevice*") long device, /* optional, external sync */ @NativeType("VkIndirectExecutionSetEXT*") long indirectExecutionSet, /* optional */ @NativeType("VkAllocationCallbacks*") long pAllocator) {
		try {
			vkDestroyIndirectExecutionSetEXT.invokeExact(device, indirectExecutionSet, pAllocator);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkUpdateIndirectExecutionSetPipelineEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkUpdateIndirectExecutionSetPipelineEXT", VOID, LONG, LONG, INT, LONG);
	
	@NativeType("void")
	public static void vkUpdateIndirectExecutionSetPipelineEXT(@NativeType("VkDevice*") long device, /* external sync */ @NativeType("VkIndirectExecutionSetEXT*") long indirectExecutionSet, @NativeType("uint32_t") int executionSetWriteCount, @NativeType("VkWriteIndirectExecutionSetPipelineEXT*") long pExecutionSetWrites) {
		try {
			vkUpdateIndirectExecutionSetPipelineEXT.invokeExact(device, indirectExecutionSet, executionSetWriteCount, pExecutionSetWrites);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkUpdateIndirectExecutionSetShaderEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkUpdateIndirectExecutionSetShaderEXT", VOID, LONG, LONG, INT, LONG);
	
	@NativeType("void")
	public static void vkUpdateIndirectExecutionSetShaderEXT(@NativeType("VkDevice*") long device, /* external sync */ @NativeType("VkIndirectExecutionSetEXT*") long indirectExecutionSet, @NativeType("uint32_t") int executionSetWriteCount, @NativeType("VkWriteIndirectExecutionSetShaderEXT*") long pExecutionSetWrites) {
		try {
			vkUpdateIndirectExecutionSetShaderEXT.invokeExact(device, indirectExecutionSet, executionSetWriteCount, pExecutionSetWrites);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}