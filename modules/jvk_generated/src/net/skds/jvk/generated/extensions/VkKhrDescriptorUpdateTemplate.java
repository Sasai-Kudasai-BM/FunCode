package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkKhrDescriptorUpdateTemplate {
	
	public static final int VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR = 1000085000;
	public static final int VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR = 1000085000;
	private static final MethodHandle vkCreateDescriptorUpdateTemplateKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCreateDescriptorUpdateTemplateKHR", INT, LONG, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkCreateDescriptorUpdateTemplateKHR(@NativeType("VkDevice*") long device, @NativeType("VkDescriptorUpdateTemplateCreateInfo*") long pCreateInfo, /* optional */ @NativeType("VkAllocationCallbacks*") long pAllocator, @NativeType("VkDescriptorUpdateTemplate**") long pDescriptorUpdateTemplate) {
		try {
			return (int) vkCreateDescriptorUpdateTemplateKHR.invokeExact(device, pCreateInfo, pAllocator, pDescriptorUpdateTemplate);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkDestroyDescriptorUpdateTemplateKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkDestroyDescriptorUpdateTemplateKHR", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkDestroyDescriptorUpdateTemplateKHR(@NativeType("VkDevice*") long device, /* optional, external sync */ @NativeType("VkDescriptorUpdateTemplate*") long descriptorUpdateTemplate, /* optional */ @NativeType("VkAllocationCallbacks*") long pAllocator) {
		try {
			vkDestroyDescriptorUpdateTemplateKHR.invokeExact(device, descriptorUpdateTemplate, pAllocator);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkUpdateDescriptorSetWithTemplateKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkUpdateDescriptorSetWithTemplateKHR", VOID, LONG, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkUpdateDescriptorSetWithTemplateKHR(@NativeType("VkDevice*") long device, /* external sync */ @NativeType("VkDescriptorSet*") long descriptorSet, @NativeType("VkDescriptorUpdateTemplate*") long descriptorUpdateTemplate, @NativeType("void*") long pData) {
		try {
			vkUpdateDescriptorSetWithTemplateKHR.invokeExact(device, descriptorSet, descriptorUpdateTemplate, pData);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	public static final int VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR = 0;
	private static final MethodHandle vkCmdPushDescriptorSetWithTemplateKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdPushDescriptorSetWithTemplateKHR", VOID, LONG, LONG, LONG, INT, LONG);
	
	@NativeType("void")
	public static void vkCmdPushDescriptorSetWithTemplateKHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkDescriptorUpdateTemplate*") long descriptorUpdateTemplate, @NativeType("VkPipelineLayout*") long layout, @NativeType("uint32_t") int set, @NativeType("void*") long pData) {
		try {
			vkCmdPushDescriptorSetWithTemplateKHR.invokeExact(commandBuffer, descriptorUpdateTemplate, layout, set, pData);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	// Create descriptor update template for pushed descriptor updates
	
	/** Create descriptor update template for pushed descriptor updates **/
	public static final int VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR = 1;
	public static final int VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT = 1000085000;
}