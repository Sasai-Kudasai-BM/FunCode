package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkExtConditionalRendering {
	
	public static final int VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT = 1000081000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT = 1000081001;
	public static final int VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT = 1000081002;
	
	// read access flag for reading conditional rendering predicate
	
	/** read access flag for reading conditional rendering predicate **/
	public static final int VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT = 1048576;
	
	// Specifies the buffer can be used as predicate in conditional rendering
	
	/** Specifies the buffer can be used as predicate in conditional rendering **/
	public static final int VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT = 512;
	
	// A pipeline stage for conditional rendering predicate fetch
	
	/** A pipeline stage for conditional rendering predicate fetch **/
	public static final int VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT = 262144;
	private static final MethodHandle vkCmdBeginConditionalRenderingEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdBeginConditionalRenderingEXT", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdBeginConditionalRenderingEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkConditionalRenderingBeginInfoEXT*") long pConditionalRenderingBegin) {
		try {
			vkCmdBeginConditionalRenderingEXT.invokeExact(commandBuffer, pConditionalRenderingBegin);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdEndConditionalRenderingEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdEndConditionalRenderingEXT", VOID, LONG);
	
	@NativeType("void")
	public static void vkCmdEndConditionalRenderingEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer) {
		try {
			vkCmdEndConditionalRenderingEXT.invokeExact(commandBuffer);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}