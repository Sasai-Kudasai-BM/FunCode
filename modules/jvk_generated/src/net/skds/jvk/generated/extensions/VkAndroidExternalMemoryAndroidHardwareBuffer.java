package net.skds.jvk.generated.extensions;
import net.skds.lib2.annotations.AutoGenerated;
import static net.skds.lib2.natives.SafeLinker.*;
import net.skds.jvk.VKDefinitions;
import net.skds.jvk.annotation.NativeType;
import java.lang.invoke.MethodHandle;

@AutoGenerated
public final class VkAndroidExternalMemoryAndroidHardwareBuffer {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	public static final int VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID = 1024;

	public static final int VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID = 0;

	public static final int VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID = 1;

	public static final int VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID = 2;

	public static final int VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = 3;

	public static final int VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = 4;

	public static final int VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID = 5;

	private static final MethodHandle vkGetAndroidHardwareBufferPropertiesANDROID = createHandle(VKDefinitions.LIBRARY_LOOKUP, "vkGetAndroidHardwareBufferPropertiesANDROID", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR
	*/
	@NativeType("VkResult")
	public static int vkGetAndroidHardwareBufferPropertiesANDROID(@NativeType("VkDevice*") long device, @NativeType("AHardwareBuffer*") long buffer, @NativeType("VkAndroidHardwareBufferPropertiesANDROID*") long pProperties) {
		try {
			return (int) vkGetAndroidHardwareBufferPropertiesANDROID.invokeExact(device, buffer, pProperties);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkGetMemoryAndroidHardwareBufferANDROID = createHandle(VKDefinitions.LIBRARY_LOOKUP, "vkGetMemoryAndroidHardwareBufferANDROID", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkGetMemoryAndroidHardwareBufferANDROID(@NativeType("VkDevice*") long device, @NativeType("VkMemoryGetAndroidHardwareBufferInfoANDROID*") long pInfo, @NativeType("AHardwareBuffer*") long pBuffer) {
		try {
			return (int) vkGetMemoryAndroidHardwareBufferANDROID.invokeExact(device, pInfo, pBuffer);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	public static final int VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID = 6;
}