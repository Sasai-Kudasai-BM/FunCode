package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkKhrGetDisplayProperties2 {
	
	public static final int VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR = 1000121000;
	public static final int VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR = 1000121001;
	public static final int VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR = 1000121002;
	public static final int VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR = 1000121003;
	public static final int VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR = 1000121004;
	private static final MethodHandle vkGetPhysicalDeviceDisplayProperties2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPhysicalDeviceDisplayProperties2KHR", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceDisplayProperties2KHR(@NativeType("VkPhysicalDevice*") long physicalDevice, /* optional */ @NativeType("uint32_t*") long pPropertyCount, /* optional */ @NativeType("VkDisplayProperties2KHR*") long pProperties) {
		try {
			return (int) vkGetPhysicalDeviceDisplayProperties2KHR.invokeExact(physicalDevice, pPropertyCount, pProperties);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetPhysicalDeviceDisplayPlaneProperties2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPhysicalDeviceDisplayPlaneProperties2KHR", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceDisplayPlaneProperties2KHR(@NativeType("VkPhysicalDevice*") long physicalDevice, /* optional */ @NativeType("uint32_t*") long pPropertyCount, /* optional */ @NativeType("VkDisplayPlaneProperties2KHR*") long pProperties) {
		try {
			return (int) vkGetPhysicalDeviceDisplayPlaneProperties2KHR.invokeExact(physicalDevice, pPropertyCount, pProperties);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetDisplayModeProperties2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetDisplayModeProperties2KHR", INT, LONG, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetDisplayModeProperties2KHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkDisplayKHR*") long display, /* optional */ @NativeType("uint32_t*") long pPropertyCount, /* optional */ @NativeType("VkDisplayModeProperties2KHR*") long pProperties) {
		try {
			return (int) vkGetDisplayModeProperties2KHR.invokeExact(physicalDevice, display, pPropertyCount, pProperties);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetDisplayPlaneCapabilities2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetDisplayPlaneCapabilities2KHR", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetDisplayPlaneCapabilities2KHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkDisplayPlaneInfo2KHR*") long pDisplayPlaneInfo, @NativeType("VkDisplayPlaneCapabilities2KHR*") long pCapabilities) {
		try {
			return (int) vkGetDisplayPlaneCapabilities2KHR.invokeExact(physicalDevice, pDisplayPlaneInfo, pCapabilities);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}