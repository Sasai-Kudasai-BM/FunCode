package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkKhrExternalMemoryWin32 {
	
	public static final int VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR = 1000073000;
	public static final int VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR = 1000073001;
	public static final int VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR = 1000073002;
	public static final int VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR = 1000073003;
	private static final MethodHandle vkGetMemoryWin32HandleKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetMemoryWin32HandleKHR", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetMemoryWin32HandleKHR(@NativeType("VkDevice*") long device, @NativeType("VkMemoryGetWin32HandleInfoKHR*") long pGetWin32HandleInfo, @NativeType("HANDLE**") long pHandle) {
		try {
			return (int) vkGetMemoryWin32HandleKHR.invokeExact(device, pGetWin32HandleInfo, pHandle);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetMemoryWin32HandlePropertiesKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetMemoryWin32HandlePropertiesKHR", INT, LONG, INT, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetMemoryWin32HandlePropertiesKHR(@NativeType("VkDevice*") long device, @NativeType("VkExternalMemoryHandleTypeFlagBits") int handleType, @NativeType("HANDLE*") long handle, @NativeType("VkMemoryWin32HandlePropertiesKHR*") long pMemoryWin32HandleProperties) {
		try {
			return (int) vkGetMemoryWin32HandlePropertiesKHR.invokeExact(device, handleType, handle, pMemoryWin32HandleProperties);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}