package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkKhrDrawIndirectCount {
	
	private static final MethodHandle vkCmdDrawIndirectCountKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdDrawIndirectCountKHR", VOID, LONG, LONG, LONG, LONG, LONG, INT, INT);
	
	@NativeType("void")
	public static void vkCmdDrawIndirectCountKHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkBuffer*") long buffer, @NativeType("VkDeviceSize") long offset, @NativeType("VkBuffer*") long countBuffer, @NativeType("VkDeviceSize") long countBufferOffset, @NativeType("uint32_t") int maxDrawCount, @NativeType("uint32_t") int stride) {
		try {
			vkCmdDrawIndirectCountKHR.invokeExact(commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdDrawIndexedIndirectCountKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdDrawIndexedIndirectCountKHR", VOID, LONG, LONG, LONG, LONG, LONG, INT, INT);
	
	@NativeType("void")
	public static void vkCmdDrawIndexedIndirectCountKHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkBuffer*") long buffer, @NativeType("VkDeviceSize") long offset, @NativeType("VkBuffer*") long countBuffer, @NativeType("VkDeviceSize") long countBufferOffset, @NativeType("uint32_t") int maxDrawCount, @NativeType("uint32_t") int stride) {
		try {
			vkCmdDrawIndexedIndirectCountKHR.invokeExact(commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}