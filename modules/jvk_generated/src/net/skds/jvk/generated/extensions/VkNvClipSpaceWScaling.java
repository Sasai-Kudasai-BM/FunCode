package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkNvClipSpaceWScaling {
	
	public static final int VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV = 1000087000;
	public static final int VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV = 1000087000;
	private static final MethodHandle vkCmdSetViewportWScalingNV = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdSetViewportWScalingNV", VOID, LONG, INT, INT, LONG);
	
	@NativeType("void")
	public static void vkCmdSetViewportWScalingNV(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("uint32_t") int firstViewport, @NativeType("uint32_t") int viewportCount, @NativeType("VkViewportWScalingNV*") long pViewportWScalings) {
		try {
			vkCmdSetViewportWScalingNV.invokeExact(commandBuffer, firstViewport, viewportCount, pViewportWScalings);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}