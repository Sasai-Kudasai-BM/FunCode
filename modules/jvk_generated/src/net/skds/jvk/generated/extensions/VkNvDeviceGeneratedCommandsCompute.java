package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkNvDeviceGeneratedCommandsCompute {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV = 1000428000;
	public static final int VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV = 1000428001;
	public static final int VK_STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV = 1000428002;
	public static final int VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NV = 1000428003;
	public static final int VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NV = 1000428004;
	public static final int VK_DESCRIPTOR_SET_LAYOUT_CREATE_INDIRECT_BINDABLE_BIT_NV = 128;
	private static final MethodHandle vkGetPipelineIndirectMemoryRequirementsNV = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPipelineIndirectMemoryRequirementsNV", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkGetPipelineIndirectMemoryRequirementsNV(@NativeType("VkDevice*") long device, @NativeType("VkComputePipelineCreateInfo*") long pCreateInfo, @NativeType("VkMemoryRequirements2*") long pMemoryRequirements) {
		try {
			vkGetPipelineIndirectMemoryRequirementsNV.invokeExact(device, pCreateInfo, pMemoryRequirements);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdUpdatePipelineIndirectBufferNV = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdUpdatePipelineIndirectBufferNV", VOID, LONG, INT, LONG);
	
	@NativeType("void")
	public static void vkCmdUpdatePipelineIndirectBufferNV(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkPipelineBindPoint") int pipelineBindPoint, @NativeType("VkPipeline*") long pipeline) {
		try {
			vkCmdUpdatePipelineIndirectBufferNV.invokeExact(commandBuffer, pipelineBindPoint, pipeline);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetPipelineIndirectDeviceAddressNV = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPipelineIndirectDeviceAddressNV", LONG, LONG, LONG);
	
	@NativeType("VkDeviceAddress")
	public static long vkGetPipelineIndirectDeviceAddressNV(@NativeType("VkDevice*") long device, @NativeType("VkPipelineIndirectDeviceAddressInfoNV*") long pInfo) {
		try {
			return (long) vkGetPipelineIndirectDeviceAddressNV.invokeExact(device, pInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}