package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkExtMetalSurface {
	
	public static final int VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT = 1000217000;
	private static final MethodHandle vkCreateMetalSurfaceEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCreateMetalSurfaceEXT", INT, LONG, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_NATIVE_WINDOW_IN_USE_KHR
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkCreateMetalSurfaceEXT(@NativeType("VkInstance*") long instance, @NativeType("VkMetalSurfaceCreateInfoEXT*") long pCreateInfo, /* optional */ @NativeType("VkAllocationCallbacks*") long pAllocator, @NativeType("VkSurfaceKHR**") long pSurface) {
		try {
			return (int) vkCreateMetalSurfaceEXT.invokeExact(instance, pCreateInfo, pAllocator, pSurface);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}