package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkKhrPresentWait2 {
	
	// Allow use of VK_KHR_present_wait2 with this swapchain
	
	/** Allow use of VK_KHR_present_wait2 with this swapchain **/
	public static final int VK_SWAPCHAIN_CREATE_PRESENT_WAIT_2_BIT_KHR = 128;
	public static final int VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_WAIT_2_KHR = 1000480000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_2_FEATURES_KHR = 1000480001;
	public static final int VK_STRUCTURE_TYPE_PRESENT_WAIT_2_INFO_KHR = 1000480002;
	private static final MethodHandle vkWaitForPresent2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkWaitForPresent2KHR", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS,VK_TIMEOUT,VK_SUBOPTIMAL_KHR
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_OUT_OF_DATE_KHR,VK_ERROR_SURFACE_LOST_KHR,VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkWaitForPresent2KHR(@NativeType("VkDevice*") long device, /* external sync */ @NativeType("VkSwapchainKHR*") long swapchain, @NativeType("VkPresentWait2InfoKHR*") long pPresentWait2Info) {
		try {
			return (int) vkWaitForPresent2KHR.invokeExact(device, swapchain, pPresentWait2Info);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}