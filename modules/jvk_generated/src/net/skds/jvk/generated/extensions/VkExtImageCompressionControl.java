package net.skds.jvk.generated.extensions;
import net.skds.lib2.annotations.AutoGenerated;
import static net.skds.lib2.natives.SafeLinker.*;
import net.skds.jvk.VKDefinitions;
import net.skds.jvk.annotation.NativeType;
import java.lang.invoke.MethodHandle;

@AutoGenerated
public final class VkExtImageCompressionControl {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT = 0;

	public static final int VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT = 1;

	public static final int VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_EXT = 2;

	public static final int VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_EXT = 3;

	public static final int VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT = 4;

	public static final int VK_ERROR_COMPRESSION_EXHAUSTED_EXT = 0;

	private static final MethodHandle vkGetImageSubresourceLayout2EXT = createHandle(VKDefinitions.LIBRARY_LOOKUP, "vkGetImageSubresourceLayout2EXT", VOID, LONG, LONG, LONG, LONG);

	@NativeType("void")
	public static void vkGetImageSubresourceLayout2EXT(@NativeType("VkDevice*") long device, @NativeType("VkImage*") long image, @NativeType("VkImageSubresource2EXT*") long pSubresource, @NativeType("VkSubresourceLayout2EXT*") long pLayout) {
		try {
			vkGetImageSubresourceLayout2EXT.invokeExact(device, image, pSubresource, pLayout);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}