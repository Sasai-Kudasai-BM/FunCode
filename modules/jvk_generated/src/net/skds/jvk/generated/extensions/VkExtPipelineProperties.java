package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkExtPipelineProperties {
	
	public static final int VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT = 1000372000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT = 1000372001;
	public static final int VK_STRUCTURE_TYPE_PIPELINE_INFO_EXT = 1000269001;
	private static final MethodHandle vkGetPipelinePropertiesEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPipelinePropertiesEXT", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetPipelinePropertiesEXT(@NativeType("VkDevice*") long device, @NativeType("VkPipelineInfoEXT*") long pPipelineInfo, @NativeType("VkBaseOutStructure*") long pPipelineProperties) {
		try {
			return (int) vkGetPipelinePropertiesEXT.invokeExact(device, pPipelineInfo, pPipelineProperties);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}