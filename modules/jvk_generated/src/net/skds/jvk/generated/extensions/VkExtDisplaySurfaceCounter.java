package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkExtDisplaySurfaceCounter {
	
	public static final int VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT = 1000090000;
	public static final int VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT = 1000090000;
	private static final MethodHandle vkGetPhysicalDeviceSurfaceCapabilities2EXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPhysicalDeviceSurfaceCapabilities2EXT", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceSurfaceCapabilities2EXT(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkSurfaceKHR*") long surface, @NativeType("VkSurfaceCapabilities2EXT*") long pSurfaceCapabilities) {
		try {
			return (int) vkGetPhysicalDeviceSurfaceCapabilities2EXT.invokeExact(physicalDevice, surface, pSurfaceCapabilities);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}