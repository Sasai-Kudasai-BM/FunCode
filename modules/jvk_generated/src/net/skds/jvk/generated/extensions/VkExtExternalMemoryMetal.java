package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkExtExternalMemoryMetal {
	
	public static final int VK_STRUCTURE_TYPE_IMPORT_MEMORY_METAL_HANDLE_INFO_EXT = 1000602000;
	public static final int VK_STRUCTURE_TYPE_MEMORY_METAL_HANDLE_PROPERTIES_EXT = 1000602001;
	public static final int VK_STRUCTURE_TYPE_MEMORY_GET_METAL_HANDLE_INFO_EXT = 1000602002;
	public static final int VK_EXTERNAL_MEMORY_HANDLE_TYPE_MTLBUFFER_BIT_EXT = 65536;
	public static final int VK_EXTERNAL_MEMORY_HANDLE_TYPE_MTLTEXTURE_BIT_EXT = 131072;
	public static final int VK_EXTERNAL_MEMORY_HANDLE_TYPE_MTLHEAP_BIT_EXT = 262144;
	private static final MethodHandle vkGetMemoryMetalHandleEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetMemoryMetalHandleEXT", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetMemoryMetalHandleEXT(@NativeType("VkDevice*") long device, @NativeType("VkMemoryGetMetalHandleInfoEXT*") long pGetMetalHandleInfo, @NativeType("void*") long pHandle) {
		try {
			return (int) vkGetMemoryMetalHandleEXT.invokeExact(device, pGetMetalHandleInfo, pHandle);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetMemoryMetalHandlePropertiesEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetMemoryMetalHandlePropertiesEXT", INT, LONG, INT, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetMemoryMetalHandlePropertiesEXT(@NativeType("VkDevice*") long device, @NativeType("VkExternalMemoryHandleTypeFlagBits") int handleType, @NativeType("void*") long pHandle, @NativeType("VkMemoryMetalHandlePropertiesEXT*") long pMemoryMetalHandleProperties) {
		try {
			return (int) vkGetMemoryMetalHandlePropertiesEXT.invokeExact(device, handleType, pHandle, pMemoryMetalHandleProperties);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}