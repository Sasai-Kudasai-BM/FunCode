package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkKhrDeferredHostOperations {
	
	public static final int VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR = 1000268000;
	private static final MethodHandle vkCreateDeferredOperationKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCreateDeferredOperationKHR", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkCreateDeferredOperationKHR(@NativeType("VkDevice*") long device, /* optional */ @NativeType("VkAllocationCallbacks*") long pAllocator, @NativeType("VkDeferredOperationKHR**") long pDeferredOperation) {
		try {
			return (int) vkCreateDeferredOperationKHR.invokeExact(device, pAllocator, pDeferredOperation);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkDestroyDeferredOperationKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkDestroyDeferredOperationKHR", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkDestroyDeferredOperationKHR(@NativeType("VkDevice*") long device, /* optional, external sync */ @NativeType("VkDeferredOperationKHR*") long operation, /* optional */ @NativeType("VkAllocationCallbacks*") long pAllocator) {
		try {
			vkDestroyDeferredOperationKHR.invokeExact(device, operation, pAllocator);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetDeferredOperationMaxConcurrencyKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetDeferredOperationMaxConcurrencyKHR", INT, LONG, LONG);
	
	@NativeType("uint32_t")
	public static int vkGetDeferredOperationMaxConcurrencyKHR(@NativeType("VkDevice*") long device, @NativeType("VkDeferredOperationKHR*") long operation) {
		try {
			return (int) vkGetDeferredOperationMaxConcurrencyKHR.invokeExact(device, operation);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetDeferredOperationResultKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetDeferredOperationResultKHR", INT, LONG, LONG);
	
	/** successcodes = VK_SUCCESS,VK_NOT_READY **/
	@NativeType("VkResult")
	public static int vkGetDeferredOperationResultKHR(@NativeType("VkDevice*") long device, @NativeType("VkDeferredOperationKHR*") long operation) {
		try {
			return (int) vkGetDeferredOperationResultKHR.invokeExact(device, operation);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkDeferredOperationJoinKHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkDeferredOperationJoinKHR", INT, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS,VK_THREAD_DONE_KHR,VK_THREAD_IDLE_KHR
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkDeferredOperationJoinKHR(@NativeType("VkDevice*") long device, @NativeType("VkDeferredOperationKHR*") long operation) {
		try {
			return (int) vkDeferredOperationJoinKHR.invokeExact(device, operation);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	public static final int VK_THREAD_IDLE_KHR = 1000268000;
	public static final int VK_THREAD_DONE_KHR = 1000268001;
	public static final int VK_OPERATION_DEFERRED_KHR = 1000268002;
	public static final int VK_OPERATION_NOT_DEFERRED_KHR = 1000268003;
}