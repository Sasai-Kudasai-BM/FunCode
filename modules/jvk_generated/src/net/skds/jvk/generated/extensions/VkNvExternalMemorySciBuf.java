package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkNvExternalMemorySciBuf {
	
	public static final int VK_STRUCTURE_TYPE_IMPORT_MEMORY_SCI_BUF_INFO_NV = 1000374000;
	public static final int VK_STRUCTURE_TYPE_EXPORT_MEMORY_SCI_BUF_INFO_NV = 1000374001;
	public static final int VK_STRUCTURE_TYPE_MEMORY_GET_SCI_BUF_INFO_NV = 1000374002;
	public static final int VK_STRUCTURE_TYPE_MEMORY_SCI_BUF_PROPERTIES_NV = 1000374003;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCI_BUF_FEATURES_NV = 1000374004;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SCI_BUF_FEATURES_NV = 1000374004;
	public static final int VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCI_BUF_BIT_NV = 8192;
	private static final MethodHandle vkGetMemorySciBufNV = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetMemorySciBufNV", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_INITIALIZATION_FAILED
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetMemorySciBufNV(@NativeType("VkDevice*") long device, @NativeType("VkMemoryGetSciBufInfoNV*") long pGetSciBufInfo, @NativeType("NvSciBufObj**") long pHandle) {
		try {
			return (int) vkGetMemorySciBufNV.invokeExact(device, pGetSciBufInfo, pHandle);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV", INT, LONG, INT, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_INVALID_EXTERNAL_HANDLE
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkExternalMemoryHandleTypeFlagBits") int handleType, @NativeType("NvSciBufObj*") long handle, @NativeType("VkMemorySciBufPropertiesNV*") long pMemorySciBufProperties) {
		try {
			return (int) vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV.invokeExact(physicalDevice, handleType, handle, pMemorySciBufProperties);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetPhysicalDeviceSciBufAttributesNV = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPhysicalDeviceSciBufAttributesNV", INT, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INITIALIZATION_FAILED
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceSciBufAttributesNV(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("NvSciBufAttrList*") long pAttributes) {
		try {
			return (int) vkGetPhysicalDeviceSciBufAttributesNV.invokeExact(physicalDevice, pAttributes);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}