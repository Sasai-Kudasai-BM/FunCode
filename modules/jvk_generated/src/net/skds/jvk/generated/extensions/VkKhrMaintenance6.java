package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkKhrMaintenance6 {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES_KHR = 1000545000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES_KHR = 1000545001;
	public static final int VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS_KHR = 1000545002;
	public static final int VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO_KHR = 1000545003;
	public static final int VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO_KHR = 1000545004;
	private static final MethodHandle vkCmdBindDescriptorSets2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdBindDescriptorSets2KHR", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdBindDescriptorSets2KHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkBindDescriptorSetsInfo*") long pBindDescriptorSetsInfo) {
		try {
			vkCmdBindDescriptorSets2KHR.invokeExact(commandBuffer, pBindDescriptorSetsInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdPushConstants2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdPushConstants2KHR", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdPushConstants2KHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkPushConstantsInfo*") long pPushConstantsInfo) {
		try {
			vkCmdPushConstants2KHR.invokeExact(commandBuffer, pPushConstantsInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	public static final int VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO_KHR = 1000545005;
	public static final int VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO_KHR = 1000545006;
	private static final MethodHandle vkCmdPushDescriptorSet2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdPushDescriptorSet2KHR", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdPushDescriptorSet2KHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkPushDescriptorSetInfo*") long pPushDescriptorSetInfo) {
		try {
			vkCmdPushDescriptorSet2KHR.invokeExact(commandBuffer, pPushDescriptorSetInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdPushDescriptorSetWithTemplate2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdPushDescriptorSetWithTemplate2KHR", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdPushDescriptorSetWithTemplate2KHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkPushDescriptorSetWithTemplateInfo*") long pPushDescriptorSetWithTemplateInfo) {
		try {
			vkCmdPushDescriptorSetWithTemplate2KHR.invokeExact(commandBuffer, pPushDescriptorSetWithTemplateInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	public static final int VK_STRUCTURE_TYPE_SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT = 1000545007;
	public static final int VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT = 1000545008;
	private static final MethodHandle vkCmdSetDescriptorBufferOffsets2EXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdSetDescriptorBufferOffsets2EXT", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdSetDescriptorBufferOffsets2EXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkSetDescriptorBufferOffsetsInfoEXT*") long pSetDescriptorBufferOffsetsInfo) {
		try {
			vkCmdSetDescriptorBufferOffsets2EXT.invokeExact(commandBuffer, pSetDescriptorBufferOffsetsInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdBindDescriptorBufferEmbeddedSamplers2EXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkBindDescriptorBufferEmbeddedSamplersInfoEXT*") long pBindDescriptorBufferEmbeddedSamplersInfo) {
		try {
			vkCmdBindDescriptorBufferEmbeddedSamplers2EXT.invokeExact(commandBuffer, pBindDescriptorBufferEmbeddedSamplersInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	// Individual APIs with dependencies on specific versions/extensions should get their own require blocks with depends= attribute set appropriately
}