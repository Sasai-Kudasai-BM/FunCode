package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkNvCoverageReductionMode {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV = 1000250000;
	public static final int VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV = 1000250001;
	public static final int VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV = 1000250002;
	private static final MethodHandle vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(@NativeType("VkPhysicalDevice*") long physicalDevice, /* optional */ @NativeType("uint32_t*") long pCombinationCount, /* optional */ @NativeType("VkFramebufferMixedSamplesCombinationNV*") long pCombinations) {
		try {
			return (int) vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV.invokeExact(physicalDevice, pCombinationCount, pCombinations);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}