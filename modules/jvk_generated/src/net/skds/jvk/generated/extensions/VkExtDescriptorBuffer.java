package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkExtDescriptorBuffer {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT = 1000316000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT = 1000316001;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT = 1000316002;
	public static final int VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT = 1000316003;
	public static final int VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT = 1000316004;
	public static final int VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316005;
	public static final int VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316006;
	public static final int VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316007;
	public static final int VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316008;
	public static final int VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT = 1000316010;
	public static final int VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT = 1000316011;
	public static final int VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT = 1000316012;
	public static final int VK_DESCRIPTOR_SET_LAYOUT_CREATE_DESCRIPTOR_BUFFER_BIT_EXT = 16;
	public static final int VK_DESCRIPTOR_SET_LAYOUT_CREATE_EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT = 32;
	public static final int VK_BUFFER_USAGE_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT = 2097152;
	public static final int VK_BUFFER_USAGE_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT = 4194304;
	public static final int VK_BUFFER_USAGE_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT = 67108864;
	public static final int VK_BUFFER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = 32;
	public static final int VK_IMAGE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = 65536;
	public static final int VK_IMAGE_VIEW_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = 4;
	public static final int VK_SAMPLER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = 8;
	public static final int VK_ACCELERATION_STRUCTURE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = 8;
	public static final long VK_ACCESS_2_DESCRIPTOR_BUFFER_READ_BIT_EXT = 2199023255552L;
	public static final int VK_PIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXT = 536870912;
	private static final MethodHandle vkGetDescriptorSetLayoutSizeEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetDescriptorSetLayoutSizeEXT", VOID, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkGetDescriptorSetLayoutSizeEXT(@NativeType("VkDevice*") long device, @NativeType("VkDescriptorSetLayout*") long layout, @NativeType("VkDeviceSize*") long pLayoutSizeInBytes) {
		try {
			vkGetDescriptorSetLayoutSizeEXT.invokeExact(device, layout, pLayoutSizeInBytes);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetDescriptorSetLayoutBindingOffsetEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetDescriptorSetLayoutBindingOffsetEXT", VOID, LONG, LONG, INT, LONG);
	
	@NativeType("void")
	public static void vkGetDescriptorSetLayoutBindingOffsetEXT(@NativeType("VkDevice*") long device, @NativeType("VkDescriptorSetLayout*") long layout, @NativeType("uint32_t") int binding, @NativeType("VkDeviceSize*") long pOffset) {
		try {
			vkGetDescriptorSetLayoutBindingOffsetEXT.invokeExact(device, layout, binding, pOffset);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetDescriptorEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetDescriptorEXT", VOID, LONG, LONG, LONG, LONG);
	
	@NativeType("void")
	public static void vkGetDescriptorEXT(@NativeType("VkDevice*") long device, @NativeType("VkDescriptorGetInfoEXT*") long pDescriptorInfo, @NativeType("size_t") long dataSize, @NativeType("void*") long pDescriptor) {
		try {
			vkGetDescriptorEXT.invokeExact(device, pDescriptorInfo, dataSize, pDescriptor);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdBindDescriptorBuffersEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdBindDescriptorBuffersEXT", VOID, LONG, INT, LONG);
	
	@NativeType("void")
	public static void vkCmdBindDescriptorBuffersEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("uint32_t") int bufferCount, @NativeType("VkDescriptorBufferBindingInfoEXT*") long pBindingInfos) {
		try {
			vkCmdBindDescriptorBuffersEXT.invokeExact(commandBuffer, bufferCount, pBindingInfos);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdSetDescriptorBufferOffsetsEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdSetDescriptorBufferOffsetsEXT", VOID, LONG, INT, LONG, INT, INT, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdSetDescriptorBufferOffsetsEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkPipelineBindPoint") int pipelineBindPoint, @NativeType("VkPipelineLayout*") long layout, @NativeType("uint32_t") int firstSet, @NativeType("uint32_t") int setCount, @NativeType("uint32_t*") long pBufferIndices, @NativeType("VkDeviceSize*") long pOffsets) {
		try {
			vkCmdSetDescriptorBufferOffsetsEXT.invokeExact(commandBuffer, pipelineBindPoint, layout, firstSet, setCount, pBufferIndices, pOffsets);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdBindDescriptorBufferEmbeddedSamplersEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdBindDescriptorBufferEmbeddedSamplersEXT", VOID, LONG, INT, LONG, INT);
	
	@NativeType("void")
	public static void vkCmdBindDescriptorBufferEmbeddedSamplersEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkPipelineBindPoint") int pipelineBindPoint, @NativeType("VkPipelineLayout*") long layout, @NativeType("uint32_t") int set) {
		try {
			vkCmdBindDescriptorBufferEmbeddedSamplersEXT.invokeExact(commandBuffer, pipelineBindPoint, layout, set);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetBufferOpaqueCaptureDescriptorDataEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetBufferOpaqueCaptureDescriptorDataEXT", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetBufferOpaqueCaptureDescriptorDataEXT(@NativeType("VkDevice*") long device, @NativeType("VkBufferCaptureDescriptorDataInfoEXT*") long pInfo, @NativeType("void*") long pData) {
		try {
			return (int) vkGetBufferOpaqueCaptureDescriptorDataEXT.invokeExact(device, pInfo, pData);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetImageOpaqueCaptureDescriptorDataEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetImageOpaqueCaptureDescriptorDataEXT", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetImageOpaqueCaptureDescriptorDataEXT(@NativeType("VkDevice*") long device, @NativeType("VkImageCaptureDescriptorDataInfoEXT*") long pInfo, @NativeType("void*") long pData) {
		try {
			return (int) vkGetImageOpaqueCaptureDescriptorDataEXT.invokeExact(device, pInfo, pData);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetImageViewOpaqueCaptureDescriptorDataEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetImageViewOpaqueCaptureDescriptorDataEXT", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetImageViewOpaqueCaptureDescriptorDataEXT(@NativeType("VkDevice*") long device, @NativeType("VkImageViewCaptureDescriptorDataInfoEXT*") long pInfo, @NativeType("void*") long pData) {
		try {
			return (int) vkGetImageViewOpaqueCaptureDescriptorDataEXT.invokeExact(device, pInfo, pData);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetSamplerOpaqueCaptureDescriptorDataEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetSamplerOpaqueCaptureDescriptorDataEXT", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetSamplerOpaqueCaptureDescriptorDataEXT(@NativeType("VkDevice*") long device, @NativeType("VkSamplerCaptureDescriptorDataInfoEXT*") long pInfo, @NativeType("void*") long pData) {
		try {
			return (int) vkGetSamplerOpaqueCaptureDescriptorDataEXT.invokeExact(device, pInfo, pData);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316009;
	private static final MethodHandle vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT(@NativeType("VkDevice*") long device, @NativeType("VkAccelerationStructureCaptureDescriptorDataInfoEXT*") long pInfo, @NativeType("void*") long pData) {
		try {
			return (int) vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT.invokeExact(device, pInfo, pData);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}