package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkKhrGetSurfaceCapabilities2 {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR = 1000119000;
	public static final int VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR = 1000119001;
	public static final int VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR = 1000119002;
	private static final MethodHandle vkGetPhysicalDeviceSurfaceCapabilities2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPhysicalDeviceSurfaceCapabilities2KHR", INT, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceSurfaceCapabilities2KHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkPhysicalDeviceSurfaceInfo2KHR*") long pSurfaceInfo, @NativeType("VkSurfaceCapabilities2KHR*") long pSurfaceCapabilities) {
		try {
			return (int) vkGetPhysicalDeviceSurfaceCapabilities2KHR.invokeExact(physicalDevice, pSurfaceInfo, pSurfaceCapabilities);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkGetPhysicalDeviceSurfaceFormats2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkGetPhysicalDeviceSurfaceFormats2KHR", INT, LONG, LONG, LONG, LONG);
	
	/**
	*<pre>
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR
	*</pre>
	**/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceSurfaceFormats2KHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkPhysicalDeviceSurfaceInfo2KHR*") long pSurfaceInfo, /* optional */ @NativeType("uint32_t*") long pSurfaceFormatCount, /* optional */ @NativeType("VkSurfaceFormat2KHR*") long pSurfaceFormats) {
		try {
			return (int) vkGetPhysicalDeviceSurfaceFormats2KHR.invokeExact(physicalDevice, pSurfaceInfo, pSurfaceFormatCount, pSurfaceFormats);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}