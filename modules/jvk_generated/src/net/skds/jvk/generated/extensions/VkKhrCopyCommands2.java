package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkKhrCopyCommands2 {
	
	public static final int VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR = 0;
	public static final int VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR = 1;
	public static final int VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR = 2;
	public static final int VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR = 3;
	public static final int VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR = 4;
	public static final int VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR = 5;
	public static final int VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR = 6;
	public static final int VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR = 7;
	public static final int VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR = 8;
	public static final int VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR = 9;
	public static final int VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR = 10;
	private static final MethodHandle vkCmdCopyBuffer2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdCopyBuffer2KHR", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdCopyBuffer2KHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkCopyBufferInfo2*") long pCopyBufferInfo) {
		try {
			vkCmdCopyBuffer2KHR.invokeExact(commandBuffer, pCopyBufferInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdCopyImage2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdCopyImage2KHR", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdCopyImage2KHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkCopyImageInfo2*") long pCopyImageInfo) {
		try {
			vkCmdCopyImage2KHR.invokeExact(commandBuffer, pCopyImageInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdCopyBufferToImage2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdCopyBufferToImage2KHR", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdCopyBufferToImage2KHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkCopyBufferToImageInfo2*") long pCopyBufferToImageInfo) {
		try {
			vkCmdCopyBufferToImage2KHR.invokeExact(commandBuffer, pCopyBufferToImageInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdCopyImageToBuffer2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdCopyImageToBuffer2KHR", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdCopyImageToBuffer2KHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkCopyImageToBufferInfo2*") long pCopyImageToBufferInfo) {
		try {
			vkCmdCopyImageToBuffer2KHR.invokeExact(commandBuffer, pCopyImageToBufferInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdBlitImage2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdBlitImage2KHR", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdBlitImage2KHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkBlitImageInfo2*") long pBlitImageInfo) {
		try {
			vkCmdBlitImage2KHR.invokeExact(commandBuffer, pBlitImageInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdResolveImage2KHR = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdResolveImage2KHR", VOID, LONG, LONG);
	
	@NativeType("void")
	public static void vkCmdResolveImage2KHR(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkResolveImageInfo2*") long pResolveImageInfo) {
		try {
			vkCmdResolveImage2KHR.invokeExact(commandBuffer, pResolveImageInfo);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}