package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.LinkerUtils.*;

@AutoGenerated
public final class VkNvScissorExclusive {
	
	public static final int VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV = 1000205000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV = 1000205002;
	public static final int VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_ENABLE_NV = 1000205000;
	public static final int VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV = 1000205001;
	private static final MethodHandle vkCmdSetExclusiveScissorEnableNV = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdSetExclusiveScissorEnableNV", VOID, LONG, INT, INT, LONG);
	
	@NativeType("void")
	public static void vkCmdSetExclusiveScissorEnableNV(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("uint32_t") int firstExclusiveScissor, @NativeType("uint32_t") int exclusiveScissorCount, @NativeType("VkBool32*") long pExclusiveScissorEnables) {
		try {
			vkCmdSetExclusiveScissorEnableNV.invokeExact(commandBuffer, firstExclusiveScissor, exclusiveScissorCount, pExclusiveScissorEnables);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdSetExclusiveScissorNV = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdSetExclusiveScissorNV", VOID, LONG, INT, INT, LONG);
	
	@NativeType("void")
	public static void vkCmdSetExclusiveScissorNV(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("uint32_t") int firstExclusiveScissor, @NativeType("uint32_t") int exclusiveScissorCount, @NativeType("VkRect2D*") long pExclusiveScissors) {
		try {
			vkCmdSetExclusiveScissorNV.invokeExact(commandBuffer, firstExclusiveScissor, exclusiveScissorCount, pExclusiveScissors);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
}