package net.skds.jvk.generated.extensions;
import net.skds.jvk.VKDefinitions;
import static net.skds.ninvoker.NInvoker.*;
import net.skds.lib2.utils.annotations.AutoGenerated;
import net.skds.jvk.annotation.NativeType;
import java.lang.invoke.MethodHandle;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkExtExtendedDynamicState2 {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	// Not promoted to 1.3

	/**
	* Not promoted to 1.3
	*/
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT = 0;

	// Not promoted to 1.3

	/**
	* Not promoted to 1.3
	*/
	public static final int VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT = 0;

	public static final int VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT = 1;

	public static final int VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT = 2;

	// Not promoted to 1.3

	/**
	* Not promoted to 1.3
	*/
	public static final int VK_DYNAMIC_STATE_LOGIC_OP_EXT = 3;

	public static final int VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT = 4;

	// Not promoted to 1.3

	// Not promoted to 1.3

	private static final MethodHandle vkCmdSetPatchControlPointsEXT = createHandle("vkCmdSetPatchControlPointsEXT", VOID, LONG, INT);

	@NativeType("void")
	public static void vkCmdSetPatchControlPointsEXT(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("uint32_t") int patchControlPoints) {
		try {
			vkCmdSetPatchControlPointsEXT.invokeExact(commandBuffer, patchControlPoints);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdSetRasterizerDiscardEnableEXT = createHandle("vkCmdSetRasterizerDiscardEnableEXT", VOID, LONG, INT);

	@NativeType("void")
	public static void vkCmdSetRasterizerDiscardEnableEXT(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkBool32") int rasterizerDiscardEnable) {
		try {
			vkCmdSetRasterizerDiscardEnableEXT.invokeExact(commandBuffer, rasterizerDiscardEnable);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdSetDepthBiasEnableEXT = createHandle("vkCmdSetDepthBiasEnableEXT", VOID, LONG, INT);

	@NativeType("void")
	public static void vkCmdSetDepthBiasEnableEXT(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkBool32") int depthBiasEnable) {
		try {
			vkCmdSetDepthBiasEnableEXT.invokeExact(commandBuffer, depthBiasEnable);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	// Not promoted to 1.3

	private static final MethodHandle vkCmdSetLogicOpEXT = createHandle("vkCmdSetLogicOpEXT", VOID, LONG, INT);

	@NativeType("void")
	public static void vkCmdSetLogicOpEXT(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkLogicOp") int logicOp) {
		try {
			vkCmdSetLogicOpEXT.invokeExact(commandBuffer, logicOp);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdSetPrimitiveRestartEnableEXT = createHandle("vkCmdSetPrimitiveRestartEnableEXT", VOID, LONG, INT);

	@NativeType("void")
	public static void vkCmdSetPrimitiveRestartEnableEXT(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkBool32") int primitiveRestartEnable) {
		try {
			vkCmdSetPrimitiveRestartEnableEXT.invokeExact(commandBuffer, primitiveRestartEnable);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}