package net.skds.jvk.generated.extensions;

import java.lang.invoke.MethodHandle;
import net.skds.jvk.VkDefinitions;
import net.skds.jvk.annotation.NativeType;
import net.skds.lib2.annotations.AutoGenerated;

import static net.skds.lib2.natives.SafeLinker.*;

@AutoGenerated
public final class VkExtMeshShader {
	
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT = 1000328000;
	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT = 1000328001;
	public static final int VK_SHADER_STAGE_TASK_BIT_EXT = 64;
	public static final int VK_SHADER_STAGE_MESH_BIT_EXT = 128;
	public static final int VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT = 524288;
	public static final int VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT = 1048576;
	public static final int VK_QUERY_TYPE_MESH_PRIMITIVES_GENERATED_EXT = 1000328000;
	public static final int VK_QUERY_PIPELINE_STATISTIC_TASK_SHADER_INVOCATIONS_BIT_EXT = 2048;
	public static final int VK_QUERY_PIPELINE_STATISTIC_MESH_SHADER_INVOCATIONS_BIT_EXT = 4096;
	private static final MethodHandle vkCmdDrawMeshTasksEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdDrawMeshTasksEXT", VOID, LONG, INT, INT, INT);
	
	@NativeType("void")
	public static void vkCmdDrawMeshTasksEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("uint32_t") int groupCountX, @NativeType("uint32_t") int groupCountY, @NativeType("uint32_t") int groupCountZ) {
		try {
			vkCmdDrawMeshTasksEXT.invokeExact(commandBuffer, groupCountX, groupCountY, groupCountZ);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdDrawMeshTasksIndirectEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdDrawMeshTasksIndirectEXT", VOID, LONG, LONG, LONG, INT, INT);
	
	@NativeType("void")
	public static void vkCmdDrawMeshTasksIndirectEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkBuffer*") long buffer, @NativeType("VkDeviceSize") long offset, @NativeType("uint32_t") int drawCount, @NativeType("uint32_t") int stride) {
		try {
			vkCmdDrawMeshTasksIndirectEXT.invokeExact(commandBuffer, buffer, offset, drawCount, stride);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	private static final MethodHandle vkCmdDrawMeshTasksIndirectCountEXT = createHandle(VkDefinitions.LIBRARY_LOOKUP, "vkCmdDrawMeshTasksIndirectCountEXT", VOID, LONG, LONG, LONG, LONG, LONG, INT, INT);
	
	@NativeType("void")
	public static void vkCmdDrawMeshTasksIndirectCountEXT(/* external sync */ @NativeType("VkCommandBuffer*") long commandBuffer, @NativeType("VkBuffer*") long buffer, @NativeType("VkDeviceSize") long offset, @NativeType("VkBuffer*") long countBuffer, @NativeType("VkDeviceSize") long countBufferOffset, @NativeType("uint32_t") int maxDrawCount, @NativeType("uint32_t") int stride) {
		try {
			vkCmdDrawMeshTasksIndirectCountEXT.invokeExact(commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride);
		} catch (Throwable e) {
			throw new Error(e);
		}
	}
	
	
	public static final int VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_MESH_TASKS_NV = 1000328000;
	public static final int VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_MESH_TASKS_EXT = 1000328000;
	public static final int VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_MESH_TASKS_COUNT_EXT = 1000328001;
}