package net.skds.jvk.generated.structs;
import net.skds.jvk.annotation.NativeType;
import net.skds.ninvoker.struct.AbstractNativeStructure;
import net.skds.ninvoker.struct.NativeStructureWrapper;
import net.skds.lib.utils.annotations.AutoGenerated;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkPhysicalDeviceVulkan12Features extends AbstractNativeStructure {


	public static final NativeStructureWrapper WRAPPER = new NativeStructureWrapper(VkPhysicalDeviceVulkan12Features.class);

	/**
	* values = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES
	*/
	@NativeType("VkStructureType")
	public int sType;

	/**
	* optional
	*/
	@NativeType("void*")
	public long pNext;

	@NativeType("VkBool32")
	public int samplerMirrorClampToEdge;

	@NativeType("VkBool32")
	public int drawIndirectCount;

	@NativeType("VkBool32")
	public int storageBuffer8BitAccess;

	@NativeType("VkBool32")
	public int uniformAndStorageBuffer8BitAccess;

	@NativeType("VkBool32")
	public int storagePushConstant8;

	@NativeType("VkBool32")
	public int shaderBufferInt64Atomics;

	@NativeType("VkBool32")
	public int shaderSharedInt64Atomics;

	@NativeType("VkBool32")
	public int shaderFloat16;

	@NativeType("VkBool32")
	public int shaderInt8;

	@NativeType("VkBool32")
	public int descriptorIndexing;

	@NativeType("VkBool32")
	public int shaderInputAttachmentArrayDynamicIndexing;

	@NativeType("VkBool32")
	public int shaderUniformTexelBufferArrayDynamicIndexing;

	@NativeType("VkBool32")
	public int shaderStorageTexelBufferArrayDynamicIndexing;

	@NativeType("VkBool32")
	public int shaderUniformBufferArrayNonUniformIndexing;

	@NativeType("VkBool32")
	public int shaderSampledImageArrayNonUniformIndexing;

	@NativeType("VkBool32")
	public int shaderStorageBufferArrayNonUniformIndexing;

	@NativeType("VkBool32")
	public int shaderStorageImageArrayNonUniformIndexing;

	@NativeType("VkBool32")
	public int shaderInputAttachmentArrayNonUniformIndexing;

	@NativeType("VkBool32")
	public int shaderUniformTexelBufferArrayNonUniformIndexing;

	@NativeType("VkBool32")
	public int shaderStorageTexelBufferArrayNonUniformIndexing;

	@NativeType("VkBool32")
	public int descriptorBindingUniformBufferUpdateAfterBind;

	@NativeType("VkBool32")
	public int descriptorBindingSampledImageUpdateAfterBind;

	@NativeType("VkBool32")
	public int descriptorBindingStorageImageUpdateAfterBind;

	@NativeType("VkBool32")
	public int descriptorBindingStorageBufferUpdateAfterBind;

	@NativeType("VkBool32")
	public int descriptorBindingUniformTexelBufferUpdateAfterBind;

	@NativeType("VkBool32")
	public int descriptorBindingStorageTexelBufferUpdateAfterBind;

	@NativeType("VkBool32")
	public int descriptorBindingUpdateUnusedWhilePending;

	@NativeType("VkBool32")
	public int descriptorBindingPartiallyBound;

	@NativeType("VkBool32")
	public int descriptorBindingVariableDescriptorCount;

	@NativeType("VkBool32")
	public int runtimeDescriptorArray;

	@NativeType("VkBool32")
	public int samplerFilterMinmax;

	@NativeType("VkBool32")
	public int scalarBlockLayout;

	@NativeType("VkBool32")
	public int imagelessFramebuffer;

	@NativeType("VkBool32")
	public int uniformBufferStandardLayout;

	@NativeType("VkBool32")
	public int shaderSubgroupExtendedTypes;

	@NativeType("VkBool32")
	public int separateDepthStencilLayouts;

	@NativeType("VkBool32")
	public int hostQueryReset;

	@NativeType("VkBool32")
	public int timelineSemaphore;

	@NativeType("VkBool32")
	public int bufferDeviceAddress;

	@NativeType("VkBool32")
	public int bufferDeviceAddressCaptureReplay;

	@NativeType("VkBool32")
	public int bufferDeviceAddressMultiDevice;

	@NativeType("VkBool32")
	public int vulkanMemoryModel;

	@NativeType("VkBool32")
	public int vulkanMemoryModelDeviceScope;

	@NativeType("VkBool32")
	public int vulkanMemoryModelAvailabilityVisibilityChains;

	@NativeType("VkBool32")
	public int shaderOutputViewportIndex;

	@NativeType("VkBool32")
	public int shaderOutputLayer;

	@NativeType("VkBool32")
	public int subgroupBroadcastDynamicId;


	@Override
	protected NativeStructureWrapper getWrapper() {
		return WRAPPER;
	}
}