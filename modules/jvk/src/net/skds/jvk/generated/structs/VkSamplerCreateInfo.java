package net.skds.jvk.generated.structs;
import net.skds.ninvoker.struct.NativeStructureWrapper;
import net.skds.lib.utils.annotations.AutoGenerated;
import net.skds.jvk.annotation.NativeType;
import net.skds.ninvoker.struct.AbstractNativeStructure;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkSamplerCreateInfo extends AbstractNativeStructure {


	public static final NativeStructureWrapper WRAPPER = new NativeStructureWrapper(VkSamplerCreateInfo.class);

	/**
	* values = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO
	*/
	@NativeType("VkStructureType")
	public int sType = 31;

	/**
	* optional
	*/
	@NativeType("void*")
	public long pNext;

	/**
	* optional
	*/
	@NativeType("VkSamplerCreateFlags")
	public int flags;

	@NativeType("VkFilter")
	public int magFilter;

	@NativeType("VkFilter")
	public int minFilter;

	@NativeType("VkSamplerMipmapMode")
	public int mipmapMode;

	@NativeType("VkSamplerAddressMode")
	public int addressModeU;

	@NativeType("VkSamplerAddressMode")
	public int addressModeV;

	@NativeType("VkSamplerAddressMode")
	public int addressModeW;

	@NativeType("float")
	public float mipLodBias;

	@NativeType("VkBool32")
	public int anisotropyEnable;

	@NativeType("float")
	public float maxAnisotropy;

	@NativeType("VkBool32")
	public int compareEnable;

	@NativeType("VkCompareOp")
	public int compareOp;

	@NativeType("float")
	public float minLod;

	@NativeType("float")
	public float maxLod;

	@NativeType("VkBorderColor")
	public int borderColor;

	@NativeType("VkBool32")
	public int unnormalizedCoordinates;


	@Override
	protected NativeStructureWrapper getWrapper() {
		return WRAPPER;
	}
}