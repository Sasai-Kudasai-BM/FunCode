package net.skds.jvk.generated.extensions;
import net.skds.jvk.annotation.NativeType;
import static net.skds.ninvoker.NInvoker.*;
import java.lang.invoke.MethodHandle;
import net.skds.jvk.VKDefinitions;
import net.skds.lib.utils.annotations.AutoGenerated;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkAmdBufferMarker {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	private static final MethodHandle vkCmdWriteBufferMarkerAMD = createHandle("vkCmdWriteBufferMarkerAMD", VOID, LONG, INT, LONG, LONG, INT);

	@NativeType("void")
	public static void vkCmdWriteBufferMarkerAMD(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkPipelineStageFlagBits") /*optional*/ int pipelineStage, @NativeType("VkBuffer*") long dstBuffer, @NativeType("VkDeviceSize") long dstOffset, @NativeType("uint32_t") int marker) {
		try {
			vkCmdWriteBufferMarkerAMD.invokeExact(commandBuffer, pipelineStage, dstBuffer, dstOffset, marker);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}