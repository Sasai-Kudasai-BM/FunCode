package net.skds.jvk.generated.extensions;
import net.skds.jvk.VKDefinitions;
import net.skds.lib.utils.annotations.AutoGenerated;
import static net.skds.ninvoker.NInvoker.*;
import net.skds.jvk.annotation.NativeType;
import java.lang.invoke.MethodHandle;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkKhrMaintenance3 {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	// Backwards-compatible alias containing a typo

	// Backwards-compatible alias containing a typo

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR = 0;

	public static final int VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR = 1;

	private static final MethodHandle vkGetDescriptorSetLayoutSupportKHR = createHandle("vkGetDescriptorSetLayoutSupportKHR", VOID, LONG, LONG, LONG);

	@NativeType("void")
	public static void vkGetDescriptorSetLayoutSupportKHR(@NativeType("VkDevice*") long device, @NativeType("VkDescriptorSetLayoutCreateInfo*") long pCreateInfo, @NativeType("VkDescriptorSetLayoutSupport*") long pSupport) {
		try {
			vkGetDescriptorSetLayoutSupportKHR.invokeExact(device, pCreateInfo, pSupport);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}