package net.skds.jvk.generated.extensions;
import net.skds.jvk.annotation.NativeType;
import static net.skds.ninvoker.NInvoker.*;
import java.lang.invoke.MethodHandle;
import net.skds.jvk.VKDefinitions;
import net.skds.lib.utils.annotations.AutoGenerated;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkNvFragmentShadingRateEnums {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV = 0;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV = 1;

	public static final int VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV = 2;

	private static final MethodHandle vkCmdSetFragmentShadingRateEnumNV = createHandle("vkCmdSetFragmentShadingRateEnumNV", VOID, LONG, INT, INT);

	@NativeType("void")
	public static void vkCmdSetFragmentShadingRateEnumNV(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkFragmentShadingRateNV") int shadingRate, @NativeType("VkFragmentShadingRateCombinerOpKHR") int combinerOps) {
		try {
			vkCmdSetFragmentShadingRateEnumNV.invokeExact(commandBuffer, shadingRate, combinerOps);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}