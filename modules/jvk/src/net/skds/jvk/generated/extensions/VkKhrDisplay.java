package net.skds.jvk.generated.extensions;
import net.skds.jvk.VKDefinitions;
import net.skds.lib.utils.annotations.AutoGenerated;
import static net.skds.ninvoker.NInvoker.*;
import net.skds.jvk.annotation.NativeType;
import java.lang.invoke.MethodHandle;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkKhrDisplay {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	public static final int VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR = 0;

	public static final int VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR = 1;

	public static final int VK_OBJECT_TYPE_DISPLAY_KHR = 0;

	public static final int VK_OBJECT_TYPE_DISPLAY_MODE_KHR = 1;

	private static final MethodHandle vkGetPhysicalDeviceDisplayPropertiesKHR = createHandle("vkGetPhysicalDeviceDisplayPropertiesKHR", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceDisplayPropertiesKHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("uint32_t*") /*optional*/ long pPropertyCount, @NativeType("VkDisplayPropertiesKHR*") /*optional*/ long pProperties) {
		try {
			return (int) vkGetPhysicalDeviceDisplayPropertiesKHR.invokeExact(physicalDevice, pPropertyCount, pProperties);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkGetPhysicalDeviceDisplayPlanePropertiesKHR = createHandle("vkGetPhysicalDeviceDisplayPlanePropertiesKHR", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceDisplayPlanePropertiesKHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("uint32_t*") /*optional*/ long pPropertyCount, @NativeType("VkDisplayPlanePropertiesKHR*") /*optional*/ long pProperties) {
		try {
			return (int) vkGetPhysicalDeviceDisplayPlanePropertiesKHR.invokeExact(physicalDevice, pPropertyCount, pProperties);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkGetDisplayPlaneSupportedDisplaysKHR = createHandle("vkGetDisplayPlaneSupportedDisplaysKHR", INT, LONG, INT, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkGetDisplayPlaneSupportedDisplaysKHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("uint32_t") int planeIndex, @NativeType("uint32_t*") /*optional*/ long pDisplayCount, @NativeType("VkDisplayKHR**") /*optional*/ long pDisplays) {
		try {
			return (int) vkGetDisplayPlaneSupportedDisplaysKHR.invokeExact(physicalDevice, planeIndex, pDisplayCount, pDisplays);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkGetDisplayModePropertiesKHR = createHandle("vkGetDisplayModePropertiesKHR", INT, LONG, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkGetDisplayModePropertiesKHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkDisplayKHR*") long display, @NativeType("uint32_t*") /*optional*/ long pPropertyCount, @NativeType("VkDisplayModePropertiesKHR*") /*optional*/ long pProperties) {
		try {
			return (int) vkGetDisplayModePropertiesKHR.invokeExact(physicalDevice, display, pPropertyCount, pProperties);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCreateDisplayModeKHR = createHandle("vkCreateDisplayModeKHR", INT, LONG, LONG, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED
	*/
	@NativeType("VkResult")
	public static int vkCreateDisplayModeKHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkDisplayKHR*") /*external sync*/ long display, @NativeType("VkDisplayModeCreateInfoKHR*") long pCreateInfo, @NativeType("VkAllocationCallbacks*") /*optional*/ long pAllocator, @NativeType("VkDisplayModeKHR**") long pMode) {
		try {
			return (int) vkCreateDisplayModeKHR.invokeExact(physicalDevice, display, pCreateInfo, pAllocator, pMode);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkGetDisplayPlaneCapabilitiesKHR = createHandle("vkGetDisplayPlaneCapabilitiesKHR", INT, LONG, LONG, INT, LONG);

	/**
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkGetDisplayPlaneCapabilitiesKHR(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkDisplayModeKHR*") /*external sync*/ long mode, @NativeType("uint32_t") int planeIndex, @NativeType("VkDisplayPlaneCapabilitiesKHR*") long pCapabilities) {
		try {
			return (int) vkGetDisplayPlaneCapabilitiesKHR.invokeExact(physicalDevice, mode, planeIndex, pCapabilities);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCreateDisplayPlaneSurfaceKHR = createHandle("vkCreateDisplayPlaneSurfaceKHR", INT, LONG, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkCreateDisplayPlaneSurfaceKHR(@NativeType("VkInstance*") long instance, @NativeType("VkDisplaySurfaceCreateInfoKHR*") long pCreateInfo, @NativeType("VkAllocationCallbacks*") /*optional*/ long pAllocator, @NativeType("VkSurfaceKHR**") long pSurface) {
		try {
			return (int) vkCreateDisplayPlaneSurfaceKHR.invokeExact(instance, pCreateInfo, pAllocator, pSurface);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}