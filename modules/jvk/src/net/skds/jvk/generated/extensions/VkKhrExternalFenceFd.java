package net.skds.jvk.generated.extensions;
import net.skds.jvk.annotation.NativeType;
import static net.skds.ninvoker.NInvoker.*;
import java.lang.invoke.MethodHandle;
import net.skds.jvk.VKDefinitions;
import net.skds.lib.utils.annotations.AutoGenerated;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkKhrExternalFenceFd {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	public static final int VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR = 0;

	public static final int VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR = 1;

	private static final MethodHandle vkImportFenceFdKHR = createHandle("vkImportFenceFdKHR", INT, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE
	*/
	@NativeType("VkResult")
	public static int vkImportFenceFdKHR(@NativeType("VkDevice*") long device, @NativeType("VkImportFenceFdInfoKHR*") long pImportFenceFdInfo) {
		try {
			return (int) vkImportFenceFdKHR.invokeExact(device, pImportFenceFdInfo);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkGetFenceFdKHR = createHandle("vkGetFenceFdKHR", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkGetFenceFdKHR(@NativeType("VkDevice*") long device, @NativeType("VkFenceGetFdInfoKHR*") long pGetFdInfo, @NativeType("int*") long pFd) {
		try {
			return (int) vkGetFenceFdKHR.invokeExact(device, pGetFdInfo, pFd);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}