package net.skds.jvk.generated.extensions;
import net.skds.jvk.annotation.NativeType;
import static net.skds.ninvoker.NInvoker.*;
import java.lang.invoke.MethodHandle;
import net.skds.jvk.VKDefinitions;
import net.skds.lib.utils.annotations.AutoGenerated;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkKhrAccelerationStructure {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	public static final int VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR = 7;

	public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR = 0;

	public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR = 2;

	public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR = 3;

	public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR = 4;

	public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR = 5;

	public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR = 6;

	public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR = 9;

	public static final int VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR = 10;

	public static final int VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR = 11;

	public static final int VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR = 12;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR = 13;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR = 14;

	public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR = 17;

	public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR = 20;

	public static final int VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR = 33554432;

	public static final int VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR = 0;

	public static final int VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR = 2097152;

	public static final int VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR = 4194304;

	public static final int VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR = 0;

	public static final int VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR = 1;

	public static final int VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR = 0;

	public static final int VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT = 0;

	public static final int VK_INDEX_TYPE_NONE_KHR = 0;

	public static final int VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR = 536870912;

	public static final int VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR = 524288;

	public static final int VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR = 1048576;

	private static final MethodHandle vkCreateAccelerationStructureKHR = createHandle("vkCreateAccelerationStructureKHR", INT, LONG, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR
	*/
	@NativeType("VkResult")
	public static int vkCreateAccelerationStructureKHR(@NativeType("VkDevice*") long device, @NativeType("VkAccelerationStructureCreateInfoKHR*") long pCreateInfo, @NativeType("VkAllocationCallbacks*") /*optional*/ long pAllocator, @NativeType("VkAccelerationStructureKHR**") long pAccelerationStructure) {
		try {
			return (int) vkCreateAccelerationStructureKHR.invokeExact(device, pCreateInfo, pAllocator, pAccelerationStructure);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkDestroyAccelerationStructureKHR = createHandle("vkDestroyAccelerationStructureKHR", VOID, LONG, LONG, LONG);

	@NativeType("void")
	public static void vkDestroyAccelerationStructureKHR(@NativeType("VkDevice*") long device, @NativeType("VkAccelerationStructureKHR*") /*optional, external sync*/ long accelerationStructure, @NativeType("VkAllocationCallbacks*") /*optional*/ long pAllocator) {
		try {
			vkDestroyAccelerationStructureKHR.invokeExact(device, accelerationStructure, pAllocator);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdBuildAccelerationStructuresKHR = createHandle("vkCmdBuildAccelerationStructuresKHR", VOID, LONG, INT, LONG, LONG);

	@NativeType("void")
	public static void vkCmdBuildAccelerationStructuresKHR(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("uint32_t") int infoCount, @NativeType("VkAccelerationStructureBuildGeometryInfoKHR*") long pInfos, @NativeType("VkAccelerationStructureBuildRangeInfoKHR*") long ppBuildRangeInfos) {
		try {
			vkCmdBuildAccelerationStructuresKHR.invokeExact(commandBuffer, infoCount, pInfos, ppBuildRangeInfos);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdBuildAccelerationStructuresIndirectKHR = createHandle("vkCmdBuildAccelerationStructuresIndirectKHR", VOID, LONG, INT, LONG, LONG, LONG, LONG);

	@NativeType("void")
	public static void vkCmdBuildAccelerationStructuresIndirectKHR(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("uint32_t") int infoCount, @NativeType("VkAccelerationStructureBuildGeometryInfoKHR*") long pInfos, @NativeType("VkDeviceAddress*") long pIndirectDeviceAddresses, @NativeType("uint32_t*") long pIndirectStrides, @NativeType("uint32_t*") long ppMaxPrimitiveCounts) {
		try {
			vkCmdBuildAccelerationStructuresIndirectKHR.invokeExact(commandBuffer, infoCount, pInfos, pIndirectDeviceAddresses, pIndirectStrides, ppMaxPrimitiveCounts);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkBuildAccelerationStructuresKHR = createHandle("vkBuildAccelerationStructuresKHR", INT, LONG, LONG, INT, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS,VK_OPERATION_DEFERRED_KHR,VK_OPERATION_NOT_DEFERRED_KHR
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkBuildAccelerationStructuresKHR(@NativeType("VkDevice*") long device, @NativeType("VkDeferredOperationKHR*") /*optional*/ long deferredOperation, @NativeType("uint32_t") int infoCount, @NativeType("VkAccelerationStructureBuildGeometryInfoKHR*") long pInfos, @NativeType("VkAccelerationStructureBuildRangeInfoKHR*") long ppBuildRangeInfos) {
		try {
			return (int) vkBuildAccelerationStructuresKHR.invokeExact(device, deferredOperation, infoCount, pInfos, ppBuildRangeInfos);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCopyAccelerationStructureKHR = createHandle("vkCopyAccelerationStructureKHR", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS,VK_OPERATION_DEFERRED_KHR,VK_OPERATION_NOT_DEFERRED_KHR
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkCopyAccelerationStructureKHR(@NativeType("VkDevice*") long device, @NativeType("VkDeferredOperationKHR*") /*optional*/ long deferredOperation, @NativeType("VkCopyAccelerationStructureInfoKHR*") long pInfo) {
		try {
			return (int) vkCopyAccelerationStructureKHR.invokeExact(device, deferredOperation, pInfo);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCopyAccelerationStructureToMemoryKHR = createHandle("vkCopyAccelerationStructureToMemoryKHR", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS,VK_OPERATION_DEFERRED_KHR,VK_OPERATION_NOT_DEFERRED_KHR
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkCopyAccelerationStructureToMemoryKHR(@NativeType("VkDevice*") long device, @NativeType("VkDeferredOperationKHR*") /*optional*/ long deferredOperation, @NativeType("VkCopyAccelerationStructureToMemoryInfoKHR*") long pInfo) {
		try {
			return (int) vkCopyAccelerationStructureToMemoryKHR.invokeExact(device, deferredOperation, pInfo);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCopyMemoryToAccelerationStructureKHR = createHandle("vkCopyMemoryToAccelerationStructureKHR", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS,VK_OPERATION_DEFERRED_KHR,VK_OPERATION_NOT_DEFERRED_KHR
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkCopyMemoryToAccelerationStructureKHR(@NativeType("VkDevice*") long device, @NativeType("VkDeferredOperationKHR*") /*optional*/ long deferredOperation, @NativeType("VkCopyMemoryToAccelerationStructureInfoKHR*") long pInfo) {
		try {
			return (int) vkCopyMemoryToAccelerationStructureKHR.invokeExact(device, deferredOperation, pInfo);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkWriteAccelerationStructuresPropertiesKHR = createHandle("vkWriteAccelerationStructuresPropertiesKHR", INT, LONG, INT, LONG, INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY
	*/
	@NativeType("VkResult")
	public static int vkWriteAccelerationStructuresPropertiesKHR(@NativeType("VkDevice*") long device, @NativeType("uint32_t") int accelerationStructureCount, @NativeType("VkAccelerationStructureKHR**") long pAccelerationStructures, @NativeType("VkQueryType") int queryType, @NativeType("size_t") long dataSize, @NativeType("void*") long pData, @NativeType("size_t") long stride) {
		try {
			return (int) vkWriteAccelerationStructuresPropertiesKHR.invokeExact(device, accelerationStructureCount, pAccelerationStructures, queryType, dataSize, pData, stride);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdCopyAccelerationStructureKHR = createHandle("vkCmdCopyAccelerationStructureKHR", VOID, LONG, LONG);

	@NativeType("void")
	public static void vkCmdCopyAccelerationStructureKHR(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkCopyAccelerationStructureInfoKHR*") long pInfo) {
		try {
			vkCmdCopyAccelerationStructureKHR.invokeExact(commandBuffer, pInfo);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdCopyAccelerationStructureToMemoryKHR = createHandle("vkCmdCopyAccelerationStructureToMemoryKHR", VOID, LONG, LONG);

	@NativeType("void")
	public static void vkCmdCopyAccelerationStructureToMemoryKHR(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkCopyAccelerationStructureToMemoryInfoKHR*") long pInfo) {
		try {
			vkCmdCopyAccelerationStructureToMemoryKHR.invokeExact(commandBuffer, pInfo);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdCopyMemoryToAccelerationStructureKHR = createHandle("vkCmdCopyMemoryToAccelerationStructureKHR", VOID, LONG, LONG);

	@NativeType("void")
	public static void vkCmdCopyMemoryToAccelerationStructureKHR(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("VkCopyMemoryToAccelerationStructureInfoKHR*") long pInfo) {
		try {
			vkCmdCopyMemoryToAccelerationStructureKHR.invokeExact(commandBuffer, pInfo);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkGetAccelerationStructureDeviceAddressKHR = createHandle("vkGetAccelerationStructureDeviceAddressKHR", LONG, LONG, LONG);

	@NativeType("VkDeviceAddress")
	public static long vkGetAccelerationStructureDeviceAddressKHR(@NativeType("VkDevice*") long device, @NativeType("VkAccelerationStructureDeviceAddressInfoKHR*") long pInfo) {
		try {
			return (long) vkGetAccelerationStructureDeviceAddressKHR.invokeExact(device, pInfo);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkCmdWriteAccelerationStructuresPropertiesKHR = createHandle("vkCmdWriteAccelerationStructuresPropertiesKHR", VOID, LONG, INT, LONG, INT, LONG, INT);

	@NativeType("void")
	public static void vkCmdWriteAccelerationStructuresPropertiesKHR(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("uint32_t") int accelerationStructureCount, @NativeType("VkAccelerationStructureKHR**") long pAccelerationStructures, @NativeType("VkQueryType") int queryType, @NativeType("VkQueryPool*") long queryPool, @NativeType("uint32_t") int firstQuery) {
		try {
			vkCmdWriteAccelerationStructuresPropertiesKHR.invokeExact(commandBuffer, accelerationStructureCount, pAccelerationStructures, queryType, queryPool, firstQuery);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkGetDeviceAccelerationStructureCompatibilityKHR = createHandle("vkGetDeviceAccelerationStructureCompatibilityKHR", VOID, LONG, LONG, LONG);

	@NativeType("void")
	public static void vkGetDeviceAccelerationStructureCompatibilityKHR(@NativeType("VkDevice*") long device, @NativeType("VkAccelerationStructureVersionInfoKHR*") long pVersionInfo, @NativeType("VkAccelerationStructureCompatibilityKHR*") long pCompatibility) {
		try {
			vkGetDeviceAccelerationStructureCompatibilityKHR.invokeExact(device, pVersionInfo, pCompatibility);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	private static final MethodHandle vkGetAccelerationStructureBuildSizesKHR = createHandle("vkGetAccelerationStructureBuildSizesKHR", VOID, LONG, INT, LONG, LONG, LONG);

	@NativeType("void")
	public static void vkGetAccelerationStructureBuildSizesKHR(@NativeType("VkDevice*") long device, @NativeType("VkAccelerationStructureBuildTypeKHR") int buildType, @NativeType("VkAccelerationStructureBuildGeometryInfoKHR*") long pBuildInfo, @NativeType("uint32_t*") /*optional*/ long pMaxPrimitiveCounts, @NativeType("VkAccelerationStructureBuildSizesInfoKHR*") long pSizeInfo) {
		try {
			vkGetAccelerationStructureBuildSizesKHR.invokeExact(device, buildType, pBuildInfo, pMaxPrimitiveCounts, pSizeInfo);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	public static final long VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR = 536870912L;
}