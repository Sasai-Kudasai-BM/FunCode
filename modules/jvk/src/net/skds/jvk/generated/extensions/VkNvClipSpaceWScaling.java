package net.skds.jvk.generated.extensions;
import net.skds.jvk.VKDefinitions;
import net.skds.lib.utils.annotations.AutoGenerated;
import static net.skds.ninvoker.NInvoker.*;
import net.skds.jvk.annotation.NativeType;
import java.lang.invoke.MethodHandle;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkNvClipSpaceWScaling {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	public static final int VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV = 0;

	public static final int VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV = 0;

	private static final MethodHandle vkCmdSetViewportWScalingNV = createHandle("vkCmdSetViewportWScalingNV", VOID, LONG, INT, INT, LONG);

	@NativeType("void")
	public static void vkCmdSetViewportWScalingNV(@NativeType("VkCommandBuffer*") /*external sync*/ long commandBuffer, @NativeType("uint32_t") int firstViewport, @NativeType("uint32_t") int viewportCount, @NativeType("VkViewportWScalingNV*") long pViewportWScalings) {
		try {
			vkCmdSetViewportWScalingNV.invokeExact(commandBuffer, firstViewport, viewportCount, pViewportWScalings);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}