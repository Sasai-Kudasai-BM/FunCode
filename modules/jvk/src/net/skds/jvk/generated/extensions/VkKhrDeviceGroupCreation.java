package net.skds.jvk.generated.extensions;
import net.skds.jvk.annotation.NativeType;
import static net.skds.ninvoker.NInvoker.*;
import java.lang.invoke.MethodHandle;
import net.skds.jvk.VKDefinitions;
import net.skds.lib.utils.annotations.AutoGenerated;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkKhrDeviceGroupCreation {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR = 0;

	public static final int VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR = 1;

	private static final MethodHandle vkEnumeratePhysicalDeviceGroupsKHR = createHandle("vkEnumeratePhysicalDeviceGroupsKHR", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS,VK_INCOMPLETE
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED
	*/
	@NativeType("VkResult")
	public static int vkEnumeratePhysicalDeviceGroupsKHR(@NativeType("VkInstance*") long instance, @NativeType("uint32_t*") /*optional*/ long pPhysicalDeviceGroupCount, @NativeType("VkPhysicalDeviceGroupProperties*") /*optional*/ long pPhysicalDeviceGroupProperties) {
		try {
			return (int) vkEnumeratePhysicalDeviceGroupsKHR.invokeExact(instance, pPhysicalDeviceGroupCount, pPhysicalDeviceGroupProperties);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}

	public static final int VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR = 2;
}