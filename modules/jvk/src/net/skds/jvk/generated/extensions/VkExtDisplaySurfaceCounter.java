package net.skds.jvk.generated.extensions;
import net.skds.jvk.VKDefinitions;
import net.skds.lib.utils.annotations.AutoGenerated;
import static net.skds.ninvoker.NInvoker.*;
import net.skds.jvk.annotation.NativeType;
import java.lang.invoke.MethodHandle;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkExtDisplaySurfaceCounter {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	public static final int VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT = 0;

	// Backwards-compatible alias containing a typo

	/**
	* Backwards-compatible alias containing a typo
	*/
	public static final int VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT = 0;

	private static final MethodHandle vkGetPhysicalDeviceSurfaceCapabilities2EXT = createHandle("vkGetPhysicalDeviceSurfaceCapabilities2EXT", INT, LONG, LONG, LONG);

	/**
	* successcodes = VK_SUCCESS
	* errorcodes = VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR
	*/
	@NativeType("VkResult")
	public static int vkGetPhysicalDeviceSurfaceCapabilities2EXT(@NativeType("VkPhysicalDevice*") long physicalDevice, @NativeType("VkSurfaceKHR*") long surface, @NativeType("VkSurfaceCapabilities2EXT*") long pSurfaceCapabilities) {
		try {
			return (int) vkGetPhysicalDeviceSurfaceCapabilities2EXT.invokeExact(physicalDevice, surface, pSurfaceCapabilities);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}