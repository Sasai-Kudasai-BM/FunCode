package net.skds.jvk.generated.extensions;
import net.skds.jvk.VKDefinitions;
import net.skds.lib.utils.annotations.AutoGenerated;
import static net.skds.ninvoker.NInvoker.*;
import net.skds.jvk.annotation.NativeType;
import java.lang.invoke.MethodHandle;

@AutoGenerated
@SuppressWarnings("unused")
public final class VkKhrMaintenance1 {


	public static final boolean INITIALIZED = VKDefinitions.INITIALIZED;

	// Backwards-compatible alias containing a typo

	// Backwards-compatible alias containing a typo

	public static final int VK_ERROR_OUT_OF_POOL_MEMORY_KHR = 0;

	public static final int VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR = 16384;

	public static final int VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR = 32768;

	public static final int VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR = 32;

	private static final MethodHandle vkTrimCommandPoolKHR = createHandle("vkTrimCommandPoolKHR", VOID, LONG, LONG, INT);

	@NativeType("void")
	public static void vkTrimCommandPoolKHR(@NativeType("VkDevice*") long device, @NativeType("VkCommandPool*") /*external sync*/ long commandPool, @NativeType("VkCommandPoolTrimFlags") /*optional*/ int flags) {
		try {
			vkTrimCommandPoolKHR.invokeExact(device, commandPool, flags);
		} catch (Throwable e) { throw new RuntimeException(e); }
	}
}